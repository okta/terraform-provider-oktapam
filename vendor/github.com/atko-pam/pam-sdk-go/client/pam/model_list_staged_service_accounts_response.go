/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ListStagedServiceAccountsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStagedServiceAccountsResponse{}

// ListStagedServiceAccountsResponse struct for ListStagedServiceAccountsResponse
type ListStagedServiceAccountsResponse struct {
	List []StagedServiceAccount `json:"list,omitempty"`
}

// NewListStagedServiceAccountsResponse instantiates a new ListStagedServiceAccountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStagedServiceAccountsResponse() *ListStagedServiceAccountsResponse {
	this := ListStagedServiceAccountsResponse{}
	return &this
}

// NewListStagedServiceAccountsResponseWithDefaults instantiates a new ListStagedServiceAccountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStagedServiceAccountsResponseWithDefaults() *ListStagedServiceAccountsResponse {
	this := ListStagedServiceAccountsResponse{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *ListStagedServiceAccountsResponse) GetList() []StagedServiceAccount {
	if o == nil || IsNil(o.List) {
		var ret []StagedServiceAccount
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStagedServiceAccountsResponse) GetListOk() ([]StagedServiceAccount, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *ListStagedServiceAccountsResponse) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []StagedServiceAccount and assigns it to the List field.
func (o *ListStagedServiceAccountsResponse) SetList(v []StagedServiceAccount) *ListStagedServiceAccountsResponse {
	o.List = v
	return o
}

func (o ListStagedServiceAccountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStagedServiceAccountsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableListStagedServiceAccountsResponse struct {
	value *ListStagedServiceAccountsResponse
	isSet bool
}

func (v NullableListStagedServiceAccountsResponse) Get() *ListStagedServiceAccountsResponse {
	return v.value
}

func (v *NullableListStagedServiceAccountsResponse) Set(val *ListStagedServiceAccountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListStagedServiceAccountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListStagedServiceAccountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStagedServiceAccountsResponse(val *ListStagedServiceAccountsResponse) *NullableListStagedServiceAccountsResponse {
	return &NullableListStagedServiceAccountsResponse{value: val, isSet: true}
}

func (v NullableListStagedServiceAccountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStagedServiceAccountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
