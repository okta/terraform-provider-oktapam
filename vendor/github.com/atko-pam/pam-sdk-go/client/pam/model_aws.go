/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the Aws type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Aws{}

// Aws struct for Aws
type Aws struct {
	// Type of this Resource object
	Type             *string      `json:"_type,omitempty"`
	AccountId        string       `json:"account_id"`
	AvailabilityZone string       `json:"availability_zone"`
	InstanceId       string       `json:"instance_id"`
	InstanceType     *string      `json:"instance_type,omitempty"`
	Networks         []AWSNetwork `json:"networks,omitempty"`
	// IP Address
	PublicIpV4 *string `json:"public_ip_v4,omitempty"`
}

// NewAws instantiates a new Aws object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAws(accountId string, availabilityZone string, instanceId string) *Aws {
	this := Aws{}
	this.AccountId = accountId
	this.AvailabilityZone = availabilityZone
	this.InstanceId = instanceId
	return &this
}

// NewAwsWithDefaults instantiates a new Aws object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsWithDefaults() *Aws {
	this := Aws{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Aws) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aws) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Aws) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Aws) SetType(v string) *Aws {
	o.Type = &v
	return o
}

// GetAccountId returns the AccountId field value
func (o *Aws) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Aws) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Aws) SetAccountId(v string) *Aws {
	o.AccountId = v
	return o
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *Aws) GetAvailabilityZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *Aws) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *Aws) SetAvailabilityZone(v string) *Aws {
	o.AvailabilityZone = v
	return o
}

// GetInstanceId returns the InstanceId field value
func (o *Aws) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *Aws) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *Aws) SetInstanceId(v string) *Aws {
	o.InstanceId = v
	return o
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *Aws) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aws) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *Aws) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *Aws) SetInstanceType(v string) *Aws {
	o.InstanceType = &v
	return o
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *Aws) GetNetworks() []AWSNetwork {
	if o == nil || IsNil(o.Networks) {
		var ret []AWSNetwork
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aws) GetNetworksOk() ([]AWSNetwork, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *Aws) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []AWSNetwork and assigns it to the Networks field.
func (o *Aws) SetNetworks(v []AWSNetwork) *Aws {
	o.Networks = v
	return o
}

// GetPublicIpV4 returns the PublicIpV4 field value if set, zero value otherwise.
func (o *Aws) GetPublicIpV4() string {
	if o == nil || IsNil(o.PublicIpV4) {
		var ret string
		return ret
	}
	return *o.PublicIpV4
}

// GetPublicIpV4Ok returns a tuple with the PublicIpV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aws) GetPublicIpV4Ok() (*string, bool) {
	if o == nil || IsNil(o.PublicIpV4) {
		return nil, false
	}
	return o.PublicIpV4, true
}

// HasPublicIpV4 returns a boolean if a field has been set.
func (o *Aws) HasPublicIpV4() bool {
	if o != nil && !IsNil(o.PublicIpV4) {
		return true
	}

	return false
}

// SetPublicIpV4 gets a reference to the given string and assigns it to the PublicIpV4 field.
func (o *Aws) SetPublicIpV4(v string) *Aws {
	o.PublicIpV4 = &v
	return o
}

func (o Aws) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Aws) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["_type"] = o.Type
	}
	toSerialize["account_id"] = o.AccountId
	toSerialize["availability_zone"] = o.AvailabilityZone
	toSerialize["instance_id"] = o.InstanceId
	if !IsNil(o.InstanceType) {
		toSerialize["instance_type"] = o.InstanceType
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.PublicIpV4) {
		toSerialize["public_ip_v4"] = o.PublicIpV4
	}
	return toSerialize, nil
}

type NullableAws struct {
	value *Aws
	isSet bool
}

func (v NullableAws) Get() *Aws {
	return v.value
}

func (v *NullableAws) Set(val *Aws) {
	v.value = val
	v.isSet = true
}

func (v NullableAws) IsSet() bool {
	return v.isSet
}

func (v *NullableAws) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAws(val *Aws) *NullableAws {
	return &NullableAws{value: val, isSet: true}
}

func (v NullableAws) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAws) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
