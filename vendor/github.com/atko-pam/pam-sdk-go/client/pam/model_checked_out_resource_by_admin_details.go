/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the CheckedOutResourceByAdminDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckedOutResourceByAdminDetails{}

// CheckedOutResourceByAdminDetails struct for CheckedOutResourceByAdminDetails
type CheckedOutResourceByAdminDetails struct {
	// The UUID of the resource
	ResourceId   string               `json:"resource_id"`
	ResourceType CheckoutResourceType `json:"resource_type"`
	// The timestamp when the resource was checked out
	CheckoutAt time.Time `json:"checkout_at"`
	// The timestamp when the resource lease expires
	CheckoutExpiryAt time.Time `json:"checkout_expiry_at"`
	// The UUID of the user or system responsible for the last checkin
	CheckinBy *string `json:"checkin_by,omitempty"`
	// The timestamp when the resource checkin process started
	CheckinStartAt *time.Time   `json:"checkin_start_at,omitempty"`
	CheckinType    *CheckinType `json:"checkin_type,omitempty"`
	// The name of the resource. Only returned if a `resource_type` query was specified.
	ResourceName    *string                                         `json:"resource_name,omitempty"`
	ResourceDetails *CheckedOutResourceByUserDetailsResourceDetails `json:"resource_details,omitempty"`
	// The username of the user who checked out the resource
	CheckoutByUsername *string                     `json:"checkout_by_username,omitempty"`
	ResourceStatus     *ResourceAvailabilityStatus `json:"resource_status,omitempty"`
}

// NewCheckedOutResourceByAdminDetails instantiates a new CheckedOutResourceByAdminDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckedOutResourceByAdminDetails(resourceId string, resourceType CheckoutResourceType, checkoutAt time.Time, checkoutExpiryAt time.Time) *CheckedOutResourceByAdminDetails {
	this := CheckedOutResourceByAdminDetails{}
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.CheckoutAt = checkoutAt
	this.CheckoutExpiryAt = checkoutExpiryAt
	return &this
}

// NewCheckedOutResourceByAdminDetailsWithDefaults instantiates a new CheckedOutResourceByAdminDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckedOutResourceByAdminDetailsWithDefaults() *CheckedOutResourceByAdminDetails {
	this := CheckedOutResourceByAdminDetails{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *CheckedOutResourceByAdminDetails) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *CheckedOutResourceByAdminDetails) SetResourceId(v string) *CheckedOutResourceByAdminDetails {
	o.ResourceId = v
	return o
}

// GetResourceType returns the ResourceType field value
func (o *CheckedOutResourceByAdminDetails) GetResourceType() CheckoutResourceType {
	if o == nil {
		var ret CheckoutResourceType
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetResourceTypeOk() (*CheckoutResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *CheckedOutResourceByAdminDetails) SetResourceType(v CheckoutResourceType) *CheckedOutResourceByAdminDetails {
	o.ResourceType = v
	return o
}

// GetCheckoutAt returns the CheckoutAt field value
func (o *CheckedOutResourceByAdminDetails) GetCheckoutAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CheckoutAt
}

// GetCheckoutAtOk returns a tuple with the CheckoutAt field value
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckoutAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckoutAt, true
}

// SetCheckoutAt sets field value
func (o *CheckedOutResourceByAdminDetails) SetCheckoutAt(v time.Time) *CheckedOutResourceByAdminDetails {
	o.CheckoutAt = v
	return o
}

// GetCheckoutExpiryAt returns the CheckoutExpiryAt field value
func (o *CheckedOutResourceByAdminDetails) GetCheckoutExpiryAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CheckoutExpiryAt
}

// GetCheckoutExpiryAtOk returns a tuple with the CheckoutExpiryAt field value
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckoutExpiryAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckoutExpiryAt, true
}

// SetCheckoutExpiryAt sets field value
func (o *CheckedOutResourceByAdminDetails) SetCheckoutExpiryAt(v time.Time) *CheckedOutResourceByAdminDetails {
	o.CheckoutExpiryAt = v
	return o
}

// GetCheckinBy returns the CheckinBy field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetCheckinBy() string {
	if o == nil || IsNil(o.CheckinBy) {
		var ret string
		return ret
	}
	return *o.CheckinBy
}

// GetCheckinByOk returns a tuple with the CheckinBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckinByOk() (*string, bool) {
	if o == nil || IsNil(o.CheckinBy) {
		return nil, false
	}
	return o.CheckinBy, true
}

// HasCheckinBy returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasCheckinBy() bool {
	if o != nil && !IsNil(o.CheckinBy) {
		return true
	}

	return false
}

// SetCheckinBy gets a reference to the given string and assigns it to the CheckinBy field.
func (o *CheckedOutResourceByAdminDetails) SetCheckinBy(v string) *CheckedOutResourceByAdminDetails {
	o.CheckinBy = &v
	return o
}

// GetCheckinStartAt returns the CheckinStartAt field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetCheckinStartAt() time.Time {
	if o == nil || IsNil(o.CheckinStartAt) {
		var ret time.Time
		return ret
	}
	return *o.CheckinStartAt
}

// GetCheckinStartAtOk returns a tuple with the CheckinStartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckinStartAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CheckinStartAt) {
		return nil, false
	}
	return o.CheckinStartAt, true
}

// HasCheckinStartAt returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasCheckinStartAt() bool {
	if o != nil && !IsNil(o.CheckinStartAt) {
		return true
	}

	return false
}

// SetCheckinStartAt gets a reference to the given time.Time and assigns it to the CheckinStartAt field.
func (o *CheckedOutResourceByAdminDetails) SetCheckinStartAt(v time.Time) *CheckedOutResourceByAdminDetails {
	o.CheckinStartAt = &v
	return o
}

// GetCheckinType returns the CheckinType field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetCheckinType() CheckinType {
	if o == nil || IsNil(o.CheckinType) {
		var ret CheckinType
		return ret
	}
	return *o.CheckinType
}

// GetCheckinTypeOk returns a tuple with the CheckinType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckinTypeOk() (*CheckinType, bool) {
	if o == nil || IsNil(o.CheckinType) {
		return nil, false
	}
	return o.CheckinType, true
}

// HasCheckinType returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasCheckinType() bool {
	if o != nil && !IsNil(o.CheckinType) {
		return true
	}

	return false
}

// SetCheckinType gets a reference to the given CheckinType and assigns it to the CheckinType field.
func (o *CheckedOutResourceByAdminDetails) SetCheckinType(v CheckinType) *CheckedOutResourceByAdminDetails {
	o.CheckinType = &v
	return o
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *CheckedOutResourceByAdminDetails) SetResourceName(v string) *CheckedOutResourceByAdminDetails {
	o.ResourceName = &v
	return o
}

// GetResourceDetails returns the ResourceDetails field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetResourceDetails() CheckedOutResourceByUserDetailsResourceDetails {
	if o == nil || IsNil(o.ResourceDetails) {
		var ret CheckedOutResourceByUserDetailsResourceDetails
		return ret
	}
	return *o.ResourceDetails
}

// GetResourceDetailsOk returns a tuple with the ResourceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetResourceDetailsOk() (*CheckedOutResourceByUserDetailsResourceDetails, bool) {
	if o == nil || IsNil(o.ResourceDetails) {
		return nil, false
	}
	return o.ResourceDetails, true
}

// HasResourceDetails returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasResourceDetails() bool {
	if o != nil && !IsNil(o.ResourceDetails) {
		return true
	}

	return false
}

// SetResourceDetails gets a reference to the given CheckedOutResourceByUserDetailsResourceDetails and assigns it to the ResourceDetails field.
func (o *CheckedOutResourceByAdminDetails) SetResourceDetails(v CheckedOutResourceByUserDetailsResourceDetails) *CheckedOutResourceByAdminDetails {
	o.ResourceDetails = &v
	return o
}

// GetCheckoutByUsername returns the CheckoutByUsername field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetCheckoutByUsername() string {
	if o == nil || IsNil(o.CheckoutByUsername) {
		var ret string
		return ret
	}
	return *o.CheckoutByUsername
}

// GetCheckoutByUsernameOk returns a tuple with the CheckoutByUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetCheckoutByUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.CheckoutByUsername) {
		return nil, false
	}
	return o.CheckoutByUsername, true
}

// HasCheckoutByUsername returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasCheckoutByUsername() bool {
	if o != nil && !IsNil(o.CheckoutByUsername) {
		return true
	}

	return false
}

// SetCheckoutByUsername gets a reference to the given string and assigns it to the CheckoutByUsername field.
func (o *CheckedOutResourceByAdminDetails) SetCheckoutByUsername(v string) *CheckedOutResourceByAdminDetails {
	o.CheckoutByUsername = &v
	return o
}

// GetResourceStatus returns the ResourceStatus field value if set, zero value otherwise.
func (o *CheckedOutResourceByAdminDetails) GetResourceStatus() ResourceAvailabilityStatus {
	if o == nil || IsNil(o.ResourceStatus) {
		var ret ResourceAvailabilityStatus
		return ret
	}
	return *o.ResourceStatus
}

// GetResourceStatusOk returns a tuple with the ResourceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedOutResourceByAdminDetails) GetResourceStatusOk() (*ResourceAvailabilityStatus, bool) {
	if o == nil || IsNil(o.ResourceStatus) {
		return nil, false
	}
	return o.ResourceStatus, true
}

// HasResourceStatus returns a boolean if a field has been set.
func (o *CheckedOutResourceByAdminDetails) HasResourceStatus() bool {
	if o != nil && !IsNil(o.ResourceStatus) {
		return true
	}

	return false
}

// SetResourceStatus gets a reference to the given ResourceAvailabilityStatus and assigns it to the ResourceStatus field.
func (o *CheckedOutResourceByAdminDetails) SetResourceStatus(v ResourceAvailabilityStatus) *CheckedOutResourceByAdminDetails {
	o.ResourceStatus = &v
	return o
}

func (o CheckedOutResourceByAdminDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckedOutResourceByAdminDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["checkout_at"] = o.CheckoutAt
	toSerialize["checkout_expiry_at"] = o.CheckoutExpiryAt
	if !IsNil(o.CheckinBy) {
		toSerialize["checkin_by"] = o.CheckinBy
	}
	if !IsNil(o.CheckinStartAt) {
		toSerialize["checkin_start_at"] = o.CheckinStartAt
	}
	if !IsNil(o.CheckinType) {
		toSerialize["checkin_type"] = o.CheckinType
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resource_name"] = o.ResourceName
	}
	if !IsNil(o.ResourceDetails) {
		toSerialize["resource_details"] = o.ResourceDetails
	}
	if !IsNil(o.CheckoutByUsername) {
		toSerialize["checkout_by_username"] = o.CheckoutByUsername
	}
	if !IsNil(o.ResourceStatus) {
		toSerialize["resource_status"] = o.ResourceStatus
	}
	return toSerialize, nil
}

type NullableCheckedOutResourceByAdminDetails struct {
	value *CheckedOutResourceByAdminDetails
	isSet bool
}

func (v NullableCheckedOutResourceByAdminDetails) Get() *CheckedOutResourceByAdminDetails {
	return v.value
}

func (v *NullableCheckedOutResourceByAdminDetails) Set(val *CheckedOutResourceByAdminDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckedOutResourceByAdminDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckedOutResourceByAdminDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckedOutResourceByAdminDetails(val *CheckedOutResourceByAdminDetails) *NullableCheckedOutResourceByAdminDetails {
	return &NullableCheckedOutResourceByAdminDetails{value: val, isSet: true}
}

func (v NullableCheckedOutResourceByAdminDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckedOutResourceByAdminDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
