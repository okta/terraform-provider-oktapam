/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the AppServiceAccountCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppServiceAccountCredentials{}

// AppServiceAccountCredentials Credentials for a SaaS app account
type AppServiceAccountCredentials struct {
	// The password associated with the service account
	Password *string `json:"password,omitempty"`
	// The username associated with the service account
	Username string `json:"username"`
}

// NewAppServiceAccountCredentials instantiates a new AppServiceAccountCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppServiceAccountCredentials(username string) *AppServiceAccountCredentials {
	this := AppServiceAccountCredentials{}
	this.Username = username
	return &this
}

// NewAppServiceAccountCredentialsWithDefaults instantiates a new AppServiceAccountCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppServiceAccountCredentialsWithDefaults() *AppServiceAccountCredentials {
	this := AppServiceAccountCredentials{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AppServiceAccountCredentials) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppServiceAccountCredentials) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AppServiceAccountCredentials) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AppServiceAccountCredentials) SetPassword(v string) *AppServiceAccountCredentials {
	o.Password = &v
	return o
}

// GetUsername returns the Username field value
func (o *AppServiceAccountCredentials) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AppServiceAccountCredentials) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AppServiceAccountCredentials) SetUsername(v string) *AppServiceAccountCredentials {
	o.Username = v
	return o
}

func (o AppServiceAccountCredentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppServiceAccountCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

type NullableAppServiceAccountCredentials struct {
	value *AppServiceAccountCredentials
	isSet bool
}

func (v NullableAppServiceAccountCredentials) Get() *AppServiceAccountCredentials {
	return v.value
}

func (v *NullableAppServiceAccountCredentials) Set(val *AppServiceAccountCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableAppServiceAccountCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableAppServiceAccountCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppServiceAccountCredentials(val *AppServiceAccountCredentials) *NullableAppServiceAccountCredentials {
	return &NullableAppServiceAccountCredentials{value: val, isSet: true}
}

func (v NullableAppServiceAccountCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppServiceAccountCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
