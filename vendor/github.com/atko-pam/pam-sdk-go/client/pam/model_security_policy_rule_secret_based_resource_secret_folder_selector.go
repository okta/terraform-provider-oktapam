/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecurityPolicyRuleSecretBasedResourceSecretFolderSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityPolicyRuleSecretBasedResourceSecretFolderSelector{}

// SecurityPolicyRuleSecretBasedResourceSecretFolderSelector struct for SecurityPolicyRuleSecretBasedResourceSecretFolderSelector
type SecurityPolicyRuleSecretBasedResourceSecretFolderSelector struct {
	Type         string      `json:"_type"`
	SecretFolder NamedObject `json:"secret_folder"`
}

// NewSecurityPolicyRuleSecretBasedResourceSecretFolderSelector instantiates a new SecurityPolicyRuleSecretBasedResourceSecretFolderSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityPolicyRuleSecretBasedResourceSecretFolderSelector(type_ string, secretFolder NamedObject) *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	this := SecurityPolicyRuleSecretBasedResourceSecretFolderSelector{}
	this.Type = type_
	this.SecretFolder = secretFolder
	return &this
}

// NewSecurityPolicyRuleSecretBasedResourceSecretFolderSelectorWithDefaults instantiates a new SecurityPolicyRuleSecretBasedResourceSecretFolderSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityPolicyRuleSecretBasedResourceSecretFolderSelectorWithDefaults() *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	this := SecurityPolicyRuleSecretBasedResourceSecretFolderSelector{}
	return &this
}

// GetType returns the Type field value
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) SetType(v string) *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	o.Type = v
	return o
}

// GetSecretFolder returns the SecretFolder field value
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) GetSecretFolder() NamedObject {
	if o == nil {
		var ret NamedObject
		return ret
	}

	return o.SecretFolder
}

// GetSecretFolderOk returns a tuple with the SecretFolder field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) GetSecretFolderOk() (*NamedObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretFolder, true
}

// SetSecretFolder sets field value
func (o *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) SetSecretFolder(v NamedObject) *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	o.SecretFolder = v
	return o
}

func (o SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_type"] = o.Type
	toSerialize["secret_folder"] = o.SecretFolder
	return toSerialize, nil
}

type NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector struct {
	value *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector
	isSet bool
}

func (v NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) Get() *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	return v.value
}

func (v *NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) Set(val *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector(val *SecurityPolicyRuleSecretBasedResourceSecretFolderSelector) *NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector {
	return &NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector{value: val, isSet: true}
}

func (v NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityPolicyRuleSecretBasedResourceSecretFolderSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
