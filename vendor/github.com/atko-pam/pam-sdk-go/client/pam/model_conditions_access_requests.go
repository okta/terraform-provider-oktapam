/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ConditionsAccessRequests type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConditionsAccessRequests{}

// ConditionsAccessRequests Identifies an existing Request Type in Access Requests
type ConditionsAccessRequests struct {
	// The ID for a specific Request Type
	RequestTypeId *string `json:"request_type_id,omitempty"`
	// The name of a specific Request Type
	RequestTypeName *string `json:"request_type_name,omitempty"`
	// The number of seconds the approval remains valid
	ExpiresAfterSeconds *int32 `json:"expires_after_seconds,omitempty"`
}

// NewConditionsAccessRequests instantiates a new ConditionsAccessRequests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionsAccessRequests() *ConditionsAccessRequests {
	this := ConditionsAccessRequests{}
	return &this
}

// NewConditionsAccessRequestsWithDefaults instantiates a new ConditionsAccessRequests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionsAccessRequestsWithDefaults() *ConditionsAccessRequests {
	this := ConditionsAccessRequests{}
	return &this
}

// GetRequestTypeId returns the RequestTypeId field value if set, zero value otherwise.
func (o *ConditionsAccessRequests) GetRequestTypeId() string {
	if o == nil || IsNil(o.RequestTypeId) {
		var ret string
		return ret
	}
	return *o.RequestTypeId
}

// GetRequestTypeIdOk returns a tuple with the RequestTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionsAccessRequests) GetRequestTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestTypeId) {
		return nil, false
	}
	return o.RequestTypeId, true
}

// HasRequestTypeId returns a boolean if a field has been set.
func (o *ConditionsAccessRequests) HasRequestTypeId() bool {
	if o != nil && !IsNil(o.RequestTypeId) {
		return true
	}

	return false
}

// SetRequestTypeId gets a reference to the given string and assigns it to the RequestTypeId field.
func (o *ConditionsAccessRequests) SetRequestTypeId(v string) *ConditionsAccessRequests {
	o.RequestTypeId = &v
	return o
}

// GetRequestTypeName returns the RequestTypeName field value if set, zero value otherwise.
func (o *ConditionsAccessRequests) GetRequestTypeName() string {
	if o == nil || IsNil(o.RequestTypeName) {
		var ret string
		return ret
	}
	return *o.RequestTypeName
}

// GetRequestTypeNameOk returns a tuple with the RequestTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionsAccessRequests) GetRequestTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.RequestTypeName) {
		return nil, false
	}
	return o.RequestTypeName, true
}

// HasRequestTypeName returns a boolean if a field has been set.
func (o *ConditionsAccessRequests) HasRequestTypeName() bool {
	if o != nil && !IsNil(o.RequestTypeName) {
		return true
	}

	return false
}

// SetRequestTypeName gets a reference to the given string and assigns it to the RequestTypeName field.
func (o *ConditionsAccessRequests) SetRequestTypeName(v string) *ConditionsAccessRequests {
	o.RequestTypeName = &v
	return o
}

// GetExpiresAfterSeconds returns the ExpiresAfterSeconds field value if set, zero value otherwise.
func (o *ConditionsAccessRequests) GetExpiresAfterSeconds() int32 {
	if o == nil || IsNil(o.ExpiresAfterSeconds) {
		var ret int32
		return ret
	}
	return *o.ExpiresAfterSeconds
}

// GetExpiresAfterSecondsOk returns a tuple with the ExpiresAfterSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionsAccessRequests) GetExpiresAfterSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresAfterSeconds) {
		return nil, false
	}
	return o.ExpiresAfterSeconds, true
}

// HasExpiresAfterSeconds returns a boolean if a field has been set.
func (o *ConditionsAccessRequests) HasExpiresAfterSeconds() bool {
	if o != nil && !IsNil(o.ExpiresAfterSeconds) {
		return true
	}

	return false
}

// SetExpiresAfterSeconds gets a reference to the given int32 and assigns it to the ExpiresAfterSeconds field.
func (o *ConditionsAccessRequests) SetExpiresAfterSeconds(v int32) *ConditionsAccessRequests {
	o.ExpiresAfterSeconds = &v
	return o
}

func (o ConditionsAccessRequests) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConditionsAccessRequests) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestTypeId) {
		toSerialize["request_type_id"] = o.RequestTypeId
	}
	if !IsNil(o.RequestTypeName) {
		toSerialize["request_type_name"] = o.RequestTypeName
	}
	if !IsNil(o.ExpiresAfterSeconds) {
		toSerialize["expires_after_seconds"] = o.ExpiresAfterSeconds
	}
	return toSerialize, nil
}

type NullableConditionsAccessRequests struct {
	value *ConditionsAccessRequests
	isSet bool
}

func (v NullableConditionsAccessRequests) Get() *ConditionsAccessRequests {
	return v.value
}

func (v *NullableConditionsAccessRequests) Set(val *ConditionsAccessRequests) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionsAccessRequests) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionsAccessRequests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionsAccessRequests(val *ConditionsAccessRequests) *NullableConditionsAccessRequests {
	return &NullableConditionsAccessRequests{value: val, isSet: true}
}

func (v NullableConditionsAccessRequests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionsAccessRequests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
