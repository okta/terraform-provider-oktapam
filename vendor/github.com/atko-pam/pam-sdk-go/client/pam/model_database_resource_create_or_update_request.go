/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the DatabaseResourceCreateOrUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseResourceCreateOrUpdateRequest{}

// DatabaseResourceCreateOrUpdateRequest struct for DatabaseResourceCreateOrUpdateRequest
type DatabaseResourceCreateOrUpdateRequest struct {
	// The canonical name of the Database Resource
	CanonicalName string       `json:"canonical_name"`
	DatabaseType  DatabaseType `json:"database_type"`
	// The ID of the recipe book which contains the SQL queries used by the Gateway. The recipe book permits customers to override the default SQL used by the system, allowing for customized query execution.
	RecipeBookId *string `json:"recipe_book_id,omitempty"`
	// A selector is composed of key-value pairs and is used to dynamically allocate tasks to Gateways for Database Resources. Only those Gateways that match the criteria defined by the selector are eligible to claim and execute the work.
	ManagementGatewaySelector       *map[string]string              `json:"management_gateway_selector,omitempty"`
	ManagementConnectionDetailsType ManagementConnectionDetailsType `json:"management_connection_details_type"`
	ManagementConnectionDetails     ManagementConnectionDetails     `json:"management_connection_details"`
}

// NewDatabaseResourceCreateOrUpdateRequest instantiates a new DatabaseResourceCreateOrUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseResourceCreateOrUpdateRequest(canonicalName string, databaseType DatabaseType, managementConnectionDetailsType ManagementConnectionDetailsType, managementConnectionDetails ManagementConnectionDetails) *DatabaseResourceCreateOrUpdateRequest {
	this := DatabaseResourceCreateOrUpdateRequest{}
	this.CanonicalName = canonicalName
	this.DatabaseType = databaseType
	this.ManagementConnectionDetailsType = managementConnectionDetailsType
	this.ManagementConnectionDetails = managementConnectionDetails
	return &this
}

// NewDatabaseResourceCreateOrUpdateRequestWithDefaults instantiates a new DatabaseResourceCreateOrUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseResourceCreateOrUpdateRequestWithDefaults() *DatabaseResourceCreateOrUpdateRequest {
	this := DatabaseResourceCreateOrUpdateRequest{}
	return &this
}

// GetCanonicalName returns the CanonicalName field value
func (o *DatabaseResourceCreateOrUpdateRequest) GetCanonicalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CanonicalName
}

// GetCanonicalNameOk returns a tuple with the CanonicalName field value
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetCanonicalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanonicalName, true
}

// SetCanonicalName sets field value
func (o *DatabaseResourceCreateOrUpdateRequest) SetCanonicalName(v string) *DatabaseResourceCreateOrUpdateRequest {
	o.CanonicalName = v
	return o
}

// GetDatabaseType returns the DatabaseType field value
func (o *DatabaseResourceCreateOrUpdateRequest) GetDatabaseType() DatabaseType {
	if o == nil {
		var ret DatabaseType
		return ret
	}

	return o.DatabaseType
}

// GetDatabaseTypeOk returns a tuple with the DatabaseType field value
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetDatabaseTypeOk() (*DatabaseType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseType, true
}

// SetDatabaseType sets field value
func (o *DatabaseResourceCreateOrUpdateRequest) SetDatabaseType(v DatabaseType) *DatabaseResourceCreateOrUpdateRequest {
	o.DatabaseType = v
	return o
}

// GetRecipeBookId returns the RecipeBookId field value if set, zero value otherwise.
func (o *DatabaseResourceCreateOrUpdateRequest) GetRecipeBookId() string {
	if o == nil || IsNil(o.RecipeBookId) {
		var ret string
		return ret
	}
	return *o.RecipeBookId
}

// GetRecipeBookIdOk returns a tuple with the RecipeBookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetRecipeBookIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipeBookId) {
		return nil, false
	}
	return o.RecipeBookId, true
}

// HasRecipeBookId returns a boolean if a field has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) HasRecipeBookId() bool {
	if o != nil && !IsNil(o.RecipeBookId) {
		return true
	}

	return false
}

// SetRecipeBookId gets a reference to the given string and assigns it to the RecipeBookId field.
func (o *DatabaseResourceCreateOrUpdateRequest) SetRecipeBookId(v string) *DatabaseResourceCreateOrUpdateRequest {
	o.RecipeBookId = &v
	return o
}

// GetManagementGatewaySelector returns the ManagementGatewaySelector field value if set, zero value otherwise.
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementGatewaySelector() map[string]string {
	if o == nil || IsNil(o.ManagementGatewaySelector) {
		var ret map[string]string
		return ret
	}
	return *o.ManagementGatewaySelector
}

// GetManagementGatewaySelectorOk returns a tuple with the ManagementGatewaySelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementGatewaySelectorOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ManagementGatewaySelector) {
		return nil, false
	}
	return o.ManagementGatewaySelector, true
}

// HasManagementGatewaySelector returns a boolean if a field has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) HasManagementGatewaySelector() bool {
	if o != nil && !IsNil(o.ManagementGatewaySelector) {
		return true
	}

	return false
}

// SetManagementGatewaySelector gets a reference to the given map[string]string and assigns it to the ManagementGatewaySelector field.
func (o *DatabaseResourceCreateOrUpdateRequest) SetManagementGatewaySelector(v map[string]string) *DatabaseResourceCreateOrUpdateRequest {
	o.ManagementGatewaySelector = &v
	return o
}

// GetManagementConnectionDetailsType returns the ManagementConnectionDetailsType field value
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementConnectionDetailsType() ManagementConnectionDetailsType {
	if o == nil {
		var ret ManagementConnectionDetailsType
		return ret
	}

	return o.ManagementConnectionDetailsType
}

// GetManagementConnectionDetailsTypeOk returns a tuple with the ManagementConnectionDetailsType field value
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementConnectionDetailsTypeOk() (*ManagementConnectionDetailsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagementConnectionDetailsType, true
}

// SetManagementConnectionDetailsType sets field value
func (o *DatabaseResourceCreateOrUpdateRequest) SetManagementConnectionDetailsType(v ManagementConnectionDetailsType) *DatabaseResourceCreateOrUpdateRequest {
	o.ManagementConnectionDetailsType = v
	return o
}

// GetManagementConnectionDetails returns the ManagementConnectionDetails field value
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementConnectionDetails() ManagementConnectionDetails {
	if o == nil {
		var ret ManagementConnectionDetails
		return ret
	}

	return o.ManagementConnectionDetails
}

// GetManagementConnectionDetailsOk returns a tuple with the ManagementConnectionDetails field value
// and a boolean to check if the value has been set.
func (o *DatabaseResourceCreateOrUpdateRequest) GetManagementConnectionDetailsOk() (*ManagementConnectionDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagementConnectionDetails, true
}

// SetManagementConnectionDetails sets field value
func (o *DatabaseResourceCreateOrUpdateRequest) SetManagementConnectionDetails(v ManagementConnectionDetails) *DatabaseResourceCreateOrUpdateRequest {
	o.ManagementConnectionDetails = v
	return o
}

func (o DatabaseResourceCreateOrUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseResourceCreateOrUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canonical_name"] = o.CanonicalName
	toSerialize["database_type"] = o.DatabaseType
	if !IsNil(o.RecipeBookId) {
		toSerialize["recipe_book_id"] = o.RecipeBookId
	}
	if !IsNil(o.ManagementGatewaySelector) {
		toSerialize["management_gateway_selector"] = o.ManagementGatewaySelector
	}
	toSerialize["management_connection_details_type"] = o.ManagementConnectionDetailsType
	toSerialize["management_connection_details"] = o.ManagementConnectionDetails
	return toSerialize, nil
}

type NullableDatabaseResourceCreateOrUpdateRequest struct {
	value *DatabaseResourceCreateOrUpdateRequest
	isSet bool
}

func (v NullableDatabaseResourceCreateOrUpdateRequest) Get() *DatabaseResourceCreateOrUpdateRequest {
	return v.value
}

func (v *NullableDatabaseResourceCreateOrUpdateRequest) Set(val *DatabaseResourceCreateOrUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseResourceCreateOrUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseResourceCreateOrUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseResourceCreateOrUpdateRequest(val *DatabaseResourceCreateOrUpdateRequest) *NullableDatabaseResourceCreateOrUpdateRequest {
	return &NullableDatabaseResourceCreateOrUpdateRequest{value: val, isSet: true}
}

func (v NullableDatabaseResourceCreateOrUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseResourceCreateOrUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
