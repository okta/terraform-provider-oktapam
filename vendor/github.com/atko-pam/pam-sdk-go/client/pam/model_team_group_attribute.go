/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the TeamGroupAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamGroupAttribute{}

// TeamGroupAttribute struct for TeamGroupAttribute
type TeamGroupAttribute struct {
	AttributeName  GroupAttributeName               `json:"attribute_name"`
	AttributeValue TeamGroupAttributeAttributeValue `json:"attribute_value"`
	// The unique identifier for the attribute
	Id string `json:"id"`
	// Indicates if the attribute is managed through SCIM or SAML
	Managed bool `json:"managed"`
}

// NewTeamGroupAttribute instantiates a new TeamGroupAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamGroupAttribute(attributeName GroupAttributeName, attributeValue TeamGroupAttributeAttributeValue, id string, managed bool) *TeamGroupAttribute {
	this := TeamGroupAttribute{}
	this.AttributeName = attributeName
	this.AttributeValue = attributeValue
	this.Id = id
	this.Managed = managed
	return &this
}

// NewTeamGroupAttributeWithDefaults instantiates a new TeamGroupAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamGroupAttributeWithDefaults() *TeamGroupAttribute {
	this := TeamGroupAttribute{}
	return &this
}

// GetAttributeName returns the AttributeName field value
func (o *TeamGroupAttribute) GetAttributeName() GroupAttributeName {
	if o == nil {
		var ret GroupAttributeName
		return ret
	}

	return o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value
// and a boolean to check if the value has been set.
func (o *TeamGroupAttribute) GetAttributeNameOk() (*GroupAttributeName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeName, true
}

// SetAttributeName sets field value
func (o *TeamGroupAttribute) SetAttributeName(v GroupAttributeName) *TeamGroupAttribute {
	o.AttributeName = v
	return o
}

// GetAttributeValue returns the AttributeValue field value
func (o *TeamGroupAttribute) GetAttributeValue() TeamGroupAttributeAttributeValue {
	if o == nil {
		var ret TeamGroupAttributeAttributeValue
		return ret
	}

	return o.AttributeValue
}

// GetAttributeValueOk returns a tuple with the AttributeValue field value
// and a boolean to check if the value has been set.
func (o *TeamGroupAttribute) GetAttributeValueOk() (*TeamGroupAttributeAttributeValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeValue, true
}

// SetAttributeValue sets field value
func (o *TeamGroupAttribute) SetAttributeValue(v TeamGroupAttributeAttributeValue) *TeamGroupAttribute {
	o.AttributeValue = v
	return o
}

// GetId returns the Id field value
func (o *TeamGroupAttribute) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TeamGroupAttribute) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TeamGroupAttribute) SetId(v string) *TeamGroupAttribute {
	o.Id = v
	return o
}

// GetManaged returns the Managed field value
func (o *TeamGroupAttribute) GetManaged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Managed
}

// GetManagedOk returns a tuple with the Managed field value
// and a boolean to check if the value has been set.
func (o *TeamGroupAttribute) GetManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Managed, true
}

// SetManaged sets field value
func (o *TeamGroupAttribute) SetManaged(v bool) *TeamGroupAttribute {
	o.Managed = v
	return o
}

func (o TeamGroupAttribute) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamGroupAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute_name"] = o.AttributeName
	toSerialize["attribute_value"] = o.AttributeValue
	toSerialize["id"] = o.Id
	toSerialize["managed"] = o.Managed
	return toSerialize, nil
}

type NullableTeamGroupAttribute struct {
	value *TeamGroupAttribute
	isSet bool
}

func (v NullableTeamGroupAttribute) Get() *TeamGroupAttribute {
	return v.value
}

func (v *NullableTeamGroupAttribute) Set(val *TeamGroupAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamGroupAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamGroupAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamGroupAttribute(val *TeamGroupAttribute) *NullableTeamGroupAttribute {
	return &NullableTeamGroupAttribute{value: val, isSet: true}
}

func (v NullableTeamGroupAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamGroupAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
