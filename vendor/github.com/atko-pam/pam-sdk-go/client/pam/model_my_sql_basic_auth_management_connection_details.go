/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the MySQLBasicAuthManagementConnectionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MySQLBasicAuthManagementConnectionDetails{}

// MySQLBasicAuthManagementConnectionDetails The connection details include Basic Authentication for MySQL database
type MySQLBasicAuthManagementConnectionDetails struct {
	// The hostname of the MySQL management connection
	Hostname string `json:"hostname"`
	// The port of the MySQL management connection
	Port        string                `json:"port"`
	AuthDetails MySQLBasicAuthDetails `json:"auth_details"`
}

// NewMySQLBasicAuthManagementConnectionDetails instantiates a new MySQLBasicAuthManagementConnectionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMySQLBasicAuthManagementConnectionDetails(hostname string, port string, authDetails MySQLBasicAuthDetails) *MySQLBasicAuthManagementConnectionDetails {
	this := MySQLBasicAuthManagementConnectionDetails{}
	this.Hostname = hostname
	this.Port = port
	this.AuthDetails = authDetails
	return &this
}

// NewMySQLBasicAuthManagementConnectionDetailsWithDefaults instantiates a new MySQLBasicAuthManagementConnectionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMySQLBasicAuthManagementConnectionDetailsWithDefaults() *MySQLBasicAuthManagementConnectionDetails {
	this := MySQLBasicAuthManagementConnectionDetails{}
	return &this
}

// GetHostname returns the Hostname field value
func (o *MySQLBasicAuthManagementConnectionDetails) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *MySQLBasicAuthManagementConnectionDetails) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *MySQLBasicAuthManagementConnectionDetails) SetHostname(v string) *MySQLBasicAuthManagementConnectionDetails {
	o.Hostname = v
	return o
}

// GetPort returns the Port field value
func (o *MySQLBasicAuthManagementConnectionDetails) GetPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *MySQLBasicAuthManagementConnectionDetails) GetPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *MySQLBasicAuthManagementConnectionDetails) SetPort(v string) *MySQLBasicAuthManagementConnectionDetails {
	o.Port = v
	return o
}

// GetAuthDetails returns the AuthDetails field value
func (o *MySQLBasicAuthManagementConnectionDetails) GetAuthDetails() MySQLBasicAuthDetails {
	if o == nil {
		var ret MySQLBasicAuthDetails
		return ret
	}

	return o.AuthDetails
}

// GetAuthDetailsOk returns a tuple with the AuthDetails field value
// and a boolean to check if the value has been set.
func (o *MySQLBasicAuthManagementConnectionDetails) GetAuthDetailsOk() (*MySQLBasicAuthDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthDetails, true
}

// SetAuthDetails sets field value
func (o *MySQLBasicAuthManagementConnectionDetails) SetAuthDetails(v MySQLBasicAuthDetails) *MySQLBasicAuthManagementConnectionDetails {
	o.AuthDetails = v
	return o
}

func (o MySQLBasicAuthManagementConnectionDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MySQLBasicAuthManagementConnectionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostname"] = o.Hostname
	toSerialize["port"] = o.Port
	toSerialize["auth_details"] = o.AuthDetails
	return toSerialize, nil
}

type NullableMySQLBasicAuthManagementConnectionDetails struct {
	value *MySQLBasicAuthManagementConnectionDetails
	isSet bool
}

func (v NullableMySQLBasicAuthManagementConnectionDetails) Get() *MySQLBasicAuthManagementConnectionDetails {
	return v.value
}

func (v *NullableMySQLBasicAuthManagementConnectionDetails) Set(val *MySQLBasicAuthManagementConnectionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMySQLBasicAuthManagementConnectionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMySQLBasicAuthManagementConnectionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMySQLBasicAuthManagementConnectionDetails(val *MySQLBasicAuthManagementConnectionDetails) *NullableMySQLBasicAuthManagementConnectionDetails {
	return &NullableMySQLBasicAuthManagementConnectionDetails{value: val, isSet: true}
}

func (v NullableMySQLBasicAuthManagementConnectionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMySQLBasicAuthManagementConnectionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
