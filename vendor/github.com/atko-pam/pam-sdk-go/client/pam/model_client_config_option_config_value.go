/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"fmt"
)

// ClientConfigOptionConfigValue - The value of the Client Configuration Option
type ClientConfigOptionConfigValue struct {
	ForwardClientTrustEnable *ForwardClientTrustEnable
	SshInsecureForwardAgent  *SshInsecureForwardAgent
	SshPortForwardMethod     *SshPortForwardMethod
}

// ForwardClientTrustEnableAsClientConfigOptionConfigValue is a convenience function that returns ForwardClientTrustEnable wrapped in ClientConfigOptionConfigValue
func ForwardClientTrustEnableAsClientConfigOptionConfigValue(v *ForwardClientTrustEnable) ClientConfigOptionConfigValue {
	return ClientConfigOptionConfigValue{
		ForwardClientTrustEnable: v,
	}
}

// SshInsecureForwardAgentAsClientConfigOptionConfigValue is a convenience function that returns SshInsecureForwardAgent wrapped in ClientConfigOptionConfigValue
func SshInsecureForwardAgentAsClientConfigOptionConfigValue(v *SshInsecureForwardAgent) ClientConfigOptionConfigValue {
	return ClientConfigOptionConfigValue{
		SshInsecureForwardAgent: v,
	}
}

// SshPortForwardMethodAsClientConfigOptionConfigValue is a convenience function that returns SshPortForwardMethod wrapped in ClientConfigOptionConfigValue
func SshPortForwardMethodAsClientConfigOptionConfigValue(v *SshPortForwardMethod) ClientConfigOptionConfigValue {
	return ClientConfigOptionConfigValue{
		SshPortForwardMethod: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ClientConfigOptionConfigValue) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ForwardClientTrustEnable
	err = json.Unmarshal(data, &dst.ForwardClientTrustEnable)
	if err == nil {
		jsonForwardClientTrustEnable, _ := json.Marshal(dst.ForwardClientTrustEnable)
		if string(jsonForwardClientTrustEnable) == "{}" { // empty struct
			dst.ForwardClientTrustEnable = nil
		} else {
			match++
		}
	} else {
		dst.ForwardClientTrustEnable = nil
	}

	// try to unmarshal data into SshInsecureForwardAgent
	err = json.Unmarshal(data, &dst.SshInsecureForwardAgent)
	if err == nil {
		jsonSshInsecureForwardAgent, _ := json.Marshal(dst.SshInsecureForwardAgent)
		if string(jsonSshInsecureForwardAgent) == "{}" { // empty struct
			dst.SshInsecureForwardAgent = nil
		} else {
			match++
		}
	} else {
		dst.SshInsecureForwardAgent = nil
	}

	// try to unmarshal data into SshPortForwardMethod
	err = json.Unmarshal(data, &dst.SshPortForwardMethod)
	if err == nil {
		jsonSshPortForwardMethod, _ := json.Marshal(dst.SshPortForwardMethod)
		if string(jsonSshPortForwardMethod) == "{}" { // empty struct
			dst.SshPortForwardMethod = nil
		} else {
			match++
		}
	} else {
		dst.SshPortForwardMethod = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ForwardClientTrustEnable = nil
		dst.SshInsecureForwardAgent = nil
		dst.SshPortForwardMethod = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ClientConfigOptionConfigValue)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ClientConfigOptionConfigValue)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ClientConfigOptionConfigValue) MarshalJSON() ([]byte, error) {
	if src.ForwardClientTrustEnable != nil {
		return json.Marshal(&src.ForwardClientTrustEnable)
	}

	if src.SshInsecureForwardAgent != nil {
		return json.Marshal(&src.SshInsecureForwardAgent)
	}

	if src.SshPortForwardMethod != nil {
		return json.Marshal(&src.SshPortForwardMethod)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ClientConfigOptionConfigValue) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ForwardClientTrustEnable != nil {
		return obj.ForwardClientTrustEnable
	}

	if obj.SshInsecureForwardAgent != nil {
		return obj.SshInsecureForwardAgent
	}

	if obj.SshPortForwardMethod != nil {
		return obj.SshPortForwardMethod
	}

	// all schemas are nil
	return nil
}

type NullableClientConfigOptionConfigValue struct {
	value *ClientConfigOptionConfigValue
	isSet bool
}

func (v NullableClientConfigOptionConfigValue) Get() *ClientConfigOptionConfigValue {
	return v.value
}

func (v *NullableClientConfigOptionConfigValue) Set(val *ClientConfigOptionConfigValue) {
	v.value = val
	v.isSet = true
}

func (v NullableClientConfigOptionConfigValue) IsSet() bool {
	return v.isSet
}

func (v *NullableClientConfigOptionConfigValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientConfigOptionConfigValue(val *ClientConfigOptionConfigValue) *NullableClientConfigOptionConfigValue {
	return &NullableClientConfigOptionConfigValue{value: val, isSet: true}
}

func (v NullableClientConfigOptionConfigValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientConfigOptionConfigValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
