/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ListUAMForActiveDirectoryAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUAMForActiveDirectoryAccountResponse{}

// ListUAMForActiveDirectoryAccountResponse List of `User Access Methods` for an Active Directory account
type ListUAMForActiveDirectoryAccountResponse struct {
	List []UserAccessMethod `json:"list"`
}

// NewListUAMForActiveDirectoryAccountResponse instantiates a new ListUAMForActiveDirectoryAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUAMForActiveDirectoryAccountResponse(list []UserAccessMethod) *ListUAMForActiveDirectoryAccountResponse {
	this := ListUAMForActiveDirectoryAccountResponse{}
	this.List = list
	return &this
}

// NewListUAMForActiveDirectoryAccountResponseWithDefaults instantiates a new ListUAMForActiveDirectoryAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUAMForActiveDirectoryAccountResponseWithDefaults() *ListUAMForActiveDirectoryAccountResponse {
	this := ListUAMForActiveDirectoryAccountResponse{}
	return &this
}

// GetList returns the List field value
func (o *ListUAMForActiveDirectoryAccountResponse) GetList() []UserAccessMethod {
	if o == nil {
		var ret []UserAccessMethod
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ListUAMForActiveDirectoryAccountResponse) GetListOk() ([]UserAccessMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.List, true
}

// SetList sets field value
func (o *ListUAMForActiveDirectoryAccountResponse) SetList(v []UserAccessMethod) *ListUAMForActiveDirectoryAccountResponse {
	o.List = v
	return o
}

func (o ListUAMForActiveDirectoryAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUAMForActiveDirectoryAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableListUAMForActiveDirectoryAccountResponse struct {
	value *ListUAMForActiveDirectoryAccountResponse
	isSet bool
}

func (v NullableListUAMForActiveDirectoryAccountResponse) Get() *ListUAMForActiveDirectoryAccountResponse {
	return v.value
}

func (v *NullableListUAMForActiveDirectoryAccountResponse) Set(val *ListUAMForActiveDirectoryAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListUAMForActiveDirectoryAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListUAMForActiveDirectoryAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUAMForActiveDirectoryAccountResponse(val *ListUAMForActiveDirectoryAccountResponse) *NullableListUAMForActiveDirectoryAccountResponse {
	return &NullableListUAMForActiveDirectoryAccountResponse{value: val, isSet: true}
}

func (v NullableListUAMForActiveDirectoryAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUAMForActiveDirectoryAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
