/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ActiveDirectoryAccountsRevealCredentialsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveDirectoryAccountsRevealCredentialsResponse{}

// ActiveDirectoryAccountsRevealCredentialsResponse struct for ActiveDirectoryAccountsRevealCredentialsResponse
type ActiveDirectoryAccountsRevealCredentialsResponse struct {
	PasswordJwe string `json:"password_jwe"`
}

// NewActiveDirectoryAccountsRevealCredentialsResponse instantiates a new ActiveDirectoryAccountsRevealCredentialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveDirectoryAccountsRevealCredentialsResponse(passwordJwe string) *ActiveDirectoryAccountsRevealCredentialsResponse {
	this := ActiveDirectoryAccountsRevealCredentialsResponse{}
	this.PasswordJwe = passwordJwe
	return &this
}

// NewActiveDirectoryAccountsRevealCredentialsResponseWithDefaults instantiates a new ActiveDirectoryAccountsRevealCredentialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryAccountsRevealCredentialsResponseWithDefaults() *ActiveDirectoryAccountsRevealCredentialsResponse {
	this := ActiveDirectoryAccountsRevealCredentialsResponse{}
	return &this
}

// GetPasswordJwe returns the PasswordJwe field value
func (o *ActiveDirectoryAccountsRevealCredentialsResponse) GetPasswordJwe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordJwe
}

// GetPasswordJweOk returns a tuple with the PasswordJwe field value
// and a boolean to check if the value has been set.
func (o *ActiveDirectoryAccountsRevealCredentialsResponse) GetPasswordJweOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordJwe, true
}

// SetPasswordJwe sets field value
func (o *ActiveDirectoryAccountsRevealCredentialsResponse) SetPasswordJwe(v string) *ActiveDirectoryAccountsRevealCredentialsResponse {
	o.PasswordJwe = v
	return o
}

func (o ActiveDirectoryAccountsRevealCredentialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveDirectoryAccountsRevealCredentialsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password_jwe"] = o.PasswordJwe
	return toSerialize, nil
}

type NullableActiveDirectoryAccountsRevealCredentialsResponse struct {
	value *ActiveDirectoryAccountsRevealCredentialsResponse
	isSet bool
}

func (v NullableActiveDirectoryAccountsRevealCredentialsResponse) Get() *ActiveDirectoryAccountsRevealCredentialsResponse {
	return v.value
}

func (v *NullableActiveDirectoryAccountsRevealCredentialsResponse) Set(val *ActiveDirectoryAccountsRevealCredentialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveDirectoryAccountsRevealCredentialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveDirectoryAccountsRevealCredentialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveDirectoryAccountsRevealCredentialsResponse(val *ActiveDirectoryAccountsRevealCredentialsResponse) *NullableActiveDirectoryAccountsRevealCredentialsResponse {
	return &NullableActiveDirectoryAccountsRevealCredentialsResponse{value: val, isSet: true}
}

func (v NullableActiveDirectoryAccountsRevealCredentialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveDirectoryAccountsRevealCredentialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
