/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ADServerSyncRuleAssignments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADServerSyncRuleAssignments{}

// ADServerSyncRuleAssignments The rules used to assign discovered servers to Projects
type ADServerSyncRuleAssignments struct {
	// The domain to search for servers
	BaseDn *string `json:"base_dn,omitempty"`
	// Defines the criteria used to filter discovered servers
	LdapQueryFilter *string `json:"ldap_query_filter,omitempty"`
	// The priority of this rule assignment
	Priority *string `json:"priority,omitempty"`
	// The UUID for an existing Project. Discovered servers that match the rules are assigned to this Project
	ProjectId *string `json:"project_id,omitempty"`
}

// NewADServerSyncRuleAssignments instantiates a new ADServerSyncRuleAssignments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADServerSyncRuleAssignments() *ADServerSyncRuleAssignments {
	this := ADServerSyncRuleAssignments{}
	return &this
}

// NewADServerSyncRuleAssignmentsWithDefaults instantiates a new ADServerSyncRuleAssignments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADServerSyncRuleAssignmentsWithDefaults() *ADServerSyncRuleAssignments {
	this := ADServerSyncRuleAssignments{}
	return &this
}

// GetBaseDn returns the BaseDn field value if set, zero value otherwise.
func (o *ADServerSyncRuleAssignments) GetBaseDn() string {
	if o == nil || IsNil(o.BaseDn) {
		var ret string
		return ret
	}
	return *o.BaseDn
}

// GetBaseDnOk returns a tuple with the BaseDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncRuleAssignments) GetBaseDnOk() (*string, bool) {
	if o == nil || IsNil(o.BaseDn) {
		return nil, false
	}
	return o.BaseDn, true
}

// HasBaseDn returns a boolean if a field has been set.
func (o *ADServerSyncRuleAssignments) HasBaseDn() bool {
	if o != nil && !IsNil(o.BaseDn) {
		return true
	}

	return false
}

// SetBaseDn gets a reference to the given string and assigns it to the BaseDn field.
func (o *ADServerSyncRuleAssignments) SetBaseDn(v string) *ADServerSyncRuleAssignments {
	o.BaseDn = &v
	return o
}

// GetLdapQueryFilter returns the LdapQueryFilter field value if set, zero value otherwise.
func (o *ADServerSyncRuleAssignments) GetLdapQueryFilter() string {
	if o == nil || IsNil(o.LdapQueryFilter) {
		var ret string
		return ret
	}
	return *o.LdapQueryFilter
}

// GetLdapQueryFilterOk returns a tuple with the LdapQueryFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncRuleAssignments) GetLdapQueryFilterOk() (*string, bool) {
	if o == nil || IsNil(o.LdapQueryFilter) {
		return nil, false
	}
	return o.LdapQueryFilter, true
}

// HasLdapQueryFilter returns a boolean if a field has been set.
func (o *ADServerSyncRuleAssignments) HasLdapQueryFilter() bool {
	if o != nil && !IsNil(o.LdapQueryFilter) {
		return true
	}

	return false
}

// SetLdapQueryFilter gets a reference to the given string and assigns it to the LdapQueryFilter field.
func (o *ADServerSyncRuleAssignments) SetLdapQueryFilter(v string) *ADServerSyncRuleAssignments {
	o.LdapQueryFilter = &v
	return o
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ADServerSyncRuleAssignments) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncRuleAssignments) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ADServerSyncRuleAssignments) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *ADServerSyncRuleAssignments) SetPriority(v string) *ADServerSyncRuleAssignments {
	o.Priority = &v
	return o
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ADServerSyncRuleAssignments) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncRuleAssignments) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ADServerSyncRuleAssignments) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ADServerSyncRuleAssignments) SetProjectId(v string) *ADServerSyncRuleAssignments {
	o.ProjectId = &v
	return o
}

func (o ADServerSyncRuleAssignments) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADServerSyncRuleAssignments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseDn) {
		toSerialize["base_dn"] = o.BaseDn
	}
	if !IsNil(o.LdapQueryFilter) {
		toSerialize["ldap_query_filter"] = o.LdapQueryFilter
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	return toSerialize, nil
}

type NullableADServerSyncRuleAssignments struct {
	value *ADServerSyncRuleAssignments
	isSet bool
}

func (v NullableADServerSyncRuleAssignments) Get() *ADServerSyncRuleAssignments {
	return v.value
}

func (v *NullableADServerSyncRuleAssignments) Set(val *ADServerSyncRuleAssignments) {
	v.value = val
	v.isSet = true
}

func (v NullableADServerSyncRuleAssignments) IsSet() bool {
	return v.isSet
}

func (v *NullableADServerSyncRuleAssignments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADServerSyncRuleAssignments(val *ADServerSyncRuleAssignments) *NullableADServerSyncRuleAssignments {
	return &NullableADServerSyncRuleAssignments{value: val, isSet: true}
}

func (v NullableADServerSyncRuleAssignments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADServerSyncRuleAssignments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
