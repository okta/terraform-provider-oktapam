/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ServiceAccountDetailsAppAccountSub type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountDetailsAppAccountSub{}

// ServiceAccountDetailsAppAccountSub Details for a SaaS app account, which will be managed as a service account
type ServiceAccountDetailsAppAccountSub struct {
	Credentials AppServiceAccountCredentials `json:"credentials"`
	// The Okta app instance ID of the SaaS app
	OktaApplicationId string `json:"oktaApplicationId"`
	// The instance name of the SaaS app
	AppInstanceName *string `json:"appInstanceName,omitempty"`
	// The name of the SaaS app in the Okta Integration Network catalog
	AppGlobalName *string `json:"appGlobalName,omitempty"`
}

// NewServiceAccountDetailsAppAccountSub instantiates a new ServiceAccountDetailsAppAccountSub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountDetailsAppAccountSub(credentials AppServiceAccountCredentials, oktaApplicationId string) *ServiceAccountDetailsAppAccountSub {
	this := ServiceAccountDetailsAppAccountSub{}
	this.Credentials = credentials
	this.OktaApplicationId = oktaApplicationId
	return &this
}

// NewServiceAccountDetailsAppAccountSubWithDefaults instantiates a new ServiceAccountDetailsAppAccountSub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountDetailsAppAccountSubWithDefaults() *ServiceAccountDetailsAppAccountSub {
	this := ServiceAccountDetailsAppAccountSub{}
	return &this
}

// GetCredentials returns the Credentials field value
func (o *ServiceAccountDetailsAppAccountSub) GetCredentials() AppServiceAccountCredentials {
	if o == nil {
		var ret AppServiceAccountCredentials
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsAppAccountSub) GetCredentialsOk() (*AppServiceAccountCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *ServiceAccountDetailsAppAccountSub) SetCredentials(v AppServiceAccountCredentials) *ServiceAccountDetailsAppAccountSub {
	o.Credentials = v
	return o
}

// GetOktaApplicationId returns the OktaApplicationId field value
func (o *ServiceAccountDetailsAppAccountSub) GetOktaApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OktaApplicationId
}

// GetOktaApplicationIdOk returns a tuple with the OktaApplicationId field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsAppAccountSub) GetOktaApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OktaApplicationId, true
}

// SetOktaApplicationId sets field value
func (o *ServiceAccountDetailsAppAccountSub) SetOktaApplicationId(v string) *ServiceAccountDetailsAppAccountSub {
	o.OktaApplicationId = v
	return o
}

// GetAppInstanceName returns the AppInstanceName field value if set, zero value otherwise.
func (o *ServiceAccountDetailsAppAccountSub) GetAppInstanceName() string {
	if o == nil || IsNil(o.AppInstanceName) {
		var ret string
		return ret
	}
	return *o.AppInstanceName
}

// GetAppInstanceNameOk returns a tuple with the AppInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsAppAccountSub) GetAppInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppInstanceName) {
		return nil, false
	}
	return o.AppInstanceName, true
}

// HasAppInstanceName returns a boolean if a field has been set.
func (o *ServiceAccountDetailsAppAccountSub) HasAppInstanceName() bool {
	if o != nil && !IsNil(o.AppInstanceName) {
		return true
	}

	return false
}

// SetAppInstanceName gets a reference to the given string and assigns it to the AppInstanceName field.
func (o *ServiceAccountDetailsAppAccountSub) SetAppInstanceName(v string) *ServiceAccountDetailsAppAccountSub {
	o.AppInstanceName = &v
	return o
}

// GetAppGlobalName returns the AppGlobalName field value if set, zero value otherwise.
func (o *ServiceAccountDetailsAppAccountSub) GetAppGlobalName() string {
	if o == nil || IsNil(o.AppGlobalName) {
		var ret string
		return ret
	}
	return *o.AppGlobalName
}

// GetAppGlobalNameOk returns a tuple with the AppGlobalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsAppAccountSub) GetAppGlobalNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppGlobalName) {
		return nil, false
	}
	return o.AppGlobalName, true
}

// HasAppGlobalName returns a boolean if a field has been set.
func (o *ServiceAccountDetailsAppAccountSub) HasAppGlobalName() bool {
	if o != nil && !IsNil(o.AppGlobalName) {
		return true
	}

	return false
}

// SetAppGlobalName gets a reference to the given string and assigns it to the AppGlobalName field.
func (o *ServiceAccountDetailsAppAccountSub) SetAppGlobalName(v string) *ServiceAccountDetailsAppAccountSub {
	o.AppGlobalName = &v
	return o
}

func (o ServiceAccountDetailsAppAccountSub) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountDetailsAppAccountSub) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credentials"] = o.Credentials
	toSerialize["oktaApplicationId"] = o.OktaApplicationId
	if !IsNil(o.AppInstanceName) {
		toSerialize["appInstanceName"] = o.AppInstanceName
	}
	if !IsNil(o.AppGlobalName) {
		toSerialize["appGlobalName"] = o.AppGlobalName
	}
	return toSerialize, nil
}

type NullableServiceAccountDetailsAppAccountSub struct {
	value *ServiceAccountDetailsAppAccountSub
	isSet bool
}

func (v NullableServiceAccountDetailsAppAccountSub) Get() *ServiceAccountDetailsAppAccountSub {
	return v.value
}

func (v *NullableServiceAccountDetailsAppAccountSub) Set(val *ServiceAccountDetailsAppAccountSub) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountDetailsAppAccountSub) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountDetailsAppAccountSub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountDetailsAppAccountSub(val *ServiceAccountDetailsAppAccountSub) *NullableServiceAccountDetailsAppAccountSub {
	return &NullableServiceAccountDetailsAppAccountSub{value: val, isSet: true}
}

func (v NullableServiceAccountDetailsAppAccountSub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountDetailsAppAccountSub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
