/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ListAllCheckedOutResourcesByAdminResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAllCheckedOutResourcesByAdminResponse{}

// ListAllCheckedOutResourcesByAdminResponse struct for ListAllCheckedOutResourcesByAdminResponse
type ListAllCheckedOutResourcesByAdminResponse struct {
	List []CheckedOutResourceByAdminDetails `json:"list,omitempty"`
}

// NewListAllCheckedOutResourcesByAdminResponse instantiates a new ListAllCheckedOutResourcesByAdminResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAllCheckedOutResourcesByAdminResponse() *ListAllCheckedOutResourcesByAdminResponse {
	this := ListAllCheckedOutResourcesByAdminResponse{}
	return &this
}

// NewListAllCheckedOutResourcesByAdminResponseWithDefaults instantiates a new ListAllCheckedOutResourcesByAdminResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAllCheckedOutResourcesByAdminResponseWithDefaults() *ListAllCheckedOutResourcesByAdminResponse {
	this := ListAllCheckedOutResourcesByAdminResponse{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *ListAllCheckedOutResourcesByAdminResponse) GetList() []CheckedOutResourceByAdminDetails {
	if o == nil || IsNil(o.List) {
		var ret []CheckedOutResourceByAdminDetails
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAllCheckedOutResourcesByAdminResponse) GetListOk() ([]CheckedOutResourceByAdminDetails, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *ListAllCheckedOutResourcesByAdminResponse) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []CheckedOutResourceByAdminDetails and assigns it to the List field.
func (o *ListAllCheckedOutResourcesByAdminResponse) SetList(v []CheckedOutResourceByAdminDetails) *ListAllCheckedOutResourcesByAdminResponse {
	o.List = v
	return o
}

func (o ListAllCheckedOutResourcesByAdminResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAllCheckedOutResourcesByAdminResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableListAllCheckedOutResourcesByAdminResponse struct {
	value *ListAllCheckedOutResourcesByAdminResponse
	isSet bool
}

func (v NullableListAllCheckedOutResourcesByAdminResponse) Get() *ListAllCheckedOutResourcesByAdminResponse {
	return v.value
}

func (v *NullableListAllCheckedOutResourcesByAdminResponse) Set(val *ListAllCheckedOutResourcesByAdminResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAllCheckedOutResourcesByAdminResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAllCheckedOutResourcesByAdminResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAllCheckedOutResourcesByAdminResponse(val *ListAllCheckedOutResourcesByAdminResponse) *NullableListAllCheckedOutResourcesByAdminResponse {
	return &NullableListAllCheckedOutResourcesByAdminResponse{value: val, isSet: true}
}

func (v NullableListAllCheckedOutResourcesByAdminResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAllCheckedOutResourcesByAdminResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
