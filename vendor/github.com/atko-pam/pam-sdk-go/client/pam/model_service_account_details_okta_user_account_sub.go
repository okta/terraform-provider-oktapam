/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ServiceAccountDetailsOktaUserAccountSub type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountDetailsOktaUserAccountSub{}

// ServiceAccountDetailsOktaUserAccountSub Details for managing an Okta user as a service account
type ServiceAccountDetailsOktaUserAccountSub struct {
	// The ID of the Okta user to manage as a service account
	OktaUserId string `json:"oktaUserId"`
	// The email address for the Okta user
	Email       *string                            `json:"email,omitempty"`
	Credentials *OktaUserServiceAccountCredentials `json:"credentials,omitempty"`
}

// NewServiceAccountDetailsOktaUserAccountSub instantiates a new ServiceAccountDetailsOktaUserAccountSub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountDetailsOktaUserAccountSub(oktaUserId string) *ServiceAccountDetailsOktaUserAccountSub {
	this := ServiceAccountDetailsOktaUserAccountSub{}
	this.OktaUserId = oktaUserId
	return &this
}

// NewServiceAccountDetailsOktaUserAccountSubWithDefaults instantiates a new ServiceAccountDetailsOktaUserAccountSub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountDetailsOktaUserAccountSubWithDefaults() *ServiceAccountDetailsOktaUserAccountSub {
	this := ServiceAccountDetailsOktaUserAccountSub{}
	return &this
}

// GetOktaUserId returns the OktaUserId field value
func (o *ServiceAccountDetailsOktaUserAccountSub) GetOktaUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OktaUserId
}

// GetOktaUserIdOk returns a tuple with the OktaUserId field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsOktaUserAccountSub) GetOktaUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OktaUserId, true
}

// SetOktaUserId sets field value
func (o *ServiceAccountDetailsOktaUserAccountSub) SetOktaUserId(v string) *ServiceAccountDetailsOktaUserAccountSub {
	o.OktaUserId = v
	return o
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceAccountDetailsOktaUserAccountSub) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsOktaUserAccountSub) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceAccountDetailsOktaUserAccountSub) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceAccountDetailsOktaUserAccountSub) SetEmail(v string) *ServiceAccountDetailsOktaUserAccountSub {
	o.Email = &v
	return o
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *ServiceAccountDetailsOktaUserAccountSub) GetCredentials() OktaUserServiceAccountCredentials {
	if o == nil || IsNil(o.Credentials) {
		var ret OktaUserServiceAccountCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountDetailsOktaUserAccountSub) GetCredentialsOk() (*OktaUserServiceAccountCredentials, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *ServiceAccountDetailsOktaUserAccountSub) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given OktaUserServiceAccountCredentials and assigns it to the Credentials field.
func (o *ServiceAccountDetailsOktaUserAccountSub) SetCredentials(v OktaUserServiceAccountCredentials) *ServiceAccountDetailsOktaUserAccountSub {
	o.Credentials = &v
	return o
}

func (o ServiceAccountDetailsOktaUserAccountSub) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountDetailsOktaUserAccountSub) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["oktaUserId"] = o.OktaUserId
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableServiceAccountDetailsOktaUserAccountSub struct {
	value *ServiceAccountDetailsOktaUserAccountSub
	isSet bool
}

func (v NullableServiceAccountDetailsOktaUserAccountSub) Get() *ServiceAccountDetailsOktaUserAccountSub {
	return v.value
}

func (v *NullableServiceAccountDetailsOktaUserAccountSub) Set(val *ServiceAccountDetailsOktaUserAccountSub) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountDetailsOktaUserAccountSub) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountDetailsOktaUserAccountSub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountDetailsOktaUserAccountSub(val *ServiceAccountDetailsOktaUserAccountSub) *NullableServiceAccountDetailsOktaUserAccountSub {
	return &NullableServiceAccountDetailsOktaUserAccountSub{value: val, isSet: true}
}

func (v NullableServiceAccountDetailsOktaUserAccountSub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountDetailsOktaUserAccountSub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
