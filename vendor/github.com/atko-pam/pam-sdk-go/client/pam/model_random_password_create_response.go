/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the RandomPasswordCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RandomPasswordCreateResponse{}

// RandomPasswordCreateResponse struct for RandomPasswordCreateResponse
type RandomPasswordCreateResponse struct {
	// The encrypted Password as a fully serialized JWE
	PasswordJwe string `json:"password_jwe"`
}

// NewRandomPasswordCreateResponse instantiates a new RandomPasswordCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandomPasswordCreateResponse(passwordJwe string) *RandomPasswordCreateResponse {
	this := RandomPasswordCreateResponse{}
	this.PasswordJwe = passwordJwe
	return &this
}

// NewRandomPasswordCreateResponseWithDefaults instantiates a new RandomPasswordCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandomPasswordCreateResponseWithDefaults() *RandomPasswordCreateResponse {
	this := RandomPasswordCreateResponse{}
	return &this
}

// GetPasswordJwe returns the PasswordJwe field value
func (o *RandomPasswordCreateResponse) GetPasswordJwe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordJwe
}

// GetPasswordJweOk returns a tuple with the PasswordJwe field value
// and a boolean to check if the value has been set.
func (o *RandomPasswordCreateResponse) GetPasswordJweOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordJwe, true
}

// SetPasswordJwe sets field value
func (o *RandomPasswordCreateResponse) SetPasswordJwe(v string) *RandomPasswordCreateResponse {
	o.PasswordJwe = v
	return o
}

func (o RandomPasswordCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RandomPasswordCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password_jwe"] = o.PasswordJwe
	return toSerialize, nil
}

type NullableRandomPasswordCreateResponse struct {
	value *RandomPasswordCreateResponse
	isSet bool
}

func (v NullableRandomPasswordCreateResponse) Get() *RandomPasswordCreateResponse {
	return v.value
}

func (v *NullableRandomPasswordCreateResponse) Set(val *RandomPasswordCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRandomPasswordCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRandomPasswordCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandomPasswordCreateResponse(val *RandomPasswordCreateResponse) *NullableRandomPasswordCreateResponse {
	return &NullableRandomPasswordCreateResponse{value: val, isSet: true}
}

func (v NullableRandomPasswordCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandomPasswordCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
