/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the GovernanceCampaignResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GovernanceCampaignResults{}

// GovernanceCampaignResults struct for GovernanceCampaignResults
type GovernanceCampaignResults struct {
	// The UUID of the service account
	Id           *string                     `json:"id,omitempty"`
	Status       *ServiceAccountStatus       `json:"status,omitempty"`
	StatusDetail *ServiceAccountStatusDetail `json:"statusDetail,omitempty"`
	// The human-readable name for the service account
	Name string `json:"name"`
	// The description of the service account
	Description *string            `json:"description,omitempty"`
	AccountType ServiceAccountType `json:"accountType"`
	// A list of IDs of the Okta users that own the service account
	OwnerUserIds []string `json:"ownerUserIds,omitempty"`
	// A list of IDs of the Okta groups that own the service account
	OwnerGroupIds []string `json:"ownerGroupIds,omitempty"`
	// Timestamp when the service account was created
	Created *time.Time `json:"created,omitempty"`
	// Timestamp when the service account was last updated
	LastUpdated *time.Time                              `json:"lastUpdated,omitempty"`
	Details     ServiceAccountDetailsOktaUserAccountSub `json:"details"`
	// The type of resource (used for governance)
	ResourceType string                      `json:"resourceType"`
	Principals   []GovernancePolicyPrincipal `json:"principals"`
}

// NewGovernanceCampaignResults instantiates a new GovernanceCampaignResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGovernanceCampaignResults(name string, accountType ServiceAccountType, details ServiceAccountDetailsOktaUserAccountSub, resourceType string, principals []GovernancePolicyPrincipal) *GovernanceCampaignResults {
	this := GovernanceCampaignResults{}
	this.Name = name
	this.AccountType = accountType
	this.Details = details
	this.ResourceType = resourceType
	this.Principals = principals
	return &this
}

// NewGovernanceCampaignResultsWithDefaults instantiates a new GovernanceCampaignResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGovernanceCampaignResultsWithDefaults() *GovernanceCampaignResults {
	this := GovernanceCampaignResults{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GovernanceCampaignResults) SetId(v string) *GovernanceCampaignResults {
	o.Id = &v
	return o
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetStatus() ServiceAccountStatus {
	if o == nil || IsNil(o.Status) {
		var ret ServiceAccountStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetStatusOk() (*ServiceAccountStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceAccountStatus and assigns it to the Status field.
func (o *GovernanceCampaignResults) SetStatus(v ServiceAccountStatus) *GovernanceCampaignResults {
	o.Status = &v
	return o
}

// GetStatusDetail returns the StatusDetail field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetStatusDetail() ServiceAccountStatusDetail {
	if o == nil || IsNil(o.StatusDetail) {
		var ret ServiceAccountStatusDetail
		return ret
	}
	return *o.StatusDetail
}

// GetStatusDetailOk returns a tuple with the StatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetStatusDetailOk() (*ServiceAccountStatusDetail, bool) {
	if o == nil || IsNil(o.StatusDetail) {
		return nil, false
	}
	return o.StatusDetail, true
}

// HasStatusDetail returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasStatusDetail() bool {
	if o != nil && !IsNil(o.StatusDetail) {
		return true
	}

	return false
}

// SetStatusDetail gets a reference to the given ServiceAccountStatusDetail and assigns it to the StatusDetail field.
func (o *GovernanceCampaignResults) SetStatusDetail(v ServiceAccountStatusDetail) *GovernanceCampaignResults {
	o.StatusDetail = &v
	return o
}

// GetName returns the Name field value
func (o *GovernanceCampaignResults) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GovernanceCampaignResults) SetName(v string) *GovernanceCampaignResults {
	o.Name = v
	return o
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GovernanceCampaignResults) SetDescription(v string) *GovernanceCampaignResults {
	o.Description = &v
	return o
}

// GetAccountType returns the AccountType field value
func (o *GovernanceCampaignResults) GetAccountType() ServiceAccountType {
	if o == nil {
		var ret ServiceAccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetAccountTypeOk() (*ServiceAccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *GovernanceCampaignResults) SetAccountType(v ServiceAccountType) *GovernanceCampaignResults {
	o.AccountType = v
	return o
}

// GetOwnerUserIds returns the OwnerUserIds field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetOwnerUserIds() []string {
	if o == nil || IsNil(o.OwnerUserIds) {
		var ret []string
		return ret
	}
	return o.OwnerUserIds
}

// GetOwnerUserIdsOk returns a tuple with the OwnerUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetOwnerUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerUserIds) {
		return nil, false
	}
	return o.OwnerUserIds, true
}

// HasOwnerUserIds returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasOwnerUserIds() bool {
	if o != nil && !IsNil(o.OwnerUserIds) {
		return true
	}

	return false
}

// SetOwnerUserIds gets a reference to the given []string and assigns it to the OwnerUserIds field.
func (o *GovernanceCampaignResults) SetOwnerUserIds(v []string) *GovernanceCampaignResults {
	o.OwnerUserIds = v
	return o
}

// GetOwnerGroupIds returns the OwnerGroupIds field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetOwnerGroupIds() []string {
	if o == nil || IsNil(o.OwnerGroupIds) {
		var ret []string
		return ret
	}
	return o.OwnerGroupIds
}

// GetOwnerGroupIdsOk returns a tuple with the OwnerGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetOwnerGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerGroupIds) {
		return nil, false
	}
	return o.OwnerGroupIds, true
}

// HasOwnerGroupIds returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasOwnerGroupIds() bool {
	if o != nil && !IsNil(o.OwnerGroupIds) {
		return true
	}

	return false
}

// SetOwnerGroupIds gets a reference to the given []string and assigns it to the OwnerGroupIds field.
func (o *GovernanceCampaignResults) SetOwnerGroupIds(v []string) *GovernanceCampaignResults {
	o.OwnerGroupIds = v
	return o
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GovernanceCampaignResults) SetCreated(v time.Time) *GovernanceCampaignResults {
	o.Created = &v
	return o
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *GovernanceCampaignResults) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *GovernanceCampaignResults) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *GovernanceCampaignResults) SetLastUpdated(v time.Time) *GovernanceCampaignResults {
	o.LastUpdated = &v
	return o
}

// GetDetails returns the Details field value
func (o *GovernanceCampaignResults) GetDetails() ServiceAccountDetailsOktaUserAccountSub {
	if o == nil {
		var ret ServiceAccountDetailsOktaUserAccountSub
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetDetailsOk() (*ServiceAccountDetailsOktaUserAccountSub, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *GovernanceCampaignResults) SetDetails(v ServiceAccountDetailsOktaUserAccountSub) *GovernanceCampaignResults {
	o.Details = v
	return o
}

// GetResourceType returns the ResourceType field value
func (o *GovernanceCampaignResults) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *GovernanceCampaignResults) SetResourceType(v string) *GovernanceCampaignResults {
	o.ResourceType = v
	return o
}

// GetPrincipals returns the Principals field value
func (o *GovernanceCampaignResults) GetPrincipals() []GovernancePolicyPrincipal {
	if o == nil {
		var ret []GovernancePolicyPrincipal
		return ret
	}

	return o.Principals
}

// GetPrincipalsOk returns a tuple with the Principals field value
// and a boolean to check if the value has been set.
func (o *GovernanceCampaignResults) GetPrincipalsOk() ([]GovernancePolicyPrincipal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Principals, true
}

// SetPrincipals sets field value
func (o *GovernanceCampaignResults) SetPrincipals(v []GovernancePolicyPrincipal) *GovernanceCampaignResults {
	o.Principals = v
	return o
}

func (o GovernanceCampaignResults) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GovernanceCampaignResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetail) {
		toSerialize["statusDetail"] = o.StatusDetail
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["accountType"] = o.AccountType
	if !IsNil(o.OwnerUserIds) {
		toSerialize["ownerUserIds"] = o.OwnerUserIds
	}
	if !IsNil(o.OwnerGroupIds) {
		toSerialize["ownerGroupIds"] = o.OwnerGroupIds
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	toSerialize["details"] = o.Details
	toSerialize["resourceType"] = o.ResourceType
	toSerialize["principals"] = o.Principals
	return toSerialize, nil
}

type NullableGovernanceCampaignResults struct {
	value *GovernanceCampaignResults
	isSet bool
}

func (v NullableGovernanceCampaignResults) Get() *GovernanceCampaignResults {
	return v.value
}

func (v *NullableGovernanceCampaignResults) Set(val *GovernanceCampaignResults) {
	v.value = val
	v.isSet = true
}

func (v NullableGovernanceCampaignResults) IsSet() bool {
	return v.isSet
}

func (v *NullableGovernanceCampaignResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGovernanceCampaignResults(val *GovernanceCampaignResults) *NullableGovernanceCampaignResults {
	return &NullableGovernanceCampaignResults{value: val, isSet: true}
}

func (v NullableGovernanceCampaignResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGovernanceCampaignResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
