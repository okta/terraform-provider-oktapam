/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the RandomPasswordCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RandomPasswordCreateRequest{}

// RandomPasswordCreateRequest struct for RandomPasswordCreateRequest
type RandomPasswordCreateRequest struct {
	PublicKey        RawJSONWebKey                  `json:"public_key"`
	CharacterOptions RandomPasswordCharacterOptions `json:"character_options"`
	// Symbols that aren't allowed in the password
	ExcludeSymbols *string `json:"exclude_symbols,omitempty"`
	// The desired length for the password
	NumChars int32 `json:"num_chars"`
}

// NewRandomPasswordCreateRequest instantiates a new RandomPasswordCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandomPasswordCreateRequest(publicKey RawJSONWebKey, characterOptions RandomPasswordCharacterOptions, numChars int32) *RandomPasswordCreateRequest {
	this := RandomPasswordCreateRequest{}
	this.PublicKey = publicKey
	this.CharacterOptions = characterOptions
	this.NumChars = numChars
	return &this
}

// NewRandomPasswordCreateRequestWithDefaults instantiates a new RandomPasswordCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandomPasswordCreateRequestWithDefaults() *RandomPasswordCreateRequest {
	this := RandomPasswordCreateRequest{}
	return &this
}

// GetPublicKey returns the PublicKey field value
func (o *RandomPasswordCreateRequest) GetPublicKey() RawJSONWebKey {
	if o == nil {
		var ret RawJSONWebKey
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *RandomPasswordCreateRequest) GetPublicKeyOk() (*RawJSONWebKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *RandomPasswordCreateRequest) SetPublicKey(v RawJSONWebKey) *RandomPasswordCreateRequest {
	o.PublicKey = v
	return o
}

// GetCharacterOptions returns the CharacterOptions field value
func (o *RandomPasswordCreateRequest) GetCharacterOptions() RandomPasswordCharacterOptions {
	if o == nil {
		var ret RandomPasswordCharacterOptions
		return ret
	}

	return o.CharacterOptions
}

// GetCharacterOptionsOk returns a tuple with the CharacterOptions field value
// and a boolean to check if the value has been set.
func (o *RandomPasswordCreateRequest) GetCharacterOptionsOk() (*RandomPasswordCharacterOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterOptions, true
}

// SetCharacterOptions sets field value
func (o *RandomPasswordCreateRequest) SetCharacterOptions(v RandomPasswordCharacterOptions) *RandomPasswordCreateRequest {
	o.CharacterOptions = v
	return o
}

// GetExcludeSymbols returns the ExcludeSymbols field value if set, zero value otherwise.
func (o *RandomPasswordCreateRequest) GetExcludeSymbols() string {
	if o == nil || IsNil(o.ExcludeSymbols) {
		var ret string
		return ret
	}
	return *o.ExcludeSymbols
}

// GetExcludeSymbolsOk returns a tuple with the ExcludeSymbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RandomPasswordCreateRequest) GetExcludeSymbolsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeSymbols) {
		return nil, false
	}
	return o.ExcludeSymbols, true
}

// HasExcludeSymbols returns a boolean if a field has been set.
func (o *RandomPasswordCreateRequest) HasExcludeSymbols() bool {
	if o != nil && !IsNil(o.ExcludeSymbols) {
		return true
	}

	return false
}

// SetExcludeSymbols gets a reference to the given string and assigns it to the ExcludeSymbols field.
func (o *RandomPasswordCreateRequest) SetExcludeSymbols(v string) *RandomPasswordCreateRequest {
	o.ExcludeSymbols = &v
	return o
}

// GetNumChars returns the NumChars field value
func (o *RandomPasswordCreateRequest) GetNumChars() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumChars
}

// GetNumCharsOk returns a tuple with the NumChars field value
// and a boolean to check if the value has been set.
func (o *RandomPasswordCreateRequest) GetNumCharsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumChars, true
}

// SetNumChars sets field value
func (o *RandomPasswordCreateRequest) SetNumChars(v int32) *RandomPasswordCreateRequest {
	o.NumChars = v
	return o
}

func (o RandomPasswordCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RandomPasswordCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["public_key"] = o.PublicKey
	toSerialize["character_options"] = o.CharacterOptions
	if !IsNil(o.ExcludeSymbols) {
		toSerialize["exclude_symbols"] = o.ExcludeSymbols
	}
	toSerialize["num_chars"] = o.NumChars
	return toSerialize, nil
}

type NullableRandomPasswordCreateRequest struct {
	value *RandomPasswordCreateRequest
	isSet bool
}

func (v NullableRandomPasswordCreateRequest) Get() *RandomPasswordCreateRequest {
	return v.value
}

func (v *NullableRandomPasswordCreateRequest) Set(val *RandomPasswordCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRandomPasswordCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRandomPasswordCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandomPasswordCreateRequest(val *RandomPasswordCreateRequest) *NullableRandomPasswordCreateRequest {
	return &NullableRandomPasswordCreateRequest{value: val, isSet: true}
}

func (v NullableRandomPasswordCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandomPasswordCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
