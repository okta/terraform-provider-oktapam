/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the UserAccessMethodServiceAccountDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAccessMethodServiceAccountDetails{}

// UserAccessMethodServiceAccountDetails struct for UserAccessMethodServiceAccountDetails
type UserAccessMethodServiceAccountDetails struct {
	// Type of this resource object
	Type *string `json:"_type,omitempty"`
	// The ID of the service account
	AccountId string `json:"account_id"`
	// A list of privileges granted to a user based on security policies
	Privileges []ServiceAccountPrivilegeContainer `json:"privileges"`
}

// NewUserAccessMethodServiceAccountDetails instantiates a new UserAccessMethodServiceAccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAccessMethodServiceAccountDetails(accountId string, privileges []ServiceAccountPrivilegeContainer) *UserAccessMethodServiceAccountDetails {
	this := UserAccessMethodServiceAccountDetails{}
	this.AccountId = accountId
	this.Privileges = privileges
	return &this
}

// NewUserAccessMethodServiceAccountDetailsWithDefaults instantiates a new UserAccessMethodServiceAccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAccessMethodServiceAccountDetailsWithDefaults() *UserAccessMethodServiceAccountDetails {
	this := UserAccessMethodServiceAccountDetails{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserAccessMethodServiceAccountDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccessMethodServiceAccountDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserAccessMethodServiceAccountDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserAccessMethodServiceAccountDetails) SetType(v string) *UserAccessMethodServiceAccountDetails {
	o.Type = &v
	return o
}

// GetAccountId returns the AccountId field value
func (o *UserAccessMethodServiceAccountDetails) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *UserAccessMethodServiceAccountDetails) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *UserAccessMethodServiceAccountDetails) SetAccountId(v string) *UserAccessMethodServiceAccountDetails {
	o.AccountId = v
	return o
}

// GetPrivileges returns the Privileges field value
func (o *UserAccessMethodServiceAccountDetails) GetPrivileges() []ServiceAccountPrivilegeContainer {
	if o == nil {
		var ret []ServiceAccountPrivilegeContainer
		return ret
	}

	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value
// and a boolean to check if the value has been set.
func (o *UserAccessMethodServiceAccountDetails) GetPrivilegesOk() ([]ServiceAccountPrivilegeContainer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Privileges, true
}

// SetPrivileges sets field value
func (o *UserAccessMethodServiceAccountDetails) SetPrivileges(v []ServiceAccountPrivilegeContainer) *UserAccessMethodServiceAccountDetails {
	o.Privileges = v
	return o
}

func (o UserAccessMethodServiceAccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAccessMethodServiceAccountDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["_type"] = o.Type
	}
	toSerialize["account_id"] = o.AccountId
	toSerialize["privileges"] = o.Privileges
	return toSerialize, nil
}

type NullableUserAccessMethodServiceAccountDetails struct {
	value *UserAccessMethodServiceAccountDetails
	isSet bool
}

func (v NullableUserAccessMethodServiceAccountDetails) Get() *UserAccessMethodServiceAccountDetails {
	return v.value
}

func (v *NullableUserAccessMethodServiceAccountDetails) Set(val *UserAccessMethodServiceAccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAccessMethodServiceAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAccessMethodServiceAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAccessMethodServiceAccountDetails(val *UserAccessMethodServiceAccountDetails) *NullableUserAccessMethodServiceAccountDetails {
	return &NullableUserAccessMethodServiceAccountDetails{value: val, isSet: true}
}

func (v NullableUserAccessMethodServiceAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAccessMethodServiceAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
