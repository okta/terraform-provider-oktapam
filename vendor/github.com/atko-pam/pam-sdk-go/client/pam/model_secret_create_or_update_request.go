/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecretCreateOrUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretCreateOrUpdateRequest{}

// SecretCreateOrUpdateRequest struct for SecretCreateOrUpdateRequest
type SecretCreateOrUpdateRequest struct {
	// The name of the Secret
	Name string `json:"name"`
	// The encrypted Secret as a fully serialized JWE. The secret is encrypted using a public key provided by Okta Privileged Access at /v1/teams/:team_name/vault/jwks.json. The data is encrypted client-side. Generally, it's intended for the secret encryption to be performed by the sft client or Terraform provider.
	SecretJwe EncryptedString `json:"secret_jwe"`
	// The description of the Secret
	Description NullableString `json:"description,omitempty"`
	// The UUID of the Secret's parent folder
	ParentFolderId string `json:"parent_folder_id"`
}

// NewSecretCreateOrUpdateRequest instantiates a new SecretCreateOrUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretCreateOrUpdateRequest(name string, secretJwe EncryptedString, parentFolderId string) *SecretCreateOrUpdateRequest {
	this := SecretCreateOrUpdateRequest{}
	this.Name = name
	this.SecretJwe = secretJwe
	this.ParentFolderId = parentFolderId
	return &this
}

// NewSecretCreateOrUpdateRequestWithDefaults instantiates a new SecretCreateOrUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretCreateOrUpdateRequestWithDefaults() *SecretCreateOrUpdateRequest {
	this := SecretCreateOrUpdateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *SecretCreateOrUpdateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecretCreateOrUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecretCreateOrUpdateRequest) SetName(v string) *SecretCreateOrUpdateRequest {
	o.Name = v
	return o
}

// GetSecretJwe returns the SecretJwe field value
func (o *SecretCreateOrUpdateRequest) GetSecretJwe() EncryptedString {
	if o == nil {
		var ret EncryptedString
		return ret
	}

	return o.SecretJwe
}

// GetSecretJweOk returns a tuple with the SecretJwe field value
// and a boolean to check if the value has been set.
func (o *SecretCreateOrUpdateRequest) GetSecretJweOk() (*EncryptedString, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretJwe, true
}

// SetSecretJwe sets field value
func (o *SecretCreateOrUpdateRequest) SetSecretJwe(v EncryptedString) *SecretCreateOrUpdateRequest {
	o.SecretJwe = v
	return o
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecretCreateOrUpdateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecretCreateOrUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecretCreateOrUpdateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecretCreateOrUpdateRequest) SetDescription(v string) *SecretCreateOrUpdateRequest {
	o.Description.Set(&v)
	return o
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecretCreateOrUpdateRequest) SetDescriptionNil() *SecretCreateOrUpdateRequest {
	o.Description.Set(nil)
	return o
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecretCreateOrUpdateRequest) UnsetDescription() *SecretCreateOrUpdateRequest {
	o.Description.Unset()
	return o
}

// GetParentFolderId returns the ParentFolderId field value
func (o *SecretCreateOrUpdateRequest) GetParentFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value
// and a boolean to check if the value has been set.
func (o *SecretCreateOrUpdateRequest) GetParentFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentFolderId, true
}

// SetParentFolderId sets field value
func (o *SecretCreateOrUpdateRequest) SetParentFolderId(v string) *SecretCreateOrUpdateRequest {
	o.ParentFolderId = v
	return o
}

func (o SecretCreateOrUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretCreateOrUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["secret_jwe"] = o.SecretJwe
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["parent_folder_id"] = o.ParentFolderId
	return toSerialize, nil
}

type NullableSecretCreateOrUpdateRequest struct {
	value *SecretCreateOrUpdateRequest
	isSet bool
}

func (v NullableSecretCreateOrUpdateRequest) Get() *SecretCreateOrUpdateRequest {
	return v.value
}

func (v *NullableSecretCreateOrUpdateRequest) Set(val *SecretCreateOrUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretCreateOrUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretCreateOrUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretCreateOrUpdateRequest(val *SecretCreateOrUpdateRequest) *NullableSecretCreateOrUpdateRequest {
	return &NullableSecretCreateOrUpdateRequest{value: val, isSet: true}
}

func (v NullableSecretCreateOrUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretCreateOrUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
