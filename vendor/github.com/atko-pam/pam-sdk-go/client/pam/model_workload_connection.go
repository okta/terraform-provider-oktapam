/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the WorkloadConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadConnection{}

// WorkloadConnection struct for WorkloadConnection
type WorkloadConnection struct {
	Id string `json:"id"`
	// The name of the workload connection
	Name string `json:"name"`
	// A brief description of the workload connection
	Description string                   `json:"description"`
	Status      WorkloadConnectionStatus `json:"status"`
}

// NewWorkloadConnection instantiates a new WorkloadConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadConnection(id string, name string, description string, status WorkloadConnectionStatus) *WorkloadConnection {
	this := WorkloadConnection{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Status = status
	return &this
}

// NewWorkloadConnectionWithDefaults instantiates a new WorkloadConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadConnectionWithDefaults() *WorkloadConnection {
	this := WorkloadConnection{}
	return &this
}

// GetId returns the Id field value
func (o *WorkloadConnection) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnection) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkloadConnection) SetId(v string) *WorkloadConnection {
	o.Id = v
	return o
}

// GetName returns the Name field value
func (o *WorkloadConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkloadConnection) SetName(v string) *WorkloadConnection {
	o.Name = v
	return o
}

// GetDescription returns the Description field value
func (o *WorkloadConnection) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnection) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *WorkloadConnection) SetDescription(v string) *WorkloadConnection {
	o.Description = v
	return o
}

// GetStatus returns the Status field value
func (o *WorkloadConnection) GetStatus() WorkloadConnectionStatus {
	if o == nil {
		var ret WorkloadConnectionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnection) GetStatusOk() (*WorkloadConnectionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WorkloadConnection) SetStatus(v WorkloadConnectionStatus) *WorkloadConnection {
	o.Status = v
	return o
}

func (o WorkloadConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableWorkloadConnection struct {
	value *WorkloadConnection
	isSet bool
}

func (v NullableWorkloadConnection) Get() *WorkloadConnection {
	return v.value
}

func (v *NullableWorkloadConnection) Set(val *WorkloadConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadConnection(val *WorkloadConnection) *NullableWorkloadConnection {
	return &NullableWorkloadConnection{value: val, isSet: true}
}

func (v NullableWorkloadConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
