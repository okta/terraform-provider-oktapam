/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the OktaUniversalDirectoryAccountCheckedOutResourceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OktaUniversalDirectoryAccountCheckedOutResourceDetails{}

// OktaUniversalDirectoryAccountCheckedOutResourceDetails struct for OktaUniversalDirectoryAccountCheckedOutResourceDetails
type OktaUniversalDirectoryAccountCheckedOutResourceDetails struct {
	// Type of this Resource object
	Type *string `json:"_type,omitempty"`
	// The name of the Okta Application associated with the resource
	AppName *string `json:"app_name,omitempty"`
	// The name of the Universal Directory account associated with the resource
	AccountName *string `json:"account_name,omitempty"`
}

// NewOktaUniversalDirectoryAccountCheckedOutResourceDetails instantiates a new OktaUniversalDirectoryAccountCheckedOutResourceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaUniversalDirectoryAccountCheckedOutResourceDetails() *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	this := OktaUniversalDirectoryAccountCheckedOutResourceDetails{}
	return &this
}

// NewOktaUniversalDirectoryAccountCheckedOutResourceDetailsWithDefaults instantiates a new OktaUniversalDirectoryAccountCheckedOutResourceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaUniversalDirectoryAccountCheckedOutResourceDetailsWithDefaults() *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	this := OktaUniversalDirectoryAccountCheckedOutResourceDetails{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) SetType(v string) *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	o.Type = &v
	return o
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) SetAppName(v string) *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	o.AppName = &v
	return o
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *OktaUniversalDirectoryAccountCheckedOutResourceDetails) SetAccountName(v string) *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	o.AccountName = &v
	return o
}

func (o OktaUniversalDirectoryAccountCheckedOutResourceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OktaUniversalDirectoryAccountCheckedOutResourceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["_type"] = o.Type
	}
	if !IsNil(o.AppName) {
		toSerialize["app_name"] = o.AppName
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	return toSerialize, nil
}

type NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails struct {
	value *OktaUniversalDirectoryAccountCheckedOutResourceDetails
	isSet bool
}

func (v NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) Get() *OktaUniversalDirectoryAccountCheckedOutResourceDetails {
	return v.value
}

func (v *NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) Set(val *OktaUniversalDirectoryAccountCheckedOutResourceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaUniversalDirectoryAccountCheckedOutResourceDetails(val *OktaUniversalDirectoryAccountCheckedOutResourceDetails) *NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails {
	return &NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails{value: val, isSet: true}
}

func (v NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaUniversalDirectoryAccountCheckedOutResourceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
