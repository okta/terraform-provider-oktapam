/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CloudEntitlementJobAnalysis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudEntitlementJobAnalysis{}

// CloudEntitlementJobAnalysis struct for CloudEntitlementJobAnalysis
type CloudEntitlementJobAnalysis struct {
	Rules CloudEntitlementJobAnalysisRules `json:"rules"`
}

// NewCloudEntitlementJobAnalysis instantiates a new CloudEntitlementJobAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudEntitlementJobAnalysis(rules CloudEntitlementJobAnalysisRules) *CloudEntitlementJobAnalysis {
	this := CloudEntitlementJobAnalysis{}
	this.Rules = rules
	return &this
}

// NewCloudEntitlementJobAnalysisWithDefaults instantiates a new CloudEntitlementJobAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudEntitlementJobAnalysisWithDefaults() *CloudEntitlementJobAnalysis {
	this := CloudEntitlementJobAnalysis{}
	return &this
}

// GetRules returns the Rules field value
func (o *CloudEntitlementJobAnalysis) GetRules() CloudEntitlementJobAnalysisRules {
	if o == nil {
		var ret CloudEntitlementJobAnalysisRules
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAnalysis) GetRulesOk() (*CloudEntitlementJobAnalysisRules, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *CloudEntitlementJobAnalysis) SetRules(v CloudEntitlementJobAnalysisRules) *CloudEntitlementJobAnalysis {
	o.Rules = v
	return o
}

func (o CloudEntitlementJobAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudEntitlementJobAnalysis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rules"] = o.Rules
	return toSerialize, nil
}

type NullableCloudEntitlementJobAnalysis struct {
	value *CloudEntitlementJobAnalysis
	isSet bool
}

func (v NullableCloudEntitlementJobAnalysis) Get() *CloudEntitlementJobAnalysis {
	return v.value
}

func (v *NullableCloudEntitlementJobAnalysis) Set(val *CloudEntitlementJobAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudEntitlementJobAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudEntitlementJobAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudEntitlementJobAnalysis(val *CloudEntitlementJobAnalysis) *NullableCloudEntitlementJobAnalysis {
	return &NullableCloudEntitlementJobAnalysis{value: val, isSet: true}
}

func (v NullableCloudEntitlementJobAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudEntitlementJobAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
