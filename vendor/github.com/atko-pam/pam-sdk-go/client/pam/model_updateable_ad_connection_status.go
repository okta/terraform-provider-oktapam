/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// UpdateableADConnectionStatus Statuses that can be updated via the API
type UpdateableADConnectionStatus string

// List of UpdateableADConnectionStatus
const (
	UpdateableADConnectionStatus_CONNECTED    UpdateableADConnectionStatus = "connected"
	UpdateableADConnectionStatus_DISCONNECTED UpdateableADConnectionStatus = "disconnected"
)

// All allowed values of UpdateableADConnectionStatus enum
var AllowedUpdateableADConnectionStatusEnumValues = []UpdateableADConnectionStatus{
	"connected",
	"disconnected",
}

func (v *UpdateableADConnectionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UpdateableADConnectionStatus(value)

	*v = enumTypeValue

	return nil
}

// NewUpdateableADConnectionStatusFromValue returns a pointer to a valid UpdateableADConnectionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUpdateableADConnectionStatusFromValue(v string) (*UpdateableADConnectionStatus, error) {
	ev := UpdateableADConnectionStatus(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UpdateableADConnectionStatus) IsValid() bool {
	for _, existing := range AllowedUpdateableADConnectionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to UpdateableADConnectionStatus value
func (v UpdateableADConnectionStatus) Ptr() *UpdateableADConnectionStatus {
	return &v
}

type NullableUpdateableADConnectionStatus struct {
	value *UpdateableADConnectionStatus
	isSet bool
}

func (v NullableUpdateableADConnectionStatus) Get() *UpdateableADConnectionStatus {
	return v.value
}

func (v *NullableUpdateableADConnectionStatus) Set(val *UpdateableADConnectionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateableADConnectionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateableADConnectionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateableADConnectionStatus(val *UpdateableADConnectionStatus) *NullableUpdateableADConnectionStatus {
	return &NullableUpdateableADConnectionStatus{value: val, isSet: true}
}

func (v NullableUpdateableADConnectionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateableADConnectionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
