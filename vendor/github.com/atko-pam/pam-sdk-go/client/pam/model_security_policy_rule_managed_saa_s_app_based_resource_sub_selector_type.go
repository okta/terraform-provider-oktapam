/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType The type of selector used to target managed SaaS Application based resources
type SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType string

// List of SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType
const (
	SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType_INDIVIDUAL_MANAGED_SAAS_APP_ACCOUNT SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType = "individual_managed_saas_app_account"
)

// All allowed values of SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType enum
var AllowedSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorTypeEnumValues = []SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType{
	"individual_managed_saas_app_account",
}

func (v *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType(value)

	*v = enumTypeValue

	return nil
}

// NewSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorTypeFromValue returns a pointer to a valid SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorTypeFromValue(v string) (*SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType, error) {
	ev := SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) IsValid() bool {
	for _, existing := range AllowedSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType value
func (v SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) Ptr() *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType {
	return &v
}

type NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType struct {
	value *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType
	isSet bool
}

func (v NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) Get() *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType {
	return v.value
}

func (v *NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) Set(val *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType(val *SecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) *NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType {
	return &NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType{value: val, isSet: true}
}

func (v NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityPolicyRuleManagedSaaSAppBasedResourceSubSelectorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
