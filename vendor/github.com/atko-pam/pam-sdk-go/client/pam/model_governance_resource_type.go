/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// GovernanceResourceType The type of resource (used for governance)
type GovernanceResourceType string

// List of GovernanceResourceType
const (
	GovernanceResourceType_SERVICE_ACCOUNT GovernanceResourceType = "service_account"
	GovernanceResourceType_USER            GovernanceResourceType = "user"
)

// All allowed values of GovernanceResourceType enum
var AllowedGovernanceResourceTypeEnumValues = []GovernanceResourceType{
	"service_account",
	"user",
}

func (v *GovernanceResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GovernanceResourceType(value)

	*v = enumTypeValue

	return nil
}

// NewGovernanceResourceTypeFromValue returns a pointer to a valid GovernanceResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGovernanceResourceTypeFromValue(v string) (*GovernanceResourceType, error) {
	ev := GovernanceResourceType(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GovernanceResourceType) IsValid() bool {
	for _, existing := range AllowedGovernanceResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GovernanceResourceType value
func (v GovernanceResourceType) Ptr() *GovernanceResourceType {
	return &v
}

type NullableGovernanceResourceType struct {
	value *GovernanceResourceType
	isSet bool
}

func (v NullableGovernanceResourceType) Get() *GovernanceResourceType {
	return v.value
}

func (v *NullableGovernanceResourceType) Set(val *GovernanceResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableGovernanceResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableGovernanceResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGovernanceResourceType(val *GovernanceResourceType) *NullableGovernanceResourceType {
	return &NullableGovernanceResourceType{value: val, isSet: true}
}

func (v NullableGovernanceResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGovernanceResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
