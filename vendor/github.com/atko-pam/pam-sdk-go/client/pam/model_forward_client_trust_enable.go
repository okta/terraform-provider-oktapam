/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"fmt"
)

// ForwardClientTrustEnable the model 'ForwardClientTrustEnable'
type ForwardClientTrustEnable string

// List of forward_client_trust.enable
const (
	ForwardClientTrustEnable_ALWAYS ForwardClientTrustEnable = "always"
	ForwardClientTrustEnable_ASK    ForwardClientTrustEnable = "ask"
	ForwardClientTrustEnable_NEVER  ForwardClientTrustEnable = "never"
)

// All allowed values of ForwardClientTrustEnable enum
var AllowedForwardClientTrustEnableEnumValues = []ForwardClientTrustEnable{
	"always",
	"ask",
	"never",
}

func (v *ForwardClientTrustEnable) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ForwardClientTrustEnable(value)
	for _, existing := range AllowedForwardClientTrustEnableEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ForwardClientTrustEnable", value)
}

// NewForwardClientTrustEnableFromValue returns a pointer to a valid ForwardClientTrustEnable
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewForwardClientTrustEnableFromValue(v string) (*ForwardClientTrustEnable, error) {
	ev := ForwardClientTrustEnable(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ForwardClientTrustEnable: valid values are %v", v, AllowedForwardClientTrustEnableEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ForwardClientTrustEnable) IsValid() bool {
	for _, existing := range AllowedForwardClientTrustEnableEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to forward_client_trust.enable value
func (v ForwardClientTrustEnable) Ptr() *ForwardClientTrustEnable {
	return &v
}

type NullableForwardClientTrustEnable struct {
	value *ForwardClientTrustEnable
	isSet bool
}

func (v NullableForwardClientTrustEnable) Get() *ForwardClientTrustEnable {
	return v.value
}

func (v *NullableForwardClientTrustEnable) Set(val *ForwardClientTrustEnable) {
	v.value = val
	v.isSet = true
}

func (v NullableForwardClientTrustEnable) IsSet() bool {
	return v.isSet
}

func (v *NullableForwardClientTrustEnable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForwardClientTrustEnable(val *ForwardClientTrustEnable) *NullableForwardClientTrustEnable {
	return &NullableForwardClientTrustEnable{value: val, isSet: true}
}

func (v NullableForwardClientTrustEnable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForwardClientTrustEnable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
