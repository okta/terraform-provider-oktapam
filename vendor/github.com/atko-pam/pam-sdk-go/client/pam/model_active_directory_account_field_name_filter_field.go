/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// ActiveDirectoryAccountFieldNameFilterField Field name for filter expression
type ActiveDirectoryAccountFieldNameFilterField string

// List of ActiveDirectoryAccountFieldNameFilterField
const (
	ActiveDirectoryAccountFieldNameFilterField_ACCOUNT_NAME    ActiveDirectoryAccountFieldNameFilterField = "account_name"
	ActiveDirectoryAccountFieldNameFilterField_OKTA_GROUP_NAME ActiveDirectoryAccountFieldNameFilterField = "okta_group_name"
)

// All allowed values of ActiveDirectoryAccountFieldNameFilterField enum
var AllowedActiveDirectoryAccountFieldNameFilterFieldEnumValues = []ActiveDirectoryAccountFieldNameFilterField{
	"account_name",
	"okta_group_name",
}

func (v *ActiveDirectoryAccountFieldNameFilterField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ActiveDirectoryAccountFieldNameFilterField(value)

	*v = enumTypeValue

	return nil
}

// NewActiveDirectoryAccountFieldNameFilterFieldFromValue returns a pointer to a valid ActiveDirectoryAccountFieldNameFilterField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewActiveDirectoryAccountFieldNameFilterFieldFromValue(v string) (*ActiveDirectoryAccountFieldNameFilterField, error) {
	ev := ActiveDirectoryAccountFieldNameFilterField(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ActiveDirectoryAccountFieldNameFilterField) IsValid() bool {
	for _, existing := range AllowedActiveDirectoryAccountFieldNameFilterFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ActiveDirectoryAccountFieldNameFilterField value
func (v ActiveDirectoryAccountFieldNameFilterField) Ptr() *ActiveDirectoryAccountFieldNameFilterField {
	return &v
}

type NullableActiveDirectoryAccountFieldNameFilterField struct {
	value *ActiveDirectoryAccountFieldNameFilterField
	isSet bool
}

func (v NullableActiveDirectoryAccountFieldNameFilterField) Get() *ActiveDirectoryAccountFieldNameFilterField {
	return v.value
}

func (v *NullableActiveDirectoryAccountFieldNameFilterField) Set(val *ActiveDirectoryAccountFieldNameFilterField) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveDirectoryAccountFieldNameFilterField) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveDirectoryAccountFieldNameFilterField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveDirectoryAccountFieldNameFilterField(val *ActiveDirectoryAccountFieldNameFilterField) *NullableActiveDirectoryAccountFieldNameFilterField {
	return &NullableActiveDirectoryAccountFieldNameFilterField{value: val, isSet: true}
}

func (v NullableActiveDirectoryAccountFieldNameFilterField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveDirectoryAccountFieldNameFilterField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
