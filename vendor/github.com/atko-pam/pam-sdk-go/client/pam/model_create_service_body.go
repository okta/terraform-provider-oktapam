/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CreateServiceBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceBody{}

// CreateServiceBody struct for CreateServiceBody
type CreateServiceBody struct {
	// The UID of the Server User associated with the Service User
	ServerUid string `json:"server_uid"`
	// The UUID of the Service User associated with the Service
	ServiceUserId string `json:"service_user_id"`
}

// NewCreateServiceBody instantiates a new CreateServiceBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceBody(serverUid string, serviceUserId string) *CreateServiceBody {
	this := CreateServiceBody{}
	this.ServerUid = serverUid
	this.ServiceUserId = serviceUserId
	return &this
}

// NewCreateServiceBodyWithDefaults instantiates a new CreateServiceBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceBodyWithDefaults() *CreateServiceBody {
	this := CreateServiceBody{}
	return &this
}

// GetServerUid returns the ServerUid field value
func (o *CreateServiceBody) GetServerUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUid
}

// GetServerUidOk returns a tuple with the ServerUid field value
// and a boolean to check if the value has been set.
func (o *CreateServiceBody) GetServerUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUid, true
}

// SetServerUid sets field value
func (o *CreateServiceBody) SetServerUid(v string) *CreateServiceBody {
	o.ServerUid = v
	return o
}

// GetServiceUserId returns the ServiceUserId field value
func (o *CreateServiceBody) GetServiceUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceUserId
}

// GetServiceUserIdOk returns a tuple with the ServiceUserId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceBody) GetServiceUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceUserId, true
}

// SetServiceUserId sets field value
func (o *CreateServiceBody) SetServiceUserId(v string) *CreateServiceBody {
	o.ServiceUserId = v
	return o
}

func (o CreateServiceBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServiceBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["server_uid"] = o.ServerUid
	toSerialize["service_user_id"] = o.ServiceUserId
	return toSerialize, nil
}

type NullableCreateServiceBody struct {
	value *CreateServiceBody
	isSet bool
}

func (v NullableCreateServiceBody) Get() *CreateServiceBody {
	return v.value
}

func (v *NullableCreateServiceBody) Set(val *CreateServiceBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceBody(val *CreateServiceBody) *NullableCreateServiceBody {
	return &NullableCreateServiceBody{value: val, isSet: true}
}

func (v NullableCreateServiceBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
