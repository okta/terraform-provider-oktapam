/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"fmt"
)

// SshInsecureForwardAgent the model 'SshInsecureForwardAgent'
type SshInsecureForwardAgent string

// List of ssh.insecure_forward_agent
const (
	SshInsecureForwardAgent_HOST SshInsecureForwardAgent = "host"
)

// All allowed values of SshInsecureForwardAgent enum
var AllowedSshInsecureForwardAgentEnumValues = []SshInsecureForwardAgent{
	"host",
}

func (v *SshInsecureForwardAgent) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SshInsecureForwardAgent(value)
	for _, existing := range AllowedSshInsecureForwardAgentEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SshInsecureForwardAgent", value)
}

// NewSshInsecureForwardAgentFromValue returns a pointer to a valid SshInsecureForwardAgent
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSshInsecureForwardAgentFromValue(v string) (*SshInsecureForwardAgent, error) {
	ev := SshInsecureForwardAgent(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SshInsecureForwardAgent: valid values are %v", v, AllowedSshInsecureForwardAgentEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SshInsecureForwardAgent) IsValid() bool {
	for _, existing := range AllowedSshInsecureForwardAgentEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ssh.insecure_forward_agent value
func (v SshInsecureForwardAgent) Ptr() *SshInsecureForwardAgent {
	return &v
}

type NullableSshInsecureForwardAgent struct {
	value *SshInsecureForwardAgent
	isSet bool
}

func (v NullableSshInsecureForwardAgent) Get() *SshInsecureForwardAgent {
	return v.value
}

func (v *NullableSshInsecureForwardAgent) Set(val *SshInsecureForwardAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableSshInsecureForwardAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableSshInsecureForwardAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshInsecureForwardAgent(val *SshInsecureForwardAgent) *NullableSshInsecureForwardAgent {
	return &NullableSshInsecureForwardAgent{value: val, isSet: true}
}

func (v NullableSshInsecureForwardAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshInsecureForwardAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
