/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ADConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADConnectionRequest{}

// ADConnectionRequest struct for ADConnectionRequest
type ADConnectionRequest struct {
	// The domain to query
	Domain string `json:"domain"`
	// A comma-separated list of domain controllers used to query the domain. Can use a hostname or IP address.
	DomainControllers []string `json:"domain_controllers,omitempty"`
	// The UUID of a Gateway
	GatewayId string `json:"gateway_id"`
	// The name of the AD Connection
	Name string `json:"name"`
	// The password of the service account
	ServiceAccountPassword NullableString `json:"service_account_password,omitempty"`
	// The username of a service account used to query the domain
	ServiceAccountUsername NullableString `json:"service_account_username,omitempty"`
}

// NewADConnectionRequest instantiates a new ADConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADConnectionRequest(domain string, gatewayId string, name string) *ADConnectionRequest {
	this := ADConnectionRequest{}
	this.Domain = domain
	this.GatewayId = gatewayId
	this.Name = name
	return &this
}

// NewADConnectionRequestWithDefaults instantiates a new ADConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADConnectionRequestWithDefaults() *ADConnectionRequest {
	this := ADConnectionRequest{}
	return &this
}

// GetDomain returns the Domain field value
func (o *ADConnectionRequest) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ADConnectionRequest) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ADConnectionRequest) SetDomain(v string) *ADConnectionRequest {
	o.Domain = v
	return o
}

// GetDomainControllers returns the DomainControllers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADConnectionRequest) GetDomainControllers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.DomainControllers
}

// GetDomainControllersOk returns a tuple with the DomainControllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADConnectionRequest) GetDomainControllersOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainControllers) {
		return nil, false
	}
	return o.DomainControllers, true
}

// HasDomainControllers returns a boolean if a field has been set.
func (o *ADConnectionRequest) HasDomainControllers() bool {
	if o != nil && IsNil(o.DomainControllers) {
		return true
	}

	return false
}

// SetDomainControllers gets a reference to the given []string and assigns it to the DomainControllers field.
func (o *ADConnectionRequest) SetDomainControllers(v []string) *ADConnectionRequest {
	o.DomainControllers = v
	return o
}

// GetGatewayId returns the GatewayId field value
func (o *ADConnectionRequest) GetGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value
// and a boolean to check if the value has been set.
func (o *ADConnectionRequest) GetGatewayIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayId, true
}

// SetGatewayId sets field value
func (o *ADConnectionRequest) SetGatewayId(v string) *ADConnectionRequest {
	o.GatewayId = v
	return o
}

// GetName returns the Name field value
func (o *ADConnectionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ADConnectionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ADConnectionRequest) SetName(v string) *ADConnectionRequest {
	o.Name = v
	return o
}

// GetServiceAccountPassword returns the ServiceAccountPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADConnectionRequest) GetServiceAccountPassword() string {
	if o == nil || IsNil(o.ServiceAccountPassword.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceAccountPassword.Get()
}

// GetServiceAccountPasswordOk returns a tuple with the ServiceAccountPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADConnectionRequest) GetServiceAccountPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceAccountPassword.Get(), o.ServiceAccountPassword.IsSet()
}

// HasServiceAccountPassword returns a boolean if a field has been set.
func (o *ADConnectionRequest) HasServiceAccountPassword() bool {
	if o != nil && o.ServiceAccountPassword.IsSet() {
		return true
	}

	return false
}

// SetServiceAccountPassword gets a reference to the given NullableString and assigns it to the ServiceAccountPassword field.
func (o *ADConnectionRequest) SetServiceAccountPassword(v string) *ADConnectionRequest {
	o.ServiceAccountPassword.Set(&v)
	return o
}

// SetServiceAccountPasswordNil sets the value for ServiceAccountPassword to be an explicit nil
func (o *ADConnectionRequest) SetServiceAccountPasswordNil() *ADConnectionRequest {
	o.ServiceAccountPassword.Set(nil)
	return o
}

// UnsetServiceAccountPassword ensures that no value is present for ServiceAccountPassword, not even an explicit nil
func (o *ADConnectionRequest) UnsetServiceAccountPassword() *ADConnectionRequest {
	o.ServiceAccountPassword.Unset()
	return o
}

// GetServiceAccountUsername returns the ServiceAccountUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADConnectionRequest) GetServiceAccountUsername() string {
	if o == nil || IsNil(o.ServiceAccountUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceAccountUsername.Get()
}

// GetServiceAccountUsernameOk returns a tuple with the ServiceAccountUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADConnectionRequest) GetServiceAccountUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceAccountUsername.Get(), o.ServiceAccountUsername.IsSet()
}

// HasServiceAccountUsername returns a boolean if a field has been set.
func (o *ADConnectionRequest) HasServiceAccountUsername() bool {
	if o != nil && o.ServiceAccountUsername.IsSet() {
		return true
	}

	return false
}

// SetServiceAccountUsername gets a reference to the given NullableString and assigns it to the ServiceAccountUsername field.
func (o *ADConnectionRequest) SetServiceAccountUsername(v string) *ADConnectionRequest {
	o.ServiceAccountUsername.Set(&v)
	return o
}

// SetServiceAccountUsernameNil sets the value for ServiceAccountUsername to be an explicit nil
func (o *ADConnectionRequest) SetServiceAccountUsernameNil() *ADConnectionRequest {
	o.ServiceAccountUsername.Set(nil)
	return o
}

// UnsetServiceAccountUsername ensures that no value is present for ServiceAccountUsername, not even an explicit nil
func (o *ADConnectionRequest) UnsetServiceAccountUsername() *ADConnectionRequest {
	o.ServiceAccountUsername.Unset()
	return o
}

func (o ADConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	if o.DomainControllers != nil {
		toSerialize["domain_controllers"] = o.DomainControllers
	}
	toSerialize["gateway_id"] = o.GatewayId
	toSerialize["name"] = o.Name
	if o.ServiceAccountPassword.IsSet() {
		toSerialize["service_account_password"] = o.ServiceAccountPassword.Get()
	}
	if o.ServiceAccountUsername.IsSet() {
		toSerialize["service_account_username"] = o.ServiceAccountUsername.Get()
	}
	return toSerialize, nil
}

type NullableADConnectionRequest struct {
	value *ADConnectionRequest
	isSet bool
}

func (v NullableADConnectionRequest) Get() *ADConnectionRequest {
	return v.value
}

func (v *NullableADConnectionRequest) Set(val *ADConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableADConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableADConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADConnectionRequest(val *ADConnectionRequest) *NullableADConnectionRequest {
	return &NullableADConnectionRequest{value: val, isSet: true}
}

func (v NullableADConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
