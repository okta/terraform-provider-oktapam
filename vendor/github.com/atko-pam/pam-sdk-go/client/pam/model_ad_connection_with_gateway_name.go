/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ADConnectionWithGatewayName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADConnectionWithGatewayName{}

// ADConnectionWithGatewayName struct for ADConnectionWithGatewayName
type ADConnectionWithGatewayName struct {
	// The UUID of the currently active AD Task Settings
	ActiveTaskSettingsId string `json:"active_task_settings_id"`
	// The domain to query
	Domain string `json:"domain"`
	// A comma-separated list of domain controllers used to query the domain. Can use a hostname or IP address.
	DomainControllers []string `json:"domain_controllers"`
	// The UUID of a Gateway
	GatewayId string `json:"gateway_id"`
	// The name of a Gateway
	GatewayName string `json:"gateway_name"`
	// The ID of the AD Connection
	Id string `json:"id"`
	// The name of the AD Connection
	Name string `json:"name"`
	// The username of a service account used to query the domain
	ServiceAccountUsername string `json:"service_account_username"`
}

// NewADConnectionWithGatewayName instantiates a new ADConnectionWithGatewayName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADConnectionWithGatewayName(activeTaskSettingsId string, domain string, domainControllers []string, gatewayId string, gatewayName string, id string, name string, serviceAccountUsername string) *ADConnectionWithGatewayName {
	this := ADConnectionWithGatewayName{}
	this.ActiveTaskSettingsId = activeTaskSettingsId
	this.Domain = domain
	this.DomainControllers = domainControllers
	this.GatewayId = gatewayId
	this.GatewayName = gatewayName
	this.Id = id
	this.Name = name
	this.ServiceAccountUsername = serviceAccountUsername
	return &this
}

// NewADConnectionWithGatewayNameWithDefaults instantiates a new ADConnectionWithGatewayName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADConnectionWithGatewayNameWithDefaults() *ADConnectionWithGatewayName {
	this := ADConnectionWithGatewayName{}
	return &this
}

// GetActiveTaskSettingsId returns the ActiveTaskSettingsId field value
func (o *ADConnectionWithGatewayName) GetActiveTaskSettingsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveTaskSettingsId
}

// GetActiveTaskSettingsIdOk returns a tuple with the ActiveTaskSettingsId field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetActiveTaskSettingsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveTaskSettingsId, true
}

// SetActiveTaskSettingsId sets field value
func (o *ADConnectionWithGatewayName) SetActiveTaskSettingsId(v string) *ADConnectionWithGatewayName {
	o.ActiveTaskSettingsId = v
	return o
}

// GetDomain returns the Domain field value
func (o *ADConnectionWithGatewayName) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ADConnectionWithGatewayName) SetDomain(v string) *ADConnectionWithGatewayName {
	o.Domain = v
	return o
}

// GetDomainControllers returns the DomainControllers field value
func (o *ADConnectionWithGatewayName) GetDomainControllers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DomainControllers
}

// GetDomainControllersOk returns a tuple with the DomainControllers field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetDomainControllersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainControllers, true
}

// SetDomainControllers sets field value
func (o *ADConnectionWithGatewayName) SetDomainControllers(v []string) *ADConnectionWithGatewayName {
	o.DomainControllers = v
	return o
}

// GetGatewayId returns the GatewayId field value
func (o *ADConnectionWithGatewayName) GetGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetGatewayIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayId, true
}

// SetGatewayId sets field value
func (o *ADConnectionWithGatewayName) SetGatewayId(v string) *ADConnectionWithGatewayName {
	o.GatewayId = v
	return o
}

// GetGatewayName returns the GatewayName field value
func (o *ADConnectionWithGatewayName) GetGatewayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayName
}

// GetGatewayNameOk returns a tuple with the GatewayName field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetGatewayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayName, true
}

// SetGatewayName sets field value
func (o *ADConnectionWithGatewayName) SetGatewayName(v string) *ADConnectionWithGatewayName {
	o.GatewayName = v
	return o
}

// GetId returns the Id field value
func (o *ADConnectionWithGatewayName) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ADConnectionWithGatewayName) SetId(v string) *ADConnectionWithGatewayName {
	o.Id = v
	return o
}

// GetName returns the Name field value
func (o *ADConnectionWithGatewayName) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ADConnectionWithGatewayName) SetName(v string) *ADConnectionWithGatewayName {
	o.Name = v
	return o
}

// GetServiceAccountUsername returns the ServiceAccountUsername field value
func (o *ADConnectionWithGatewayName) GetServiceAccountUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccountUsername
}

// GetServiceAccountUsernameOk returns a tuple with the ServiceAccountUsername field value
// and a boolean to check if the value has been set.
func (o *ADConnectionWithGatewayName) GetServiceAccountUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccountUsername, true
}

// SetServiceAccountUsername sets field value
func (o *ADConnectionWithGatewayName) SetServiceAccountUsername(v string) *ADConnectionWithGatewayName {
	o.ServiceAccountUsername = v
	return o
}

func (o ADConnectionWithGatewayName) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADConnectionWithGatewayName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_task_settings_id"] = o.ActiveTaskSettingsId
	toSerialize["domain"] = o.Domain
	toSerialize["domain_controllers"] = o.DomainControllers
	toSerialize["gateway_id"] = o.GatewayId
	toSerialize["gateway_name"] = o.GatewayName
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["service_account_username"] = o.ServiceAccountUsername
	return toSerialize, nil
}

type NullableADConnectionWithGatewayName struct {
	value *ADConnectionWithGatewayName
	isSet bool
}

func (v NullableADConnectionWithGatewayName) Get() *ADConnectionWithGatewayName {
	return v.value
}

func (v *NullableADConnectionWithGatewayName) Set(val *ADConnectionWithGatewayName) {
	v.value = val
	v.isSet = true
}

func (v NullableADConnectionWithGatewayName) IsSet() bool {
	return v.isSet
}

func (v *NullableADConnectionWithGatewayName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADConnectionWithGatewayName(val *ADConnectionWithGatewayName) *NullableADConnectionWithGatewayName {
	return &NullableADConnectionWithGatewayName{value: val, isSet: true}
}

func (v NullableADConnectionWithGatewayName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADConnectionWithGatewayName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
