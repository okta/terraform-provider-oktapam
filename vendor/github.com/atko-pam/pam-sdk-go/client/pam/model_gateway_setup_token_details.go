/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"fmt"
)

// GatewaySetupTokenDetails - An object that defines the labels applied to associated Gateways
type GatewaySetupTokenDetails struct {
	GatewayAgent *GatewayAgent
}

// GatewayAgentAsGatewaySetupTokenDetails is a convenience function that returns GatewayAgent wrapped in GatewaySetupTokenDetails
func GatewayAgentAsGatewaySetupTokenDetails(v *GatewayAgent) GatewaySetupTokenDetails {
	return GatewaySetupTokenDetails{
		GatewayAgent: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GatewaySetupTokenDetails) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'gateway-agent'
	if jsonDict["Type"] == "gateway-agent" {
		// try to unmarshal JSON data into GatewayAgent
		err = json.Unmarshal(data, &dst.GatewayAgent)
		if err == nil {
			return nil // data stored in dst.GatewayAgent, return on the first match
		} else {
			dst.GatewayAgent = nil
			return fmt.Errorf("failed to unmarshal GatewaySetupTokenDetails as GatewayAgent: %s", err.Error())
		}
	}

	return nil
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GatewaySetupTokenDetails) MarshalJSON() ([]byte, error) {
	if src.GatewayAgent != nil {
		return json.Marshal(&src.GatewayAgent)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GatewaySetupTokenDetails) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GatewayAgent != nil {
		return obj.GatewayAgent
	}

	// all schemas are nil
	return nil
}

type NullableGatewaySetupTokenDetails struct {
	value *GatewaySetupTokenDetails
	isSet bool
}

func (v NullableGatewaySetupTokenDetails) Get() *GatewaySetupTokenDetails {
	return v.value
}

func (v *NullableGatewaySetupTokenDetails) Set(val *GatewaySetupTokenDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewaySetupTokenDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewaySetupTokenDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewaySetupTokenDetails(val *GatewaySetupTokenDetails) *NullableGatewaySetupTokenDetails {
	return &NullableGatewaySetupTokenDetails{value: val, isSet: true}
}

func (v NullableGatewaySetupTokenDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewaySetupTokenDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
