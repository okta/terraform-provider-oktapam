/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the PrivilegedAccountDetailsOktaUserAccountAllOfDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivilegedAccountDetailsOktaUserAccountAllOfDetails{}

// PrivilegedAccountDetailsOktaUserAccountAllOfDetails struct for PrivilegedAccountDetailsOktaUserAccountAllOfDetails
type PrivilegedAccountDetailsOktaUserAccountAllOfDetails struct {
	// An optional Okta user ID. If supplied, converts the matching Okta Universal Directory Account to a Privileged Account and updates the account with the provided details.
	OktaUserId NullableString `json:"okta_user_id,omitempty"`
	// The email address for the Okta Universal Directory Account
	Email       string                       `json:"email"`
	Credentials PrivilegedAccountCredentials `json:"credentials"`
}

// NewPrivilegedAccountDetailsOktaUserAccountAllOfDetails instantiates a new PrivilegedAccountDetailsOktaUserAccountAllOfDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivilegedAccountDetailsOktaUserAccountAllOfDetails(email string, credentials PrivilegedAccountCredentials) *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	this := PrivilegedAccountDetailsOktaUserAccountAllOfDetails{}
	this.Email = email
	this.Credentials = credentials
	return &this
}

// NewPrivilegedAccountDetailsOktaUserAccountAllOfDetailsWithDefaults instantiates a new PrivilegedAccountDetailsOktaUserAccountAllOfDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivilegedAccountDetailsOktaUserAccountAllOfDetailsWithDefaults() *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	this := PrivilegedAccountDetailsOktaUserAccountAllOfDetails{}
	return &this
}

// GetOktaUserId returns the OktaUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetOktaUserId() string {
	if o == nil || IsNil(o.OktaUserId.Get()) {
		var ret string
		return ret
	}
	return *o.OktaUserId.Get()
}

// GetOktaUserIdOk returns a tuple with the OktaUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetOktaUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OktaUserId.Get(), o.OktaUserId.IsSet()
}

// HasOktaUserId returns a boolean if a field has been set.
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) HasOktaUserId() bool {
	if o != nil && o.OktaUserId.IsSet() {
		return true
	}

	return false
}

// SetOktaUserId gets a reference to the given NullableString and assigns it to the OktaUserId field.
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) SetOktaUserId(v string) *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	o.OktaUserId.Set(&v)
	return o
}

// SetOktaUserIdNil sets the value for OktaUserId to be an explicit nil
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) SetOktaUserIdNil() *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	o.OktaUserId.Set(nil)
	return o
}

// UnsetOktaUserId ensures that no value is present for OktaUserId, not even an explicit nil
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) UnsetOktaUserId() *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	o.OktaUserId.Unset()
	return o
}

// GetEmail returns the Email field value
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) SetEmail(v string) *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	o.Email = v
	return o
}

// GetCredentials returns the Credentials field value
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetCredentials() PrivilegedAccountCredentials {
	if o == nil {
		var ret PrivilegedAccountCredentials
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) GetCredentialsOk() (*PrivilegedAccountCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) SetCredentials(v PrivilegedAccountCredentials) *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	o.Credentials = v
	return o
}

func (o PrivilegedAccountDetailsOktaUserAccountAllOfDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivilegedAccountDetailsOktaUserAccountAllOfDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OktaUserId.IsSet() {
		toSerialize["okta_user_id"] = o.OktaUserId.Get()
	}
	toSerialize["email"] = o.Email
	toSerialize["credentials"] = o.Credentials
	return toSerialize, nil
}

type NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails struct {
	value *PrivilegedAccountDetailsOktaUserAccountAllOfDetails
	isSet bool
}

func (v NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) Get() *PrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	return v.value
}

func (v *NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) Set(val *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails(val *PrivilegedAccountDetailsOktaUserAccountAllOfDetails) *NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails {
	return &NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails{value: val, isSet: true}
}

func (v NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivilegedAccountDetailsOktaUserAccountAllOfDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
