/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecurityPolicyRuleActiveDirectoryResourceSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityPolicyRuleActiveDirectoryResourceSelector{}

// SecurityPolicyRuleActiveDirectoryResourceSelector struct for SecurityPolicyRuleActiveDirectoryResourceSelector
type SecurityPolicyRuleActiveDirectoryResourceSelector struct {
	Type               string                                                       `json:"_type"`
	IndividualAccounts *SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector `json:"individual_accounts,omitempty"`
	SharedAccounts     *SecurityPolicyRuleActiveDirectorySharedAccountsSelector     `json:"shared_accounts,omitempty"`
}

// NewSecurityPolicyRuleActiveDirectoryResourceSelector instantiates a new SecurityPolicyRuleActiveDirectoryResourceSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityPolicyRuleActiveDirectoryResourceSelector(type_ string) *SecurityPolicyRuleActiveDirectoryResourceSelector {
	this := SecurityPolicyRuleActiveDirectoryResourceSelector{}
	this.Type = type_
	return &this
}

// NewSecurityPolicyRuleActiveDirectoryResourceSelectorWithDefaults instantiates a new SecurityPolicyRuleActiveDirectoryResourceSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityPolicyRuleActiveDirectoryResourceSelectorWithDefaults() *SecurityPolicyRuleActiveDirectoryResourceSelector {
	this := SecurityPolicyRuleActiveDirectoryResourceSelector{}
	return &this
}

// GetType returns the Type field value
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) SetType(v string) *SecurityPolicyRuleActiveDirectoryResourceSelector {
	o.Type = v
	return o
}

// GetIndividualAccounts returns the IndividualAccounts field value if set, zero value otherwise.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetIndividualAccounts() SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector {
	if o == nil || IsNil(o.IndividualAccounts) {
		var ret SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector
		return ret
	}
	return *o.IndividualAccounts
}

// GetIndividualAccountsOk returns a tuple with the IndividualAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetIndividualAccountsOk() (*SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector, bool) {
	if o == nil || IsNil(o.IndividualAccounts) {
		return nil, false
	}
	return o.IndividualAccounts, true
}

// HasIndividualAccounts returns a boolean if a field has been set.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) HasIndividualAccounts() bool {
	if o != nil && !IsNil(o.IndividualAccounts) {
		return true
	}

	return false
}

// SetIndividualAccounts gets a reference to the given SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector and assigns it to the IndividualAccounts field.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) SetIndividualAccounts(v SecurityPolicyRuleActiveDirectoryIndividualAccountsSelector) *SecurityPolicyRuleActiveDirectoryResourceSelector {
	o.IndividualAccounts = &v
	return o
}

// GetSharedAccounts returns the SharedAccounts field value if set, zero value otherwise.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetSharedAccounts() SecurityPolicyRuleActiveDirectorySharedAccountsSelector {
	if o == nil || IsNil(o.SharedAccounts) {
		var ret SecurityPolicyRuleActiveDirectorySharedAccountsSelector
		return ret
	}
	return *o.SharedAccounts
}

// GetSharedAccountsOk returns a tuple with the SharedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) GetSharedAccountsOk() (*SecurityPolicyRuleActiveDirectorySharedAccountsSelector, bool) {
	if o == nil || IsNil(o.SharedAccounts) {
		return nil, false
	}
	return o.SharedAccounts, true
}

// HasSharedAccounts returns a boolean if a field has been set.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) HasSharedAccounts() bool {
	if o != nil && !IsNil(o.SharedAccounts) {
		return true
	}

	return false
}

// SetSharedAccounts gets a reference to the given SecurityPolicyRuleActiveDirectorySharedAccountsSelector and assigns it to the SharedAccounts field.
func (o *SecurityPolicyRuleActiveDirectoryResourceSelector) SetSharedAccounts(v SecurityPolicyRuleActiveDirectorySharedAccountsSelector) *SecurityPolicyRuleActiveDirectoryResourceSelector {
	o.SharedAccounts = &v
	return o
}

func (o SecurityPolicyRuleActiveDirectoryResourceSelector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityPolicyRuleActiveDirectoryResourceSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_type"] = o.Type
	if !IsNil(o.IndividualAccounts) {
		toSerialize["individual_accounts"] = o.IndividualAccounts
	}
	if !IsNil(o.SharedAccounts) {
		toSerialize["shared_accounts"] = o.SharedAccounts
	}
	return toSerialize, nil
}

type NullableSecurityPolicyRuleActiveDirectoryResourceSelector struct {
	value *SecurityPolicyRuleActiveDirectoryResourceSelector
	isSet bool
}

func (v NullableSecurityPolicyRuleActiveDirectoryResourceSelector) Get() *SecurityPolicyRuleActiveDirectoryResourceSelector {
	return v.value
}

func (v *NullableSecurityPolicyRuleActiveDirectoryResourceSelector) Set(val *SecurityPolicyRuleActiveDirectoryResourceSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityPolicyRuleActiveDirectoryResourceSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityPolicyRuleActiveDirectoryResourceSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityPolicyRuleActiveDirectoryResourceSelector(val *SecurityPolicyRuleActiveDirectoryResourceSelector) *NullableSecurityPolicyRuleActiveDirectoryResourceSelector {
	return &NullableSecurityPolicyRuleActiveDirectoryResourceSelector{value: val, isSet: true}
}

func (v NullableSecurityPolicyRuleActiveDirectoryResourceSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityPolicyRuleActiveDirectoryResourceSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
