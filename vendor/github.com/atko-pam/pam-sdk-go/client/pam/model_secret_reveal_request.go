/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecretRevealRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretRevealRequest{}

// SecretRevealRequest struct for SecretRevealRequest
type SecretRevealRequest struct {
	PublicKey RawJSONWebKey `json:"public_key"`
}

// NewSecretRevealRequest instantiates a new SecretRevealRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretRevealRequest(publicKey RawJSONWebKey) *SecretRevealRequest {
	this := SecretRevealRequest{}
	this.PublicKey = publicKey
	return &this
}

// NewSecretRevealRequestWithDefaults instantiates a new SecretRevealRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretRevealRequestWithDefaults() *SecretRevealRequest {
	this := SecretRevealRequest{}
	return &this
}

// GetPublicKey returns the PublicKey field value
func (o *SecretRevealRequest) GetPublicKey() RawJSONWebKey {
	if o == nil {
		var ret RawJSONWebKey
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *SecretRevealRequest) GetPublicKeyOk() (*RawJSONWebKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *SecretRevealRequest) SetPublicKey(v RawJSONWebKey) *SecretRevealRequest {
	o.PublicKey = v
	return o
}

func (o SecretRevealRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretRevealRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["public_key"] = o.PublicKey
	return toSerialize, nil
}

type NullableSecretRevealRequest struct {
	value *SecretRevealRequest
	isSet bool
}

func (v NullableSecretRevealRequest) Get() *SecretRevealRequest {
	return v.value
}

func (v *NullableSecretRevealRequest) Set(val *SecretRevealRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretRevealRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretRevealRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretRevealRequest(val *SecretRevealRequest) *NullableSecretRevealRequest {
	return &NullableSecretRevealRequest{value: val, isSet: true}
}

func (v NullableSecretRevealRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretRevealRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
