/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ListADConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListADConnectionResponse{}

// ListADConnectionResponse struct for ListADConnectionResponse
type ListADConnectionResponse struct {
	// The domain to query
	Domain string `json:"domain"`
	// A comma-separated list of domain controllers used to query the domain. Can use a hostname or IP address.
	DomainControllers []string `json:"domain_controllers"`
	// The UUID of a Gateway
	GatewayId string `json:"gateway_id"`
	// The ID of the AD Connection
	Id string `json:"id"`
	// The name of the AD Connection
	Name string `json:"name"`
}

// NewListADConnectionResponse instantiates a new ListADConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListADConnectionResponse(domain string, domainControllers []string, gatewayId string, id string, name string) *ListADConnectionResponse {
	this := ListADConnectionResponse{}
	this.Domain = domain
	this.DomainControllers = domainControllers
	this.GatewayId = gatewayId
	this.Id = id
	this.Name = name
	return &this
}

// NewListADConnectionResponseWithDefaults instantiates a new ListADConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListADConnectionResponseWithDefaults() *ListADConnectionResponse {
	this := ListADConnectionResponse{}
	return &this
}

// GetDomain returns the Domain field value
func (o *ListADConnectionResponse) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ListADConnectionResponse) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ListADConnectionResponse) SetDomain(v string) *ListADConnectionResponse {
	o.Domain = v
	return o
}

// GetDomainControllers returns the DomainControllers field value
func (o *ListADConnectionResponse) GetDomainControllers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DomainControllers
}

// GetDomainControllersOk returns a tuple with the DomainControllers field value
// and a boolean to check if the value has been set.
func (o *ListADConnectionResponse) GetDomainControllersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainControllers, true
}

// SetDomainControllers sets field value
func (o *ListADConnectionResponse) SetDomainControllers(v []string) *ListADConnectionResponse {
	o.DomainControllers = v
	return o
}

// GetGatewayId returns the GatewayId field value
func (o *ListADConnectionResponse) GetGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value
// and a boolean to check if the value has been set.
func (o *ListADConnectionResponse) GetGatewayIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayId, true
}

// SetGatewayId sets field value
func (o *ListADConnectionResponse) SetGatewayId(v string) *ListADConnectionResponse {
	o.GatewayId = v
	return o
}

// GetId returns the Id field value
func (o *ListADConnectionResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListADConnectionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListADConnectionResponse) SetId(v string) *ListADConnectionResponse {
	o.Id = v
	return o
}

// GetName returns the Name field value
func (o *ListADConnectionResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListADConnectionResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListADConnectionResponse) SetName(v string) *ListADConnectionResponse {
	o.Name = v
	return o
}

func (o ListADConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListADConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["domain_controllers"] = o.DomainControllers
	toSerialize["gateway_id"] = o.GatewayId
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableListADConnectionResponse struct {
	value *ListADConnectionResponse
	isSet bool
}

func (v NullableListADConnectionResponse) Get() *ListADConnectionResponse {
	return v.value
}

func (v *NullableListADConnectionResponse) Set(val *ListADConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListADConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListADConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListADConnectionResponse(val *ListADConnectionResponse) *NullableListADConnectionResponse {
	return &NullableListADConnectionResponse{value: val, isSet: true}
}

func (v NullableListADConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListADConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
