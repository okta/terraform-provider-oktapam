/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the StagedServiceAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedServiceAccount{}

// StagedServiceAccount struct for StagedServiceAccount
type StagedServiceAccount struct {
	// The UUID of the service account
	Id          *string             `json:"id,omitempty"`
	AccountType *ServiceAccountType `json:"account_type,omitempty"`
	// A URL pointing to the logo of the app associated with the service account
	LogoUrl *string `json:"logo_url,omitempty"`
	// The name of the app associated with the service account
	ApplicationInstanceName *string `json:"application_instance_name,omitempty"`
	// A human-readable name for the service account
	Name *string `json:"name,omitempty"`
	// The username of the service account
	Username *string `json:"username,omitempty"`
	// A brief description of the service account
	Description *string `json:"description,omitempty"`
	// Whether the password for the service account can be rotated using Okta Lifecycle Management
	LcmSyncPossible *bool `json:"lcm_sync_possible,omitempty"`
}

// NewStagedServiceAccount instantiates a new StagedServiceAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedServiceAccount() *StagedServiceAccount {
	this := StagedServiceAccount{}
	return &this
}

// NewStagedServiceAccountWithDefaults instantiates a new StagedServiceAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedServiceAccountWithDefaults() *StagedServiceAccount {
	this := StagedServiceAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StagedServiceAccount) SetId(v string) *StagedServiceAccount {
	o.Id = &v
	return o
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetAccountType() ServiceAccountType {
	if o == nil || IsNil(o.AccountType) {
		var ret ServiceAccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetAccountTypeOk() (*ServiceAccountType, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given ServiceAccountType and assigns it to the AccountType field.
func (o *StagedServiceAccount) SetAccountType(v ServiceAccountType) *StagedServiceAccount {
	o.AccountType = &v
	return o
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *StagedServiceAccount) SetLogoUrl(v string) *StagedServiceAccount {
	o.LogoUrl = &v
	return o
}

// GetApplicationInstanceName returns the ApplicationInstanceName field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetApplicationInstanceName() string {
	if o == nil || IsNil(o.ApplicationInstanceName) {
		var ret string
		return ret
	}
	return *o.ApplicationInstanceName
}

// GetApplicationInstanceNameOk returns a tuple with the ApplicationInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetApplicationInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationInstanceName) {
		return nil, false
	}
	return o.ApplicationInstanceName, true
}

// HasApplicationInstanceName returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasApplicationInstanceName() bool {
	if o != nil && !IsNil(o.ApplicationInstanceName) {
		return true
	}

	return false
}

// SetApplicationInstanceName gets a reference to the given string and assigns it to the ApplicationInstanceName field.
func (o *StagedServiceAccount) SetApplicationInstanceName(v string) *StagedServiceAccount {
	o.ApplicationInstanceName = &v
	return o
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StagedServiceAccount) SetName(v string) *StagedServiceAccount {
	o.Name = &v
	return o
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *StagedServiceAccount) SetUsername(v string) *StagedServiceAccount {
	o.Username = &v
	return o
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StagedServiceAccount) SetDescription(v string) *StagedServiceAccount {
	o.Description = &v
	return o
}

// GetLcmSyncPossible returns the LcmSyncPossible field value if set, zero value otherwise.
func (o *StagedServiceAccount) GetLcmSyncPossible() bool {
	if o == nil || IsNil(o.LcmSyncPossible) {
		var ret bool
		return ret
	}
	return *o.LcmSyncPossible
}

// GetLcmSyncPossibleOk returns a tuple with the LcmSyncPossible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedServiceAccount) GetLcmSyncPossibleOk() (*bool, bool) {
	if o == nil || IsNil(o.LcmSyncPossible) {
		return nil, false
	}
	return o.LcmSyncPossible, true
}

// HasLcmSyncPossible returns a boolean if a field has been set.
func (o *StagedServiceAccount) HasLcmSyncPossible() bool {
	if o != nil && !IsNil(o.LcmSyncPossible) {
		return true
	}

	return false
}

// SetLcmSyncPossible gets a reference to the given bool and assigns it to the LcmSyncPossible field.
func (o *StagedServiceAccount) SetLcmSyncPossible(v bool) *StagedServiceAccount {
	o.LcmSyncPossible = &v
	return o
}

func (o StagedServiceAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedServiceAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if !IsNil(o.ApplicationInstanceName) {
		toSerialize["application_instance_name"] = o.ApplicationInstanceName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LcmSyncPossible) {
		toSerialize["lcm_sync_possible"] = o.LcmSyncPossible
	}
	return toSerialize, nil
}

type NullableStagedServiceAccount struct {
	value *StagedServiceAccount
	isSet bool
}

func (v NullableStagedServiceAccount) Get() *StagedServiceAccount {
	return v.value
}

func (v *NullableStagedServiceAccount) Set(val *StagedServiceAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedServiceAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedServiceAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedServiceAccount(val *StagedServiceAccount) *NullableStagedServiceAccount {
	return &NullableStagedServiceAccount{value: val, isSet: true}
}

func (v NullableStagedServiceAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedServiceAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
