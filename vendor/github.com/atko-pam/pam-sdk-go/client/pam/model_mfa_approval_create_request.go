/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the MFAApprovalCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MFAApprovalCreateRequest{}

// MFAApprovalCreateRequest struct for MFAApprovalCreateRequest
type MFAApprovalCreateRequest struct {
	ResourceId   string   `json:"resource_id"`
	Identity     *string  `json:"identity,omitempty"`
	ResourceType string   `json:"resource_type"`
	RuleIds      []string `json:"rule_ids"`
	NextUrl      *string  `json:"next_url,omitempty"`
}

// NewMFAApprovalCreateRequest instantiates a new MFAApprovalCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMFAApprovalCreateRequest(resourceId string, resourceType string, ruleIds []string) *MFAApprovalCreateRequest {
	this := MFAApprovalCreateRequest{}
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.RuleIds = ruleIds
	return &this
}

// NewMFAApprovalCreateRequestWithDefaults instantiates a new MFAApprovalCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAApprovalCreateRequestWithDefaults() *MFAApprovalCreateRequest {
	this := MFAApprovalCreateRequest{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *MFAApprovalCreateRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *MFAApprovalCreateRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *MFAApprovalCreateRequest) SetResourceId(v string) *MFAApprovalCreateRequest {
	o.ResourceId = v
	return o
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *MFAApprovalCreateRequest) GetIdentity() string {
	if o == nil || IsNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MFAApprovalCreateRequest) GetIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *MFAApprovalCreateRequest) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *MFAApprovalCreateRequest) SetIdentity(v string) *MFAApprovalCreateRequest {
	o.Identity = &v
	return o
}

// GetResourceType returns the ResourceType field value
func (o *MFAApprovalCreateRequest) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *MFAApprovalCreateRequest) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *MFAApprovalCreateRequest) SetResourceType(v string) *MFAApprovalCreateRequest {
	o.ResourceType = v
	return o
}

// GetRuleIds returns the RuleIds field value
func (o *MFAApprovalCreateRequest) GetRuleIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RuleIds
}

// GetRuleIdsOk returns a tuple with the RuleIds field value
// and a boolean to check if the value has been set.
func (o *MFAApprovalCreateRequest) GetRuleIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuleIds, true
}

// SetRuleIds sets field value
func (o *MFAApprovalCreateRequest) SetRuleIds(v []string) *MFAApprovalCreateRequest {
	o.RuleIds = v
	return o
}

// GetNextUrl returns the NextUrl field value if set, zero value otherwise.
func (o *MFAApprovalCreateRequest) GetNextUrl() string {
	if o == nil || IsNil(o.NextUrl) {
		var ret string
		return ret
	}
	return *o.NextUrl
}

// GetNextUrlOk returns a tuple with the NextUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MFAApprovalCreateRequest) GetNextUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NextUrl) {
		return nil, false
	}
	return o.NextUrl, true
}

// HasNextUrl returns a boolean if a field has been set.
func (o *MFAApprovalCreateRequest) HasNextUrl() bool {
	if o != nil && !IsNil(o.NextUrl) {
		return true
	}

	return false
}

// SetNextUrl gets a reference to the given string and assigns it to the NextUrl field.
func (o *MFAApprovalCreateRequest) SetNextUrl(v string) *MFAApprovalCreateRequest {
	o.NextUrl = &v
	return o
}

func (o MFAApprovalCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MFAApprovalCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_id"] = o.ResourceId
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["rule_ids"] = o.RuleIds
	if !IsNil(o.NextUrl) {
		toSerialize["next_url"] = o.NextUrl
	}
	return toSerialize, nil
}

type NullableMFAApprovalCreateRequest struct {
	value *MFAApprovalCreateRequest
	isSet bool
}

func (v NullableMFAApprovalCreateRequest) Get() *MFAApprovalCreateRequest {
	return v.value
}

func (v *NullableMFAApprovalCreateRequest) Set(val *MFAApprovalCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMFAApprovalCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMFAApprovalCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMFAApprovalCreateRequest(val *MFAApprovalCreateRequest) *NullableMFAApprovalCreateRequest {
	return &NullableMFAApprovalCreateRequest{value: val, isSet: true}
}

func (v NullableMFAApprovalCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMFAApprovalCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
