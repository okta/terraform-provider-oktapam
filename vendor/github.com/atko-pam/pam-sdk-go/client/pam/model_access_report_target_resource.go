/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the AccessReportTargetResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessReportTargetResource{}

// AccessReportTargetResource struct for AccessReportTargetResource
type AccessReportTargetResource struct {
	Resource *AccessReportTargetResourceResource `json:"resource,omitempty"`
}

// NewAccessReportTargetResource instantiates a new AccessReportTargetResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessReportTargetResource() *AccessReportTargetResource {
	this := AccessReportTargetResource{}
	return &this
}

// NewAccessReportTargetResourceWithDefaults instantiates a new AccessReportTargetResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessReportTargetResourceWithDefaults() *AccessReportTargetResource {
	this := AccessReportTargetResource{}
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AccessReportTargetResource) GetResource() AccessReportTargetResourceResource {
	if o == nil || IsNil(o.Resource) {
		var ret AccessReportTargetResourceResource
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessReportTargetResource) GetResourceOk() (*AccessReportTargetResourceResource, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AccessReportTargetResource) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given AccessReportTargetResourceResource and assigns it to the Resource field.
func (o *AccessReportTargetResource) SetResource(v AccessReportTargetResourceResource) *AccessReportTargetResource {
	o.Resource = &v
	return o
}

func (o AccessReportTargetResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessReportTargetResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

type NullableAccessReportTargetResource struct {
	value *AccessReportTargetResource
	isSet bool
}

func (v NullableAccessReportTargetResource) Get() *AccessReportTargetResource {
	return v.value
}

func (v *NullableAccessReportTargetResource) Set(val *AccessReportTargetResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessReportTargetResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessReportTargetResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessReportTargetResource(val *AccessReportTargetResource) *NullableAccessReportTargetResource {
	return &NullableAccessReportTargetResource{value: val, isSet: true}
}

func (v NullableAccessReportTargetResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessReportTargetResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
