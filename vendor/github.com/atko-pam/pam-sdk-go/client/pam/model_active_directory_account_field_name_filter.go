/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ActiveDirectoryAccountFieldNameFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveDirectoryAccountFieldNameFilter{}

// ActiveDirectoryAccountFieldNameFilter Filter expression for Active Directory accounts
type ActiveDirectoryAccountFieldNameFilter struct {
	Field    ActiveDirectoryAccountFieldNameFilterField `json:"field"`
	Operator ActiveDirectoryFieldNameFilterOperator     `json:"operator"`
	Value    string                                     `json:"value"`
}

// NewActiveDirectoryAccountFieldNameFilter instantiates a new ActiveDirectoryAccountFieldNameFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveDirectoryAccountFieldNameFilter(field ActiveDirectoryAccountFieldNameFilterField, operator ActiveDirectoryFieldNameFilterOperator, value string) *ActiveDirectoryAccountFieldNameFilter {
	this := ActiveDirectoryAccountFieldNameFilter{}
	this.Field = field
	this.Operator = operator
	this.Value = value
	return &this
}

// NewActiveDirectoryAccountFieldNameFilterWithDefaults instantiates a new ActiveDirectoryAccountFieldNameFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryAccountFieldNameFilterWithDefaults() *ActiveDirectoryAccountFieldNameFilter {
	this := ActiveDirectoryAccountFieldNameFilter{}
	return &this
}

// GetField returns the Field field value
func (o *ActiveDirectoryAccountFieldNameFilter) GetField() ActiveDirectoryAccountFieldNameFilterField {
	if o == nil {
		var ret ActiveDirectoryAccountFieldNameFilterField
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *ActiveDirectoryAccountFieldNameFilter) GetFieldOk() (*ActiveDirectoryAccountFieldNameFilterField, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *ActiveDirectoryAccountFieldNameFilter) SetField(v ActiveDirectoryAccountFieldNameFilterField) *ActiveDirectoryAccountFieldNameFilter {
	o.Field = v
	return o
}

// GetOperator returns the Operator field value
func (o *ActiveDirectoryAccountFieldNameFilter) GetOperator() ActiveDirectoryFieldNameFilterOperator {
	if o == nil {
		var ret ActiveDirectoryFieldNameFilterOperator
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *ActiveDirectoryAccountFieldNameFilter) GetOperatorOk() (*ActiveDirectoryFieldNameFilterOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *ActiveDirectoryAccountFieldNameFilter) SetOperator(v ActiveDirectoryFieldNameFilterOperator) *ActiveDirectoryAccountFieldNameFilter {
	o.Operator = v
	return o
}

// GetValue returns the Value field value
func (o *ActiveDirectoryAccountFieldNameFilter) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ActiveDirectoryAccountFieldNameFilter) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ActiveDirectoryAccountFieldNameFilter) SetValue(v string) *ActiveDirectoryAccountFieldNameFilter {
	o.Value = v
	return o
}

func (o ActiveDirectoryAccountFieldNameFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveDirectoryAccountFieldNameFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["operator"] = o.Operator
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableActiveDirectoryAccountFieldNameFilter struct {
	value *ActiveDirectoryAccountFieldNameFilter
	isSet bool
}

func (v NullableActiveDirectoryAccountFieldNameFilter) Get() *ActiveDirectoryAccountFieldNameFilter {
	return v.value
}

func (v *NullableActiveDirectoryAccountFieldNameFilter) Set(val *ActiveDirectoryAccountFieldNameFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveDirectoryAccountFieldNameFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveDirectoryAccountFieldNameFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveDirectoryAccountFieldNameFilter(val *ActiveDirectoryAccountFieldNameFilter) *NullableActiveDirectoryAccountFieldNameFilter {
	return &NullableActiveDirectoryAccountFieldNameFilter{value: val, isSet: true}
}

func (v NullableActiveDirectoryAccountFieldNameFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveDirectoryAccountFieldNameFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
