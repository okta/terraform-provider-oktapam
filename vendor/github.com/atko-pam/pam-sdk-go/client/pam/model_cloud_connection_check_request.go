/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CloudConnectionCheckRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudConnectionCheckRequest{}

// CloudConnectionCheckRequest struct for CloudConnectionCheckRequest
type CloudConnectionCheckRequest struct {
	Provider               CloudConnectionProvider `json:"provider"`
	CloudConnectionDetails CloudConnectionDetails  `json:"cloud_connection_details"`
}

// NewCloudConnectionCheckRequest instantiates a new CloudConnectionCheckRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudConnectionCheckRequest(provider CloudConnectionProvider, cloudConnectionDetails CloudConnectionDetails) *CloudConnectionCheckRequest {
	this := CloudConnectionCheckRequest{}
	this.Provider = provider
	this.CloudConnectionDetails = cloudConnectionDetails
	return &this
}

// NewCloudConnectionCheckRequestWithDefaults instantiates a new CloudConnectionCheckRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudConnectionCheckRequestWithDefaults() *CloudConnectionCheckRequest {
	this := CloudConnectionCheckRequest{}
	return &this
}

// GetProvider returns the Provider field value
func (o *CloudConnectionCheckRequest) GetProvider() CloudConnectionProvider {
	if o == nil {
		var ret CloudConnectionProvider
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CloudConnectionCheckRequest) GetProviderOk() (*CloudConnectionProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CloudConnectionCheckRequest) SetProvider(v CloudConnectionProvider) *CloudConnectionCheckRequest {
	o.Provider = v
	return o
}

// GetCloudConnectionDetails returns the CloudConnectionDetails field value
func (o *CloudConnectionCheckRequest) GetCloudConnectionDetails() CloudConnectionDetails {
	if o == nil {
		var ret CloudConnectionDetails
		return ret
	}

	return o.CloudConnectionDetails
}

// GetCloudConnectionDetailsOk returns a tuple with the CloudConnectionDetails field value
// and a boolean to check if the value has been set.
func (o *CloudConnectionCheckRequest) GetCloudConnectionDetailsOk() (*CloudConnectionDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudConnectionDetails, true
}

// SetCloudConnectionDetails sets field value
func (o *CloudConnectionCheckRequest) SetCloudConnectionDetails(v CloudConnectionDetails) *CloudConnectionCheckRequest {
	o.CloudConnectionDetails = v
	return o
}

func (o CloudConnectionCheckRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudConnectionCheckRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provider"] = o.Provider
	toSerialize["cloud_connection_details"] = o.CloudConnectionDetails
	return toSerialize, nil
}

type NullableCloudConnectionCheckRequest struct {
	value *CloudConnectionCheckRequest
	isSet bool
}

func (v NullableCloudConnectionCheckRequest) Get() *CloudConnectionCheckRequest {
	return v.value
}

func (v *NullableCloudConnectionCheckRequest) Set(val *CloudConnectionCheckRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudConnectionCheckRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudConnectionCheckRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudConnectionCheckRequest(val *CloudConnectionCheckRequest) *NullableCloudConnectionCheckRequest {
	return &NullableCloudConnectionCheckRequest{value: val, isSet: true}
}

func (v NullableCloudConnectionCheckRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudConnectionCheckRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
