/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the ADServerSyncResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADServerSyncResults{}

// ADServerSyncResults struct for ADServerSyncResults
type ADServerSyncResults struct {
	// The UUID of the results from a specific server sync job run
	Id *string `json:"id,omitempty"`
	// The UUID of the associated server sync job
	AdTaskSettingsId *string `json:"ad_task_settings_id,omitempty"`
	// The name of the associated server sync job
	AdTaskSettingsName *string `json:"ad_task_settings_name,omitempty"`
	// A timestamp that indicates when the job run was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A timestamp that indicates when the job run was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The state of the specific server sync job. Possible values: `running`, `done`, `error`
	TaskState *string `json:"task_state,omitempty"`
	// The UUID of the test run for the server sync job
	AdTestRequestId *string `json:"ad_test_request_id,omitempty"`
	// The state of rule_assignments for the associated server sync job. These are used to assign discovered servers to Projects. Possible values: `done`, `error`, `timeout`.
	RulesSummaryStatus *string                    `json:"rules_summary_status,omitempty"`
	Status             *ADServerSyncResultsStatus `json:"status,omitempty"`
}

// NewADServerSyncResults instantiates a new ADServerSyncResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADServerSyncResults() *ADServerSyncResults {
	this := ADServerSyncResults{}
	return &this
}

// NewADServerSyncResultsWithDefaults instantiates a new ADServerSyncResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADServerSyncResultsWithDefaults() *ADServerSyncResults {
	this := ADServerSyncResults{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ADServerSyncResults) SetId(v string) *ADServerSyncResults {
	o.Id = &v
	return o
}

// GetAdTaskSettingsId returns the AdTaskSettingsId field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetAdTaskSettingsId() string {
	if o == nil || IsNil(o.AdTaskSettingsId) {
		var ret string
		return ret
	}
	return *o.AdTaskSettingsId
}

// GetAdTaskSettingsIdOk returns a tuple with the AdTaskSettingsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetAdTaskSettingsIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdTaskSettingsId) {
		return nil, false
	}
	return o.AdTaskSettingsId, true
}

// HasAdTaskSettingsId returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasAdTaskSettingsId() bool {
	if o != nil && !IsNil(o.AdTaskSettingsId) {
		return true
	}

	return false
}

// SetAdTaskSettingsId gets a reference to the given string and assigns it to the AdTaskSettingsId field.
func (o *ADServerSyncResults) SetAdTaskSettingsId(v string) *ADServerSyncResults {
	o.AdTaskSettingsId = &v
	return o
}

// GetAdTaskSettingsName returns the AdTaskSettingsName field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetAdTaskSettingsName() string {
	if o == nil || IsNil(o.AdTaskSettingsName) {
		var ret string
		return ret
	}
	return *o.AdTaskSettingsName
}

// GetAdTaskSettingsNameOk returns a tuple with the AdTaskSettingsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetAdTaskSettingsNameOk() (*string, bool) {
	if o == nil || IsNil(o.AdTaskSettingsName) {
		return nil, false
	}
	return o.AdTaskSettingsName, true
}

// HasAdTaskSettingsName returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasAdTaskSettingsName() bool {
	if o != nil && !IsNil(o.AdTaskSettingsName) {
		return true
	}

	return false
}

// SetAdTaskSettingsName gets a reference to the given string and assigns it to the AdTaskSettingsName field.
func (o *ADServerSyncResults) SetAdTaskSettingsName(v string) *ADServerSyncResults {
	o.AdTaskSettingsName = &v
	return o
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ADServerSyncResults) SetCreatedAt(v time.Time) *ADServerSyncResults {
	o.CreatedAt = &v
	return o
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ADServerSyncResults) SetUpdatedAt(v time.Time) *ADServerSyncResults {
	o.UpdatedAt = &v
	return o
}

// GetTaskState returns the TaskState field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetTaskState() string {
	if o == nil || IsNil(o.TaskState) {
		var ret string
		return ret
	}
	return *o.TaskState
}

// GetTaskStateOk returns a tuple with the TaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetTaskStateOk() (*string, bool) {
	if o == nil || IsNil(o.TaskState) {
		return nil, false
	}
	return o.TaskState, true
}

// HasTaskState returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasTaskState() bool {
	if o != nil && !IsNil(o.TaskState) {
		return true
	}

	return false
}

// SetTaskState gets a reference to the given string and assigns it to the TaskState field.
func (o *ADServerSyncResults) SetTaskState(v string) *ADServerSyncResults {
	o.TaskState = &v
	return o
}

// GetAdTestRequestId returns the AdTestRequestId field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetAdTestRequestId() string {
	if o == nil || IsNil(o.AdTestRequestId) {
		var ret string
		return ret
	}
	return *o.AdTestRequestId
}

// GetAdTestRequestIdOk returns a tuple with the AdTestRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetAdTestRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdTestRequestId) {
		return nil, false
	}
	return o.AdTestRequestId, true
}

// HasAdTestRequestId returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasAdTestRequestId() bool {
	if o != nil && !IsNil(o.AdTestRequestId) {
		return true
	}

	return false
}

// SetAdTestRequestId gets a reference to the given string and assigns it to the AdTestRequestId field.
func (o *ADServerSyncResults) SetAdTestRequestId(v string) *ADServerSyncResults {
	o.AdTestRequestId = &v
	return o
}

// GetRulesSummaryStatus returns the RulesSummaryStatus field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetRulesSummaryStatus() string {
	if o == nil || IsNil(o.RulesSummaryStatus) {
		var ret string
		return ret
	}
	return *o.RulesSummaryStatus
}

// GetRulesSummaryStatusOk returns a tuple with the RulesSummaryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetRulesSummaryStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RulesSummaryStatus) {
		return nil, false
	}
	return o.RulesSummaryStatus, true
}

// HasRulesSummaryStatus returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasRulesSummaryStatus() bool {
	if o != nil && !IsNil(o.RulesSummaryStatus) {
		return true
	}

	return false
}

// SetRulesSummaryStatus gets a reference to the given string and assigns it to the RulesSummaryStatus field.
func (o *ADServerSyncResults) SetRulesSummaryStatus(v string) *ADServerSyncResults {
	o.RulesSummaryStatus = &v
	return o
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ADServerSyncResults) GetStatus() ADServerSyncResultsStatus {
	if o == nil || IsNil(o.Status) {
		var ret ADServerSyncResultsStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADServerSyncResults) GetStatusOk() (*ADServerSyncResultsStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ADServerSyncResults) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ADServerSyncResultsStatus and assigns it to the Status field.
func (o *ADServerSyncResults) SetStatus(v ADServerSyncResultsStatus) *ADServerSyncResults {
	o.Status = &v
	return o
}

func (o ADServerSyncResults) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADServerSyncResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AdTaskSettingsId) {
		toSerialize["ad_task_settings_id"] = o.AdTaskSettingsId
	}
	if !IsNil(o.AdTaskSettingsName) {
		toSerialize["ad_task_settings_name"] = o.AdTaskSettingsName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.TaskState) {
		toSerialize["task_state"] = o.TaskState
	}
	if !IsNil(o.AdTestRequestId) {
		toSerialize["ad_test_request_id"] = o.AdTestRequestId
	}
	if !IsNil(o.RulesSummaryStatus) {
		toSerialize["rules_summary_status"] = o.RulesSummaryStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableADServerSyncResults struct {
	value *ADServerSyncResults
	isSet bool
}

func (v NullableADServerSyncResults) Get() *ADServerSyncResults {
	return v.value
}

func (v *NullableADServerSyncResults) Set(val *ADServerSyncResults) {
	v.value = val
	v.isSet = true
}

func (v NullableADServerSyncResults) IsSet() bool {
	return v.isSet
}

func (v *NullableADServerSyncResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADServerSyncResults(val *ADServerSyncResults) *NullableADServerSyncResults {
	return &NullableADServerSyncResults{value: val, isSet: true}
}

func (v NullableADServerSyncResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADServerSyncResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
