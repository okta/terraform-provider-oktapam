/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// ActiveDirectoryAccountStatus Describes the current status of an Active Directory account
type ActiveDirectoryAccountStatus string

// List of ActiveDirectoryAccountStatus
const (
	ActiveDirectoryAccountStatus_AVAILABLE                 ActiveDirectoryAccountStatus = "AVAILABLE"
	ActiveDirectoryAccountStatus_UNAVAILABLE               ActiveDirectoryAccountStatus = "UNAVAILABLE"
	ActiveDirectoryAccountStatus_CHECKED_OUT               ActiveDirectoryAccountStatus = "CHECKED_OUT"
	ActiveDirectoryAccountStatus_CHECKED_OUT_BY_OTHER_USER ActiveDirectoryAccountStatus = "CHECKED_OUT_BY_OTHER_USER"
)

// All allowed values of ActiveDirectoryAccountStatus enum
var AllowedActiveDirectoryAccountStatusEnumValues = []ActiveDirectoryAccountStatus{
	"AVAILABLE",
	"UNAVAILABLE",
	"CHECKED_OUT",
	"CHECKED_OUT_BY_OTHER_USER",
}

func (v *ActiveDirectoryAccountStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ActiveDirectoryAccountStatus(value)

	*v = enumTypeValue

	return nil
}

// NewActiveDirectoryAccountStatusFromValue returns a pointer to a valid ActiveDirectoryAccountStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewActiveDirectoryAccountStatusFromValue(v string) (*ActiveDirectoryAccountStatus, error) {
	ev := ActiveDirectoryAccountStatus(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ActiveDirectoryAccountStatus) IsValid() bool {
	for _, existing := range AllowedActiveDirectoryAccountStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ActiveDirectoryAccountStatus value
func (v ActiveDirectoryAccountStatus) Ptr() *ActiveDirectoryAccountStatus {
	return &v
}

type NullableActiveDirectoryAccountStatus struct {
	value *ActiveDirectoryAccountStatus
	isSet bool
}

func (v NullableActiveDirectoryAccountStatus) Get() *ActiveDirectoryAccountStatus {
	return v.value
}

func (v *NullableActiveDirectoryAccountStatus) Set(val *ActiveDirectoryAccountStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveDirectoryAccountStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveDirectoryAccountStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveDirectoryAccountStatus(val *ActiveDirectoryAccountStatus) *NullableActiveDirectoryAccountStatus {
	return &NullableActiveDirectoryAccountStatus{value: val, isSet: true}
}

func (v NullableActiveDirectoryAccountStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveDirectoryAccountStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
