/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecurityPolicyRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityPolicyRule{}

// SecurityPolicyRule struct for SecurityPolicyRule
type SecurityPolicyRule struct {
	// The name of the Security Policy rule
	Name             string                             `json:"name"`
	ResourceType     SecurityPolicyRuleResourceType     `json:"resource_type"`
	ResourceSelector SecurityPolicyRuleResourceSelector `json:"resource_selector"`
	// The specific privileges granted to Principals on matching resources.
	Privileges []SecurityPolicyRulePrivilegeContainer `json:"privileges"`
	// The conditions required before a privilege is made available to the Principals. All conditions must be met.
	Conditions []SecurityPolicyRuleConditionContainer `json:"conditions,omitempty"`
	// Overrides checkout duration provided in the resource settings
	OverrideCheckoutDurationInSeconds NullableInt64 `json:"override_checkout_duration_in_seconds,omitempty"`
	// The UUID of the associated Security Policy
	SecurityPolicyId NullableString `json:"security_policy_id,omitempty"`
}

// NewSecurityPolicyRule instantiates a new SecurityPolicyRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityPolicyRule(name string, resourceType SecurityPolicyRuleResourceType, resourceSelector SecurityPolicyRuleResourceSelector, privileges []SecurityPolicyRulePrivilegeContainer) *SecurityPolicyRule {
	this := SecurityPolicyRule{}
	this.Name = name
	this.ResourceType = resourceType
	this.ResourceSelector = resourceSelector
	this.Privileges = privileges
	return &this
}

// NewSecurityPolicyRuleWithDefaults instantiates a new SecurityPolicyRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityPolicyRuleWithDefaults() *SecurityPolicyRule {
	this := SecurityPolicyRule{}
	return &this
}

// GetName returns the Name field value
func (o *SecurityPolicyRule) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecurityPolicyRule) SetName(v string) *SecurityPolicyRule {
	o.Name = v
	return o
}

// GetResourceType returns the ResourceType field value
func (o *SecurityPolicyRule) GetResourceType() SecurityPolicyRuleResourceType {
	if o == nil {
		var ret SecurityPolicyRuleResourceType
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRule) GetResourceTypeOk() (*SecurityPolicyRuleResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *SecurityPolicyRule) SetResourceType(v SecurityPolicyRuleResourceType) *SecurityPolicyRule {
	o.ResourceType = v
	return o
}

// GetResourceSelector returns the ResourceSelector field value
func (o *SecurityPolicyRule) GetResourceSelector() SecurityPolicyRuleResourceSelector {
	if o == nil {
		var ret SecurityPolicyRuleResourceSelector
		return ret
	}

	return o.ResourceSelector
}

// GetResourceSelectorOk returns a tuple with the ResourceSelector field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRule) GetResourceSelectorOk() (*SecurityPolicyRuleResourceSelector, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceSelector, true
}

// SetResourceSelector sets field value
func (o *SecurityPolicyRule) SetResourceSelector(v SecurityPolicyRuleResourceSelector) *SecurityPolicyRule {
	o.ResourceSelector = v
	return o
}

// GetPrivileges returns the Privileges field value
func (o *SecurityPolicyRule) GetPrivileges() []SecurityPolicyRulePrivilegeContainer {
	if o == nil {
		var ret []SecurityPolicyRulePrivilegeContainer
		return ret
	}

	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRule) GetPrivilegesOk() ([]SecurityPolicyRulePrivilegeContainer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Privileges, true
}

// SetPrivileges sets field value
func (o *SecurityPolicyRule) SetPrivileges(v []SecurityPolicyRulePrivilegeContainer) *SecurityPolicyRule {
	o.Privileges = v
	return o
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *SecurityPolicyRule) GetConditions() []SecurityPolicyRuleConditionContainer {
	if o == nil || IsNil(o.Conditions) {
		var ret []SecurityPolicyRuleConditionContainer
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityPolicyRule) GetConditionsOk() ([]SecurityPolicyRuleConditionContainer, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *SecurityPolicyRule) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []SecurityPolicyRuleConditionContainer and assigns it to the Conditions field.
func (o *SecurityPolicyRule) SetConditions(v []SecurityPolicyRuleConditionContainer) *SecurityPolicyRule {
	o.Conditions = v
	return o
}

// GetOverrideCheckoutDurationInSeconds returns the OverrideCheckoutDurationInSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityPolicyRule) GetOverrideCheckoutDurationInSeconds() int64 {
	if o == nil || IsNil(o.OverrideCheckoutDurationInSeconds.Get()) {
		var ret int64
		return ret
	}
	return *o.OverrideCheckoutDurationInSeconds.Get()
}

// GetOverrideCheckoutDurationInSecondsOk returns a tuple with the OverrideCheckoutDurationInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityPolicyRule) GetOverrideCheckoutDurationInSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverrideCheckoutDurationInSeconds.Get(), o.OverrideCheckoutDurationInSeconds.IsSet()
}

// HasOverrideCheckoutDurationInSeconds returns a boolean if a field has been set.
func (o *SecurityPolicyRule) HasOverrideCheckoutDurationInSeconds() bool {
	if o != nil && o.OverrideCheckoutDurationInSeconds.IsSet() {
		return true
	}

	return false
}

// SetOverrideCheckoutDurationInSeconds gets a reference to the given NullableInt64 and assigns it to the OverrideCheckoutDurationInSeconds field.
func (o *SecurityPolicyRule) SetOverrideCheckoutDurationInSeconds(v int64) *SecurityPolicyRule {
	o.OverrideCheckoutDurationInSeconds.Set(&v)
	return o
}

// SetOverrideCheckoutDurationInSecondsNil sets the value for OverrideCheckoutDurationInSeconds to be an explicit nil
func (o *SecurityPolicyRule) SetOverrideCheckoutDurationInSecondsNil() *SecurityPolicyRule {
	o.OverrideCheckoutDurationInSeconds.Set(nil)
	return o
}

// UnsetOverrideCheckoutDurationInSeconds ensures that no value is present for OverrideCheckoutDurationInSeconds, not even an explicit nil
func (o *SecurityPolicyRule) UnsetOverrideCheckoutDurationInSeconds() *SecurityPolicyRule {
	o.OverrideCheckoutDurationInSeconds.Unset()
	return o
}

// GetSecurityPolicyId returns the SecurityPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityPolicyRule) GetSecurityPolicyId() string {
	if o == nil || IsNil(o.SecurityPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.SecurityPolicyId.Get()
}

// GetSecurityPolicyIdOk returns a tuple with the SecurityPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityPolicyRule) GetSecurityPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityPolicyId.Get(), o.SecurityPolicyId.IsSet()
}

// HasSecurityPolicyId returns a boolean if a field has been set.
func (o *SecurityPolicyRule) HasSecurityPolicyId() bool {
	if o != nil && o.SecurityPolicyId.IsSet() {
		return true
	}

	return false
}

// SetSecurityPolicyId gets a reference to the given NullableString and assigns it to the SecurityPolicyId field.
func (o *SecurityPolicyRule) SetSecurityPolicyId(v string) *SecurityPolicyRule {
	o.SecurityPolicyId.Set(&v)
	return o
}

// SetSecurityPolicyIdNil sets the value for SecurityPolicyId to be an explicit nil
func (o *SecurityPolicyRule) SetSecurityPolicyIdNil() *SecurityPolicyRule {
	o.SecurityPolicyId.Set(nil)
	return o
}

// UnsetSecurityPolicyId ensures that no value is present for SecurityPolicyId, not even an explicit nil
func (o *SecurityPolicyRule) UnsetSecurityPolicyId() *SecurityPolicyRule {
	o.SecurityPolicyId.Unset()
	return o
}

func (o SecurityPolicyRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityPolicyRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["resource_selector"] = o.ResourceSelector
	toSerialize["privileges"] = o.Privileges
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if o.OverrideCheckoutDurationInSeconds.IsSet() {
		toSerialize["override_checkout_duration_in_seconds"] = o.OverrideCheckoutDurationInSeconds.Get()
	}
	if o.SecurityPolicyId.IsSet() {
		toSerialize["security_policy_id"] = o.SecurityPolicyId.Get()
	}
	return toSerialize, nil
}

type NullableSecurityPolicyRule struct {
	value *SecurityPolicyRule
	isSet bool
}

func (v NullableSecurityPolicyRule) Get() *SecurityPolicyRule {
	return v.value
}

func (v *NullableSecurityPolicyRule) Set(val *SecurityPolicyRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityPolicyRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityPolicyRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityPolicyRule(val *SecurityPolicyRule) *NullableSecurityPolicyRule {
	return &NullableSecurityPolicyRule{value: val, isSet: true}
}

func (v NullableSecurityPolicyRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityPolicyRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
