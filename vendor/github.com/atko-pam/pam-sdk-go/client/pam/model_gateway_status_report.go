/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the GatewayStatusReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayStatusReport{}

// GatewayStatusReport struct for GatewayStatusReport
type GatewayStatusReport struct {
	// The number of clients actively connected to the gateway
	ActiveConnections int32 `json:"active_connections"`
	// The ID of the gateway ID
	GatewayId NullableString `json:"gateway_id,omitempty"`
	// The status of the gateway
	Status NullableString `json:"status,omitempty"`
	// The total amount in bytes of storage space available for use by the gateway
	TotalStorageBytes int64 `json:"total_storage_bytes"`
	// The amount in bytes of storage space used by the gateway
	UsedStorageBytes int64 `json:"used_storage_bytes"`
}

// NewGatewayStatusReport instantiates a new GatewayStatusReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayStatusReport(activeConnections int32, totalStorageBytes int64, usedStorageBytes int64) *GatewayStatusReport {
	this := GatewayStatusReport{}
	this.ActiveConnections = activeConnections
	this.TotalStorageBytes = totalStorageBytes
	this.UsedStorageBytes = usedStorageBytes
	return &this
}

// NewGatewayStatusReportWithDefaults instantiates a new GatewayStatusReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayStatusReportWithDefaults() *GatewayStatusReport {
	this := GatewayStatusReport{}
	return &this
}

// GetActiveConnections returns the ActiveConnections field value
func (o *GatewayStatusReport) GetActiveConnections() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActiveConnections
}

// GetActiveConnectionsOk returns a tuple with the ActiveConnections field value
// and a boolean to check if the value has been set.
func (o *GatewayStatusReport) GetActiveConnectionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveConnections, true
}

// SetActiveConnections sets field value
func (o *GatewayStatusReport) SetActiveConnections(v int32) *GatewayStatusReport {
	o.ActiveConnections = v
	return o
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GatewayStatusReport) GetGatewayId() string {
	if o == nil || IsNil(o.GatewayId.Get()) {
		var ret string
		return ret
	}
	return *o.GatewayId.Get()
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GatewayStatusReport) GetGatewayIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GatewayId.Get(), o.GatewayId.IsSet()
}

// HasGatewayId returns a boolean if a field has been set.
func (o *GatewayStatusReport) HasGatewayId() bool {
	if o != nil && o.GatewayId.IsSet() {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given NullableString and assigns it to the GatewayId field.
func (o *GatewayStatusReport) SetGatewayId(v string) *GatewayStatusReport {
	o.GatewayId.Set(&v)
	return o
}

// SetGatewayIdNil sets the value for GatewayId to be an explicit nil
func (o *GatewayStatusReport) SetGatewayIdNil() *GatewayStatusReport {
	o.GatewayId.Set(nil)
	return o
}

// UnsetGatewayId ensures that no value is present for GatewayId, not even an explicit nil
func (o *GatewayStatusReport) UnsetGatewayId() *GatewayStatusReport {
	o.GatewayId.Unset()
	return o
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GatewayStatusReport) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GatewayStatusReport) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *GatewayStatusReport) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *GatewayStatusReport) SetStatus(v string) *GatewayStatusReport {
	o.Status.Set(&v)
	return o
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *GatewayStatusReport) SetStatusNil() *GatewayStatusReport {
	o.Status.Set(nil)
	return o
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *GatewayStatusReport) UnsetStatus() *GatewayStatusReport {
	o.Status.Unset()
	return o
}

// GetTotalStorageBytes returns the TotalStorageBytes field value
func (o *GatewayStatusReport) GetTotalStorageBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalStorageBytes
}

// GetTotalStorageBytesOk returns a tuple with the TotalStorageBytes field value
// and a boolean to check if the value has been set.
func (o *GatewayStatusReport) GetTotalStorageBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalStorageBytes, true
}

// SetTotalStorageBytes sets field value
func (o *GatewayStatusReport) SetTotalStorageBytes(v int64) *GatewayStatusReport {
	o.TotalStorageBytes = v
	return o
}

// GetUsedStorageBytes returns the UsedStorageBytes field value
func (o *GatewayStatusReport) GetUsedStorageBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UsedStorageBytes
}

// GetUsedStorageBytesOk returns a tuple with the UsedStorageBytes field value
// and a boolean to check if the value has been set.
func (o *GatewayStatusReport) GetUsedStorageBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsedStorageBytes, true
}

// SetUsedStorageBytes sets field value
func (o *GatewayStatusReport) SetUsedStorageBytes(v int64) *GatewayStatusReport {
	o.UsedStorageBytes = v
	return o
}

func (o GatewayStatusReport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayStatusReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_connections"] = o.ActiveConnections
	if o.GatewayId.IsSet() {
		toSerialize["gateway_id"] = o.GatewayId.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	toSerialize["total_storage_bytes"] = o.TotalStorageBytes
	toSerialize["used_storage_bytes"] = o.UsedStorageBytes
	return toSerialize, nil
}

type NullableGatewayStatusReport struct {
	value *GatewayStatusReport
	isSet bool
}

func (v NullableGatewayStatusReport) Get() *GatewayStatusReport {
	return v.value
}

func (v *NullableGatewayStatusReport) Set(val *GatewayStatusReport) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayStatusReport) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayStatusReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayStatusReport(val *GatewayStatusReport) *NullableGatewayStatusReport {
	return &NullableGatewayStatusReport{value: val, isSet: true}
}

func (v NullableGatewayStatusReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayStatusReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
