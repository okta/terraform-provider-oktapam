/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the Client type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Client{}

// Client struct for Client
type Client struct {
	// The date the Client was deleted
	DeletedAt time.Time `json:"deleted_at"`
	// A description of the Client
	Description string `json:"description"`
	// If `true`, the Client has detected that the local device is encrypted
	Encrypted bool `json:"encrypted"`
	// The hostname of the local device running the Client
	Hostname string `json:"hostname"`
	// The UUID of the Client
	Id string `json:"id"`
	// The OS of the local device running the Client
	Os string `json:"os"`
	// The state of the Client: `ACTIVE`, `PENDING`, or `DELETED`
	State NullableString `json:"state"`
	// The User associated with the Client
	UserName NullableString `json:"user_name"`
}

// NewClient instantiates a new Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClient(deletedAt time.Time, description string, encrypted bool, hostname string, id string, os string, state NullableString, userName NullableString) *Client {
	this := Client{}
	this.DeletedAt = deletedAt
	this.Description = description
	this.Encrypted = encrypted
	this.Hostname = hostname
	this.Id = id
	this.Os = os
	this.State = state
	this.UserName = userName
	return &this
}

// NewClientWithDefaults instantiates a new Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientWithDefaults() *Client {
	this := Client{}
	return &this
}

// GetDeletedAt returns the DeletedAt field value
func (o *Client) GetDeletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *Client) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *Client) SetDeletedAt(v time.Time) *Client {
	o.DeletedAt = v
	return o
}

// GetDescription returns the Description field value
func (o *Client) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Client) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Client) SetDescription(v string) *Client {
	o.Description = v
	return o
}

// GetEncrypted returns the Encrypted field value
func (o *Client) GetEncrypted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value
// and a boolean to check if the value has been set.
func (o *Client) GetEncryptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Encrypted, true
}

// SetEncrypted sets field value
func (o *Client) SetEncrypted(v bool) *Client {
	o.Encrypted = v
	return o
}

// GetHostname returns the Hostname field value
func (o *Client) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *Client) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *Client) SetHostname(v string) *Client {
	o.Hostname = v
	return o
}

// GetId returns the Id field value
func (o *Client) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Client) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Client) SetId(v string) *Client {
	o.Id = v
	return o
}

// GetOs returns the Os field value
func (o *Client) GetOs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Os
}

// GetOsOk returns a tuple with the Os field value
// and a boolean to check if the value has been set.
func (o *Client) GetOsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Os, true
}

// SetOs sets field value
func (o *Client) SetOs(v string) *Client {
	o.Os = v
	return o
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Client) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}

	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Client) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// SetState sets field value
func (o *Client) SetState(v string) *Client {
	o.State.Set(&v)
	return o
}

// GetUserName returns the UserName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Client) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Client) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// SetUserName sets field value
func (o *Client) SetUserName(v string) *Client {
	o.UserName.Set(&v)
	return o
}

func (o Client) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Client) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deleted_at"] = o.DeletedAt
	toSerialize["description"] = o.Description
	toSerialize["encrypted"] = o.Encrypted
	toSerialize["hostname"] = o.Hostname
	toSerialize["id"] = o.Id
	toSerialize["os"] = o.Os
	toSerialize["state"] = o.State.Get()
	toSerialize["user_name"] = o.UserName.Get()
	return toSerialize, nil
}

type NullableClient struct {
	value *Client
	isSet bool
}

func (v NullableClient) Get() *Client {
	return v.value
}

func (v *NullableClient) Set(val *Client) {
	v.value = val
	v.isSet = true
}

func (v NullableClient) IsSet() bool {
	return v.isSet
}

func (v *NullableClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClient(val *Client) *NullableClient {
	return &NullableClient{value: val, isSet: true}
}

func (v NullableClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
