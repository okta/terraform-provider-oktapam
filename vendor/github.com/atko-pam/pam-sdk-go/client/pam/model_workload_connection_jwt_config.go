/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the WorkloadConnectionJwtConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadConnectionJwtConfig{}

// WorkloadConnectionJwtConfig Configuration for JWT type workload connections. Omitted for other types.
type WorkloadConnectionJwtConfig struct {
	// The URL to verify the JSON Web Key Set (JWKS) for the workload connection
	JwksUrl string `json:"jwks_url"`
}

// NewWorkloadConnectionJwtConfig instantiates a new WorkloadConnectionJwtConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadConnectionJwtConfig(jwksUrl string) *WorkloadConnectionJwtConfig {
	this := WorkloadConnectionJwtConfig{}
	this.JwksUrl = jwksUrl
	return &this
}

// NewWorkloadConnectionJwtConfigWithDefaults instantiates a new WorkloadConnectionJwtConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadConnectionJwtConfigWithDefaults() *WorkloadConnectionJwtConfig {
	this := WorkloadConnectionJwtConfig{}
	return &this
}

// GetJwksUrl returns the JwksUrl field value
func (o *WorkloadConnectionJwtConfig) GetJwksUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnectionJwtConfig) GetJwksUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwksUrl, true
}

// SetJwksUrl sets field value
func (o *WorkloadConnectionJwtConfig) SetJwksUrl(v string) *WorkloadConnectionJwtConfig {
	o.JwksUrl = v
	return o
}

func (o WorkloadConnectionJwtConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadConnectionJwtConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jwks_url"] = o.JwksUrl
	return toSerialize, nil
}

type NullableWorkloadConnectionJwtConfig struct {
	value *WorkloadConnectionJwtConfig
	isSet bool
}

func (v NullableWorkloadConnectionJwtConfig) Get() *WorkloadConnectionJwtConfig {
	return v.value
}

func (v *NullableWorkloadConnectionJwtConfig) Set(val *WorkloadConnectionJwtConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadConnectionJwtConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadConnectionJwtConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadConnectionJwtConfig(val *WorkloadConnectionJwtConfig) *NullableWorkloadConnectionJwtConfig {
	return &NullableWorkloadConnectionJwtConfig{value: val, isSet: true}
}

func (v NullableWorkloadConnectionJwtConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadConnectionJwtConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
