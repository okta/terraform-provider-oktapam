/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// PrivilegedAccountSyncStatus Describes the current sync status for actively managed accounts
type PrivilegedAccountSyncStatus string

// List of PrivilegedAccountSyncStatus
const (
	PrivilegedAccountSyncStatus_NOT_SYNCED  PrivilegedAccountSyncStatus = "NOT_SYNCED"
	PrivilegedAccountSyncStatus_SYNCED      PrivilegedAccountSyncStatus = "SYNCED"
	PrivilegedAccountSyncStatus_SYNCING     PrivilegedAccountSyncStatus = "SYNCING"
	PrivilegedAccountSyncStatus_SYNC_FAILED PrivilegedAccountSyncStatus = "SYNC_FAILED"
)

// All allowed values of PrivilegedAccountSyncStatus enum
var AllowedPrivilegedAccountSyncStatusEnumValues = []PrivilegedAccountSyncStatus{
	"NOT_SYNCED",
	"SYNCED",
	"SYNCING",
	"SYNC_FAILED",
}

func (v *PrivilegedAccountSyncStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrivilegedAccountSyncStatus(value)

	*v = enumTypeValue

	return nil
}

// NewPrivilegedAccountSyncStatusFromValue returns a pointer to a valid PrivilegedAccountSyncStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrivilegedAccountSyncStatusFromValue(v string) (*PrivilegedAccountSyncStatus, error) {
	ev := PrivilegedAccountSyncStatus(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrivilegedAccountSyncStatus) IsValid() bool {
	for _, existing := range AllowedPrivilegedAccountSyncStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrivilegedAccountSyncStatus value
func (v PrivilegedAccountSyncStatus) Ptr() *PrivilegedAccountSyncStatus {
	return &v
}

type NullablePrivilegedAccountSyncStatus struct {
	value *PrivilegedAccountSyncStatus
	isSet bool
}

func (v NullablePrivilegedAccountSyncStatus) Get() *PrivilegedAccountSyncStatus {
	return v.value
}

func (v *NullablePrivilegedAccountSyncStatus) Set(val *PrivilegedAccountSyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivilegedAccountSyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivilegedAccountSyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivilegedAccountSyncStatus(val *PrivilegedAccountSyncStatus) *NullablePrivilegedAccountSyncStatus {
	return &NullablePrivilegedAccountSyncStatus{value: val, isSet: true}
}

func (v NullablePrivilegedAccountSyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivilegedAccountSyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
