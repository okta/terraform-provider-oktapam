/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// ServiceAccountStatusDetail Describes the detailed status of a service account
type ServiceAccountStatusDetail string

// List of ServiceAccountStatusDetail
const (
	ServiceAccountStatusDetail_PENDING          ServiceAccountStatusDetail = "PENDING"
	ServiceAccountStatusDetail_CREATION_FAILED  ServiceAccountStatusDetail = "CREATION_FAILED"
	ServiceAccountStatusDetail_STAGED           ServiceAccountStatusDetail = "STAGED"
	ServiceAccountStatusDetail_ROTATING         ServiceAccountStatusDetail = "ROTATING"
	ServiceAccountStatusDetail_ROTATED          ServiceAccountStatusDetail = "ROTATED"
	ServiceAccountStatusDetail_ROTATION_FAILED  ServiceAccountStatusDetail = "ROTATION_FAILED"
	ServiceAccountStatusDetail_VAULTED          ServiceAccountStatusDetail = "VAULTED"
	ServiceAccountStatusDetail_MISSING_PASSWORD ServiceAccountStatusDetail = "MISSING_PASSWORD"
)

// All allowed values of ServiceAccountStatusDetail enum
var AllowedServiceAccountStatusDetailEnumValues = []ServiceAccountStatusDetail{
	"PENDING",
	"CREATION_FAILED",
	"STAGED",
	"ROTATING",
	"ROTATED",
	"ROTATION_FAILED",
	"VAULTED",
	"MISSING_PASSWORD",
}

func (v *ServiceAccountStatusDetail) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceAccountStatusDetail(value)

	*v = enumTypeValue

	return nil
}

// NewServiceAccountStatusDetailFromValue returns a pointer to a valid ServiceAccountStatusDetail
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAccountStatusDetailFromValue(v string) (*ServiceAccountStatusDetail, error) {
	ev := ServiceAccountStatusDetail(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAccountStatusDetail) IsValid() bool {
	for _, existing := range AllowedServiceAccountStatusDetailEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceAccountStatusDetail value
func (v ServiceAccountStatusDetail) Ptr() *ServiceAccountStatusDetail {
	return &v
}

type NullableServiceAccountStatusDetail struct {
	value *ServiceAccountStatusDetail
	isSet bool
}

func (v NullableServiceAccountStatusDetail) Get() *ServiceAccountStatusDetail {
	return v.value
}

func (v *NullableServiceAccountStatusDetail) Set(val *ServiceAccountStatusDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountStatusDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountStatusDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountStatusDetail(val *ServiceAccountStatusDetail) *NullableServiceAccountStatusDetail {
	return &NullableServiceAccountStatusDetail{value: val, isSet: true}
}

func (v NullableServiceAccountStatusDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountStatusDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
