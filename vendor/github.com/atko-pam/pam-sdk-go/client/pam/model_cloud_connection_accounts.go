/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CloudConnectionAccounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudConnectionAccounts{}

// CloudConnectionAccounts struct for CloudConnectionAccounts
type CloudConnectionAccounts struct {
	// A list of accounts associated with the specified Cloud Connection
	AccountId []string `json:"account_id"`
}

// NewCloudConnectionAccounts instantiates a new CloudConnectionAccounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudConnectionAccounts(accountId []string) *CloudConnectionAccounts {
	this := CloudConnectionAccounts{}
	this.AccountId = accountId
	return &this
}

// NewCloudConnectionAccountsWithDefaults instantiates a new CloudConnectionAccounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudConnectionAccountsWithDefaults() *CloudConnectionAccounts {
	this := CloudConnectionAccounts{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CloudConnectionAccounts) GetAccountId() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CloudConnectionAccounts) GetAccountIdOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId, true
}

// SetAccountId sets field value
func (o *CloudConnectionAccounts) SetAccountId(v []string) *CloudConnectionAccounts {
	o.AccountId = v
	return o
}

func (o CloudConnectionAccounts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudConnectionAccounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	return toSerialize, nil
}

type NullableCloudConnectionAccounts struct {
	value *CloudConnectionAccounts
	isSet bool
}

func (v NullableCloudConnectionAccounts) Get() *CloudConnectionAccounts {
	return v.value
}

func (v *NullableCloudConnectionAccounts) Set(val *CloudConnectionAccounts) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudConnectionAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudConnectionAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudConnectionAccounts(val *CloudConnectionAccounts) *NullableCloudConnectionAccounts {
	return &NullableCloudConnectionAccounts{value: val, isSet: true}
}

func (v NullableCloudConnectionAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudConnectionAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
