/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ConditionsGateway type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConditionsGateway{}

// ConditionsGateway Configures traffic settings for an existing OPA Gateway
type ConditionsGateway struct {
	Type string `json:"_type"`
	// Whether to forward traffic through an OPA Gateway
	TrafficForwarding *bool `json:"traffic_forwarding,omitempty"`
	// Whether to record sessions made through an OPA Gateway
	SessionRecording *bool `json:"session_recording,omitempty"`
}

// NewConditionsGateway instantiates a new ConditionsGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionsGateway(type_ string) *ConditionsGateway {
	this := ConditionsGateway{}
	this.Type = type_
	return &this
}

// NewConditionsGatewayWithDefaults instantiates a new ConditionsGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionsGatewayWithDefaults() *ConditionsGateway {
	this := ConditionsGateway{}
	return &this
}

// GetType returns the Type field value
func (o *ConditionsGateway) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ConditionsGateway) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ConditionsGateway) SetType(v string) *ConditionsGateway {
	o.Type = v
	return o
}

// GetTrafficForwarding returns the TrafficForwarding field value if set, zero value otherwise.
func (o *ConditionsGateway) GetTrafficForwarding() bool {
	if o == nil || IsNil(o.TrafficForwarding) {
		var ret bool
		return ret
	}
	return *o.TrafficForwarding
}

// GetTrafficForwardingOk returns a tuple with the TrafficForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionsGateway) GetTrafficForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.TrafficForwarding) {
		return nil, false
	}
	return o.TrafficForwarding, true
}

// HasTrafficForwarding returns a boolean if a field has been set.
func (o *ConditionsGateway) HasTrafficForwarding() bool {
	if o != nil && !IsNil(o.TrafficForwarding) {
		return true
	}

	return false
}

// SetTrafficForwarding gets a reference to the given bool and assigns it to the TrafficForwarding field.
func (o *ConditionsGateway) SetTrafficForwarding(v bool) *ConditionsGateway {
	o.TrafficForwarding = &v
	return o
}

// GetSessionRecording returns the SessionRecording field value if set, zero value otherwise.
func (o *ConditionsGateway) GetSessionRecording() bool {
	if o == nil || IsNil(o.SessionRecording) {
		var ret bool
		return ret
	}
	return *o.SessionRecording
}

// GetSessionRecordingOk returns a tuple with the SessionRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionsGateway) GetSessionRecordingOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionRecording) {
		return nil, false
	}
	return o.SessionRecording, true
}

// HasSessionRecording returns a boolean if a field has been set.
func (o *ConditionsGateway) HasSessionRecording() bool {
	if o != nil && !IsNil(o.SessionRecording) {
		return true
	}

	return false
}

// SetSessionRecording gets a reference to the given bool and assigns it to the SessionRecording field.
func (o *ConditionsGateway) SetSessionRecording(v bool) *ConditionsGateway {
	o.SessionRecording = &v
	return o
}

func (o ConditionsGateway) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConditionsGateway) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_type"] = o.Type
	if !IsNil(o.TrafficForwarding) {
		toSerialize["traffic_forwarding"] = o.TrafficForwarding
	}
	if !IsNil(o.SessionRecording) {
		toSerialize["session_recording"] = o.SessionRecording
	}
	return toSerialize, nil
}

type NullableConditionsGateway struct {
	value *ConditionsGateway
	isSet bool
}

func (v NullableConditionsGateway) Get() *ConditionsGateway {
	return v.value
}

func (v *NullableConditionsGateway) Set(val *ConditionsGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionsGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionsGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionsGateway(val *ConditionsGateway) *NullableConditionsGateway {
	return &NullableConditionsGateway{value: val, isSet: true}
}

func (v NullableConditionsGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionsGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
