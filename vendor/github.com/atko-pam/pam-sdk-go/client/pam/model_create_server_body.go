/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CreateServerBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServerBody{}

// CreateServerBody struct for CreateServerBody
type CreateServerBody struct {
	// The access address of the Server
	AccessAddress string `json:"access_address"`
	// Alternative names for the Server
	AltNames []string `json:"alt_names,omitempty"`
	// The hostname of the Server
	Hostname string `json:"hostname"`
}

// NewCreateServerBody instantiates a new CreateServerBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerBody(accessAddress string, hostname string) *CreateServerBody {
	this := CreateServerBody{}
	this.AccessAddress = accessAddress
	this.Hostname = hostname
	return &this
}

// NewCreateServerBodyWithDefaults instantiates a new CreateServerBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerBodyWithDefaults() *CreateServerBody {
	this := CreateServerBody{}
	return &this
}

// GetAccessAddress returns the AccessAddress field value
func (o *CreateServerBody) GetAccessAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessAddress
}

// GetAccessAddressOk returns a tuple with the AccessAddress field value
// and a boolean to check if the value has been set.
func (o *CreateServerBody) GetAccessAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessAddress, true
}

// SetAccessAddress sets field value
func (o *CreateServerBody) SetAccessAddress(v string) *CreateServerBody {
	o.AccessAddress = v
	return o
}

// GetAltNames returns the AltNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateServerBody) GetAltNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateServerBody) GetAltNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AltNames) {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *CreateServerBody) HasAltNames() bool {
	if o != nil && IsNil(o.AltNames) {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given []string and assigns it to the AltNames field.
func (o *CreateServerBody) SetAltNames(v []string) *CreateServerBody {
	o.AltNames = v
	return o
}

// GetHostname returns the Hostname field value
func (o *CreateServerBody) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *CreateServerBody) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *CreateServerBody) SetHostname(v string) *CreateServerBody {
	o.Hostname = v
	return o
}

func (o CreateServerBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServerBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_address"] = o.AccessAddress
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	toSerialize["hostname"] = o.Hostname
	return toSerialize, nil
}

type NullableCreateServerBody struct {
	value *CreateServerBody
	isSet bool
}

func (v NullableCreateServerBody) Get() *CreateServerBody {
	return v.value
}

func (v *NullableCreateServerBody) Set(val *CreateServerBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerBody(val *CreateServerBody) *NullableCreateServerBody {
	return &NullableCreateServerBody{value: val, isSet: true}
}

func (v NullableCreateServerBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
