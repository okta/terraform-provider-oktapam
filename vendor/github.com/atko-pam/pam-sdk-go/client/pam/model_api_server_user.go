/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the APIServerUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIServerUser{}

// APIServerUser struct for APIServerUser
type APIServerUser struct {
	// If `true`, indicates that the Server User has sudo permissions
	Admin bool `json:"admin"`
	// The UUID of Server User API object
	Id string `json:"id"`
	// The username used on Unix servers
	ServerUserName string `json:"server_user_name"`
	// The status of the Server User
	Status string `json:"status"`
	// Indicates if the account is a Service User or human user
	Type string `json:"type"`
	// The Unix GID of the Server User
	UnixGid int32 `json:"unix_gid"`
	// The Unix UID of the Server User
	UnixUid int32 `json:"unix_uid"`
	// The username of the related User
	UserName string `json:"user_name"`
	// The username used on Windows servers
	WindowsServerUserName string `json:"windows_server_user_name"`
}

// NewAPIServerUser instantiates a new APIServerUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIServerUser(admin bool, id string, serverUserName string, status string, type_ string, unixGid int32, unixUid int32, userName string, windowsServerUserName string) *APIServerUser {
	this := APIServerUser{}
	this.Admin = admin
	this.Id = id
	this.ServerUserName = serverUserName
	this.Status = status
	this.Type = type_
	this.UnixGid = unixGid
	this.UnixUid = unixUid
	this.UserName = userName
	this.WindowsServerUserName = windowsServerUserName
	return &this
}

// NewAPIServerUserWithDefaults instantiates a new APIServerUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIServerUserWithDefaults() *APIServerUser {
	this := APIServerUser{}
	return &this
}

// GetAdmin returns the Admin field value
func (o *APIServerUser) GetAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Admin
}

// GetAdminOk returns a tuple with the Admin field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetAdminOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Admin, true
}

// SetAdmin sets field value
func (o *APIServerUser) SetAdmin(v bool) *APIServerUser {
	o.Admin = v
	return o
}

// GetId returns the Id field value
func (o *APIServerUser) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIServerUser) SetId(v string) *APIServerUser {
	o.Id = v
	return o
}

// GetServerUserName returns the ServerUserName field value
func (o *APIServerUser) GetServerUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUserName
}

// GetServerUserNameOk returns a tuple with the ServerUserName field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetServerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUserName, true
}

// SetServerUserName sets field value
func (o *APIServerUser) SetServerUserName(v string) *APIServerUser {
	o.ServerUserName = v
	return o
}

// GetStatus returns the Status field value
func (o *APIServerUser) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *APIServerUser) SetStatus(v string) *APIServerUser {
	o.Status = v
	return o
}

// GetType returns the Type field value
func (o *APIServerUser) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *APIServerUser) SetType(v string) *APIServerUser {
	o.Type = v
	return o
}

// GetUnixGid returns the UnixGid field value
func (o *APIServerUser) GetUnixGid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnixGid
}

// GetUnixGidOk returns a tuple with the UnixGid field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetUnixGidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnixGid, true
}

// SetUnixGid sets field value
func (o *APIServerUser) SetUnixGid(v int32) *APIServerUser {
	o.UnixGid = v
	return o
}

// GetUnixUid returns the UnixUid field value
func (o *APIServerUser) GetUnixUid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnixUid
}

// GetUnixUidOk returns a tuple with the UnixUid field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetUnixUidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnixUid, true
}

// SetUnixUid sets field value
func (o *APIServerUser) SetUnixUid(v int32) *APIServerUser {
	o.UnixUid = v
	return o
}

// GetUserName returns the UserName field value
func (o *APIServerUser) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *APIServerUser) SetUserName(v string) *APIServerUser {
	o.UserName = v
	return o
}

// GetWindowsServerUserName returns the WindowsServerUserName field value
func (o *APIServerUser) GetWindowsServerUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WindowsServerUserName
}

// GetWindowsServerUserNameOk returns a tuple with the WindowsServerUserName field value
// and a boolean to check if the value has been set.
func (o *APIServerUser) GetWindowsServerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindowsServerUserName, true
}

// SetWindowsServerUserName sets field value
func (o *APIServerUser) SetWindowsServerUserName(v string) *APIServerUser {
	o.WindowsServerUserName = v
	return o
}

func (o APIServerUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIServerUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["admin"] = o.Admin
	toSerialize["id"] = o.Id
	toSerialize["server_user_name"] = o.ServerUserName
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	toSerialize["unix_gid"] = o.UnixGid
	toSerialize["unix_uid"] = o.UnixUid
	toSerialize["user_name"] = o.UserName
	toSerialize["windows_server_user_name"] = o.WindowsServerUserName
	return toSerialize, nil
}

type NullableAPIServerUser struct {
	value *APIServerUser
	isSet bool
}

func (v NullableAPIServerUser) Get() *APIServerUser {
	return v.value
}

func (v *NullableAPIServerUser) Set(val *APIServerUser) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIServerUser) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIServerUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIServerUser(val *APIServerUser) *NullableAPIServerUser {
	return &NullableAPIServerUser{value: val, isSet: true}
}

func (v NullableAPIServerUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIServerUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
