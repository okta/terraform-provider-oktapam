/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the WorkloadConnectionAuthzDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadConnectionAuthzDetails{}

// WorkloadConnectionAuthzDetails struct for WorkloadConnectionAuthzDetails
type WorkloadConnectionAuthzDetails struct {
	// The list of public keys that the workload connection trusts
	Keys []RawJSONWebKey `json:"keys"`
	// Indicates if DPoP is required for the workload connection. This is a process where a Workload has a private key,  and a token it is using has a flag baked into it indicating users  of this token must “demonstrate” ownership  of this specific private key on a per-request basis.
	RequireDpop *bool `json:"require_dpop,omitempty"`
	// Indicates if the OAT is trusted on first use
	EnforceTofu *bool `json:"enforce_tofu,omitempty"`
}

// NewWorkloadConnectionAuthzDetails instantiates a new WorkloadConnectionAuthzDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadConnectionAuthzDetails(keys []RawJSONWebKey) *WorkloadConnectionAuthzDetails {
	this := WorkloadConnectionAuthzDetails{}
	this.Keys = keys
	return &this
}

// NewWorkloadConnectionAuthzDetailsWithDefaults instantiates a new WorkloadConnectionAuthzDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadConnectionAuthzDetailsWithDefaults() *WorkloadConnectionAuthzDetails {
	this := WorkloadConnectionAuthzDetails{}
	return &this
}

// GetKeys returns the Keys field value
func (o *WorkloadConnectionAuthzDetails) GetKeys() []RawJSONWebKey {
	if o == nil {
		var ret []RawJSONWebKey
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *WorkloadConnectionAuthzDetails) GetKeysOk() ([]RawJSONWebKey, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *WorkloadConnectionAuthzDetails) SetKeys(v []RawJSONWebKey) *WorkloadConnectionAuthzDetails {
	o.Keys = v
	return o
}

// GetRequireDpop returns the RequireDpop field value if set, zero value otherwise.
func (o *WorkloadConnectionAuthzDetails) GetRequireDpop() bool {
	if o == nil || IsNil(o.RequireDpop) {
		var ret bool
		return ret
	}
	return *o.RequireDpop
}

// GetRequireDpopOk returns a tuple with the RequireDpop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadConnectionAuthzDetails) GetRequireDpopOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireDpop) {
		return nil, false
	}
	return o.RequireDpop, true
}

// HasRequireDpop returns a boolean if a field has been set.
func (o *WorkloadConnectionAuthzDetails) HasRequireDpop() bool {
	if o != nil && !IsNil(o.RequireDpop) {
		return true
	}

	return false
}

// SetRequireDpop gets a reference to the given bool and assigns it to the RequireDpop field.
func (o *WorkloadConnectionAuthzDetails) SetRequireDpop(v bool) *WorkloadConnectionAuthzDetails {
	o.RequireDpop = &v
	return o
}

// GetEnforceTofu returns the EnforceTofu field value if set, zero value otherwise.
func (o *WorkloadConnectionAuthzDetails) GetEnforceTofu() bool {
	if o == nil || IsNil(o.EnforceTofu) {
		var ret bool
		return ret
	}
	return *o.EnforceTofu
}

// GetEnforceTofuOk returns a tuple with the EnforceTofu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadConnectionAuthzDetails) GetEnforceTofuOk() (*bool, bool) {
	if o == nil || IsNil(o.EnforceTofu) {
		return nil, false
	}
	return o.EnforceTofu, true
}

// HasEnforceTofu returns a boolean if a field has been set.
func (o *WorkloadConnectionAuthzDetails) HasEnforceTofu() bool {
	if o != nil && !IsNil(o.EnforceTofu) {
		return true
	}

	return false
}

// SetEnforceTofu gets a reference to the given bool and assigns it to the EnforceTofu field.
func (o *WorkloadConnectionAuthzDetails) SetEnforceTofu(v bool) *WorkloadConnectionAuthzDetails {
	o.EnforceTofu = &v
	return o
}

func (o WorkloadConnectionAuthzDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadConnectionAuthzDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keys"] = o.Keys
	if !IsNil(o.RequireDpop) {
		toSerialize["require_dpop"] = o.RequireDpop
	}
	if !IsNil(o.EnforceTofu) {
		toSerialize["enforce_tofu"] = o.EnforceTofu
	}
	return toSerialize, nil
}

type NullableWorkloadConnectionAuthzDetails struct {
	value *WorkloadConnectionAuthzDetails
	isSet bool
}

func (v NullableWorkloadConnectionAuthzDetails) Get() *WorkloadConnectionAuthzDetails {
	return v.value
}

func (v *NullableWorkloadConnectionAuthzDetails) Set(val *WorkloadConnectionAuthzDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadConnectionAuthzDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadConnectionAuthzDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadConnectionAuthzDetails(val *WorkloadConnectionAuthzDetails) *NullableWorkloadConnectionAuthzDetails {
	return &NullableWorkloadConnectionAuthzDetails{value: val, isSet: true}
}

func (v NullableWorkloadConnectionAuthzDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadConnectionAuthzDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
