/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the RevealResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevealResponse{}

// RevealResponse A response containing an encrypted secret
type RevealResponse struct {
	// ID of the item being revealed
	Id *string `json:"id,omitempty"`
	// The encrypted Secret as a fully serialized JWE
	SecretJwe string `json:"secret_jwe"`
}

// NewRevealResponse instantiates a new RevealResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevealResponse(secretJwe string) *RevealResponse {
	this := RevealResponse{}
	this.SecretJwe = secretJwe
	return &this
}

// NewRevealResponseWithDefaults instantiates a new RevealResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevealResponseWithDefaults() *RevealResponse {
	this := RevealResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RevealResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevealResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RevealResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RevealResponse) SetId(v string) *RevealResponse {
	o.Id = &v
	return o
}

// GetSecretJwe returns the SecretJwe field value
func (o *RevealResponse) GetSecretJwe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretJwe
}

// GetSecretJweOk returns a tuple with the SecretJwe field value
// and a boolean to check if the value has been set.
func (o *RevealResponse) GetSecretJweOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretJwe, true
}

// SetSecretJwe sets field value
func (o *RevealResponse) SetSecretJwe(v string) *RevealResponse {
	o.SecretJwe = v
	return o
}

func (o RevealResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevealResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["secret_jwe"] = o.SecretJwe
	return toSerialize, nil
}

type NullableRevealResponse struct {
	value *RevealResponse
	isSet bool
}

func (v NullableRevealResponse) Get() *RevealResponse {
	return v.value
}

func (v *NullableRevealResponse) Set(val *RevealResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRevealResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRevealResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevealResponse(val *RevealResponse) *NullableRevealResponse {
	return &NullableRevealResponse{value: val, isSet: true}
}

func (v NullableRevealResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevealResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
