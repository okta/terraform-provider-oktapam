/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ListResourceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourceGroup{}

// ListResourceGroup struct for ListResourceGroup
type ListResourceGroup struct {
	// The UUID of the resource group
	Id *string `json:"id,omitempty"`
	// The name of the resource group
	Name *string `json:"name,omitempty"`
	// The UUID of the team associated with the resource group
	TeamId *string `json:"team_id,omitempty"`
	// A description of the resource group
	Description *string `json:"description,omitempty"`
}

// NewListResourceGroup instantiates a new ListResourceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourceGroup() *ListResourceGroup {
	this := ListResourceGroup{}
	return &this
}

// NewListResourceGroupWithDefaults instantiates a new ListResourceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourceGroupWithDefaults() *ListResourceGroup {
	this := ListResourceGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListResourceGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListResourceGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListResourceGroup) SetId(v string) *ListResourceGroup {
	o.Id = &v
	return o
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListResourceGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListResourceGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListResourceGroup) SetName(v string) *ListResourceGroup {
	o.Name = &v
	return o
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *ListResourceGroup) GetTeamId() string {
	if o == nil || IsNil(o.TeamId) {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceGroup) GetTeamIdOk() (*string, bool) {
	if o == nil || IsNil(o.TeamId) {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *ListResourceGroup) HasTeamId() bool {
	if o != nil && !IsNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *ListResourceGroup) SetTeamId(v string) *ListResourceGroup {
	o.TeamId = &v
	return o
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListResourceGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ListResourceGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListResourceGroup) SetDescription(v string) *ListResourceGroup {
	o.Description = &v
	return o
}

func (o ListResourceGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TeamId) {
		toSerialize["team_id"] = o.TeamId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableListResourceGroup struct {
	value *ListResourceGroup
	isSet bool
}

func (v NullableListResourceGroup) Get() *ListResourceGroup {
	return v.value
}

func (v *NullableListResourceGroup) Set(val *ListResourceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourceGroup(val *ListResourceGroup) *NullableListResourceGroup {
	return &NullableListResourceGroup{value: val, isSet: true}
}

func (v NullableListResourceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
