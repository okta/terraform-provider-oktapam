/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the CloudEntitlementJobAssignedUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudEntitlementJobAssignedUsers{}

// CloudEntitlementJobAssignedUsers struct for CloudEntitlementJobAssignedUsers
type CloudEntitlementJobAssignedUsers struct {
	// Whether to list users assigned to a specific group or associated with a specific permission set ARN
	FilterBy string `json:"filter_by"`
	// An AWS account ID. Required if you set `filter_by` to `account_id_and_permission_set_arn`.
	AccountId *string `json:"account_id,omitempty"`
	// An Amazon Resource Name (ARN) for your permission set. Required if you set `filter_by` to `account_id_and_permission_set_arn`.
	PermissionSetArn *string `json:"permission_set_arn,omitempty"`
	// An AWS group ID. Required if you set `filter_by` to `group_id`.
	GroupId *string `json:"group_id,omitempty"`
	// The UUID of the user resource in OPA. This is different than the AWS user ID.
	Id string `json:"id"`
	// The ID of the AWS user account
	UserId      string                                      `json:"user_id"`
	UserDetails CloudEntitlementJobAssignedUsersUserDetails `json:"user_details"`
	// A timestamp indicating when the user entry was discovered by OPA
	CreatedAt time.Time `json:"created_at"`
	// A timestamp indicating when the user entry was last seen by OPA
	UpdatedAt time.Time `json:"updated_at"`
}

// NewCloudEntitlementJobAssignedUsers instantiates a new CloudEntitlementJobAssignedUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudEntitlementJobAssignedUsers(filterBy string, id string, userId string, userDetails CloudEntitlementJobAssignedUsersUserDetails, createdAt time.Time, updatedAt time.Time) *CloudEntitlementJobAssignedUsers {
	this := CloudEntitlementJobAssignedUsers{}
	this.FilterBy = filterBy
	this.Id = id
	this.UserId = userId
	this.UserDetails = userDetails
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCloudEntitlementJobAssignedUsersWithDefaults instantiates a new CloudEntitlementJobAssignedUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudEntitlementJobAssignedUsersWithDefaults() *CloudEntitlementJobAssignedUsers {
	this := CloudEntitlementJobAssignedUsers{}
	return &this
}

// GetFilterBy returns the FilterBy field value
func (o *CloudEntitlementJobAssignedUsers) GetFilterBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterBy
}

// GetFilterByOk returns a tuple with the FilterBy field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetFilterByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterBy, true
}

// SetFilterBy sets field value
func (o *CloudEntitlementJobAssignedUsers) SetFilterBy(v string) *CloudEntitlementJobAssignedUsers {
	o.FilterBy = v
	return o
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CloudEntitlementJobAssignedUsers) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CloudEntitlementJobAssignedUsers) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CloudEntitlementJobAssignedUsers) SetAccountId(v string) *CloudEntitlementJobAssignedUsers {
	o.AccountId = &v
	return o
}

// GetPermissionSetArn returns the PermissionSetArn field value if set, zero value otherwise.
func (o *CloudEntitlementJobAssignedUsers) GetPermissionSetArn() string {
	if o == nil || IsNil(o.PermissionSetArn) {
		var ret string
		return ret
	}
	return *o.PermissionSetArn
}

// GetPermissionSetArnOk returns a tuple with the PermissionSetArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetPermissionSetArnOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionSetArn) {
		return nil, false
	}
	return o.PermissionSetArn, true
}

// HasPermissionSetArn returns a boolean if a field has been set.
func (o *CloudEntitlementJobAssignedUsers) HasPermissionSetArn() bool {
	if o != nil && !IsNil(o.PermissionSetArn) {
		return true
	}

	return false
}

// SetPermissionSetArn gets a reference to the given string and assigns it to the PermissionSetArn field.
func (o *CloudEntitlementJobAssignedUsers) SetPermissionSetArn(v string) *CloudEntitlementJobAssignedUsers {
	o.PermissionSetArn = &v
	return o
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *CloudEntitlementJobAssignedUsers) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *CloudEntitlementJobAssignedUsers) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *CloudEntitlementJobAssignedUsers) SetGroupId(v string) *CloudEntitlementJobAssignedUsers {
	o.GroupId = &v
	return o
}

// GetId returns the Id field value
func (o *CloudEntitlementJobAssignedUsers) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CloudEntitlementJobAssignedUsers) SetId(v string) *CloudEntitlementJobAssignedUsers {
	o.Id = v
	return o
}

// GetUserId returns the UserId field value
func (o *CloudEntitlementJobAssignedUsers) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CloudEntitlementJobAssignedUsers) SetUserId(v string) *CloudEntitlementJobAssignedUsers {
	o.UserId = v
	return o
}

// GetUserDetails returns the UserDetails field value
func (o *CloudEntitlementJobAssignedUsers) GetUserDetails() CloudEntitlementJobAssignedUsersUserDetails {
	if o == nil {
		var ret CloudEntitlementJobAssignedUsersUserDetails
		return ret
	}

	return o.UserDetails
}

// GetUserDetailsOk returns a tuple with the UserDetails field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetUserDetailsOk() (*CloudEntitlementJobAssignedUsersUserDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserDetails, true
}

// SetUserDetails sets field value
func (o *CloudEntitlementJobAssignedUsers) SetUserDetails(v CloudEntitlementJobAssignedUsersUserDetails) *CloudEntitlementJobAssignedUsers {
	o.UserDetails = v
	return o
}

// GetCreatedAt returns the CreatedAt field value
func (o *CloudEntitlementJobAssignedUsers) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CloudEntitlementJobAssignedUsers) SetCreatedAt(v time.Time) *CloudEntitlementJobAssignedUsers {
	o.CreatedAt = v
	return o
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CloudEntitlementJobAssignedUsers) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAssignedUsers) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CloudEntitlementJobAssignedUsers) SetUpdatedAt(v time.Time) *CloudEntitlementJobAssignedUsers {
	o.UpdatedAt = v
	return o
}

func (o CloudEntitlementJobAssignedUsers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudEntitlementJobAssignedUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filter_by"] = o.FilterBy
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.PermissionSetArn) {
		toSerialize["permission_set_arn"] = o.PermissionSetArn
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	toSerialize["id"] = o.Id
	toSerialize["user_id"] = o.UserId
	toSerialize["user_details"] = o.UserDetails
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableCloudEntitlementJobAssignedUsers struct {
	value *CloudEntitlementJobAssignedUsers
	isSet bool
}

func (v NullableCloudEntitlementJobAssignedUsers) Get() *CloudEntitlementJobAssignedUsers {
	return v.value
}

func (v *NullableCloudEntitlementJobAssignedUsers) Set(val *CloudEntitlementJobAssignedUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudEntitlementJobAssignedUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudEntitlementJobAssignedUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudEntitlementJobAssignedUsers(val *CloudEntitlementJobAssignedUsers) *NullableCloudEntitlementJobAssignedUsers {
	return &NullableCloudEntitlementJobAssignedUsers{value: val, isSet: true}
}

func (v NullableCloudEntitlementJobAssignedUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudEntitlementJobAssignedUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
