/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the TeamStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamStats{}

// TeamStats struct for TeamStats
type TeamStats struct {
	// The number of Clients in a Team
	NumClients int32 `json:"num_clients"`
	// The number of Gateways in a Team
	NumGateways int32 `json:"num_gateways"`
	// The number of Groups in a Team
	NumGroups int32 `json:"num_groups"`
	// The number of Users in a Team
	NumHumanUsers int32 `json:"num_human_users"`
	// The number of Projects in a Team
	NumProjects int32 `json:"num_projects"`
	// The number of Servers in a Team
	NumServers int32 `json:"num_servers"`
	// The number of Service Users in a Team
	NumServiceUsers int32 `json:"num_service_users"`
}

// NewTeamStats instantiates a new TeamStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamStats(numClients int32, numGateways int32, numGroups int32, numHumanUsers int32, numProjects int32, numServers int32, numServiceUsers int32) *TeamStats {
	this := TeamStats{}
	this.NumClients = numClients
	this.NumGateways = numGateways
	this.NumGroups = numGroups
	this.NumHumanUsers = numHumanUsers
	this.NumProjects = numProjects
	this.NumServers = numServers
	this.NumServiceUsers = numServiceUsers
	return &this
}

// NewTeamStatsWithDefaults instantiates a new TeamStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamStatsWithDefaults() *TeamStats {
	this := TeamStats{}
	return &this
}

// GetNumClients returns the NumClients field value
func (o *TeamStats) GetNumClients() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumClients
}

// GetNumClientsOk returns a tuple with the NumClients field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumClientsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumClients, true
}

// SetNumClients sets field value
func (o *TeamStats) SetNumClients(v int32) *TeamStats {
	o.NumClients = v
	return o
}

// GetNumGateways returns the NumGateways field value
func (o *TeamStats) GetNumGateways() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumGateways
}

// GetNumGatewaysOk returns a tuple with the NumGateways field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumGatewaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumGateways, true
}

// SetNumGateways sets field value
func (o *TeamStats) SetNumGateways(v int32) *TeamStats {
	o.NumGateways = v
	return o
}

// GetNumGroups returns the NumGroups field value
func (o *TeamStats) GetNumGroups() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumGroups
}

// GetNumGroupsOk returns a tuple with the NumGroups field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumGroupsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumGroups, true
}

// SetNumGroups sets field value
func (o *TeamStats) SetNumGroups(v int32) *TeamStats {
	o.NumGroups = v
	return o
}

// GetNumHumanUsers returns the NumHumanUsers field value
func (o *TeamStats) GetNumHumanUsers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumHumanUsers
}

// GetNumHumanUsersOk returns a tuple with the NumHumanUsers field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumHumanUsersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumHumanUsers, true
}

// SetNumHumanUsers sets field value
func (o *TeamStats) SetNumHumanUsers(v int32) *TeamStats {
	o.NumHumanUsers = v
	return o
}

// GetNumProjects returns the NumProjects field value
func (o *TeamStats) GetNumProjects() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumProjects
}

// GetNumProjectsOk returns a tuple with the NumProjects field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumProjectsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumProjects, true
}

// SetNumProjects sets field value
func (o *TeamStats) SetNumProjects(v int32) *TeamStats {
	o.NumProjects = v
	return o
}

// GetNumServers returns the NumServers field value
func (o *TeamStats) GetNumServers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumServers
}

// GetNumServersOk returns a tuple with the NumServers field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumServersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumServers, true
}

// SetNumServers sets field value
func (o *TeamStats) SetNumServers(v int32) *TeamStats {
	o.NumServers = v
	return o
}

// GetNumServiceUsers returns the NumServiceUsers field value
func (o *TeamStats) GetNumServiceUsers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumServiceUsers
}

// GetNumServiceUsersOk returns a tuple with the NumServiceUsers field value
// and a boolean to check if the value has been set.
func (o *TeamStats) GetNumServiceUsersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumServiceUsers, true
}

// SetNumServiceUsers sets field value
func (o *TeamStats) SetNumServiceUsers(v int32) *TeamStats {
	o.NumServiceUsers = v
	return o
}

func (o TeamStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["num_clients"] = o.NumClients
	toSerialize["num_gateways"] = o.NumGateways
	toSerialize["num_groups"] = o.NumGroups
	toSerialize["num_human_users"] = o.NumHumanUsers
	toSerialize["num_projects"] = o.NumProjects
	toSerialize["num_servers"] = o.NumServers
	toSerialize["num_service_users"] = o.NumServiceUsers
	return toSerialize, nil
}

type NullableTeamStats struct {
	value *TeamStats
	isSet bool
}

func (v NullableTeamStats) Get() *TeamStats {
	return v.value
}

func (v *NullableTeamStats) Set(val *TeamStats) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamStats) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamStats(val *TeamStats) *NullableTeamStats {
	return &NullableTeamStats{value: val, isSet: true}
}

func (v NullableTeamStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
