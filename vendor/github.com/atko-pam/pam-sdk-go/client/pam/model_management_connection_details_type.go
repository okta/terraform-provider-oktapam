/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// ManagementConnectionDetailsType The type of management connection details
type ManagementConnectionDetailsType string

// List of ManagementConnectionDetailsType
const (
	ManagementConnectionDetailsType_MYSQL_BASIC_AUTH ManagementConnectionDetailsType = "mysql.basic_auth"
)

// All allowed values of ManagementConnectionDetailsType enum
var AllowedManagementConnectionDetailsTypeEnumValues = []ManagementConnectionDetailsType{
	"mysql.basic_auth",
}

func (v *ManagementConnectionDetailsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ManagementConnectionDetailsType(value)

	*v = enumTypeValue

	return nil
}

// NewManagementConnectionDetailsTypeFromValue returns a pointer to a valid ManagementConnectionDetailsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagementConnectionDetailsTypeFromValue(v string) (*ManagementConnectionDetailsType, error) {
	ev := ManagementConnectionDetailsType(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagementConnectionDetailsType) IsValid() bool {
	for _, existing := range AllowedManagementConnectionDetailsTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ManagementConnectionDetailsType value
func (v ManagementConnectionDetailsType) Ptr() *ManagementConnectionDetailsType {
	return &v
}

type NullableManagementConnectionDetailsType struct {
	value *ManagementConnectionDetailsType
	isSet bool
}

func (v NullableManagementConnectionDetailsType) Get() *ManagementConnectionDetailsType {
	return v.value
}

func (v *NullableManagementConnectionDetailsType) Set(val *ManagementConnectionDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementConnectionDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementConnectionDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementConnectionDetailsType(val *ManagementConnectionDetailsType) *NullableManagementConnectionDetailsType {
	return &NullableManagementConnectionDetailsType{value: val, isSet: true}
}

func (v NullableManagementConnectionDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementConnectionDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
