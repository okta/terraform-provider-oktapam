/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the ServerAccountCheckedOutResourceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerAccountCheckedOutResourceDetails{}

// ServerAccountCheckedOutResourceDetails struct for ServerAccountCheckedOutResourceDetails
type ServerAccountCheckedOutResourceDetails struct {
	// Type of this Resource object
	Type *string `json:"_type,omitempty"`
	// The hostname of the server associated with the Resource
	Hostname string `json:"hostname"`
	// The UUID of the server associated with the Resource
	ServerId string `json:"server_id"`
}

// NewServerAccountCheckedOutResourceDetails instantiates a new ServerAccountCheckedOutResourceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerAccountCheckedOutResourceDetails(hostname string, serverId string) *ServerAccountCheckedOutResourceDetails {
	this := ServerAccountCheckedOutResourceDetails{}
	this.Hostname = hostname
	this.ServerId = serverId
	return &this
}

// NewServerAccountCheckedOutResourceDetailsWithDefaults instantiates a new ServerAccountCheckedOutResourceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerAccountCheckedOutResourceDetailsWithDefaults() *ServerAccountCheckedOutResourceDetails {
	this := ServerAccountCheckedOutResourceDetails{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServerAccountCheckedOutResourceDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerAccountCheckedOutResourceDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServerAccountCheckedOutResourceDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServerAccountCheckedOutResourceDetails) SetType(v string) *ServerAccountCheckedOutResourceDetails {
	o.Type = &v
	return o
}

// GetHostname returns the Hostname field value
func (o *ServerAccountCheckedOutResourceDetails) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *ServerAccountCheckedOutResourceDetails) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *ServerAccountCheckedOutResourceDetails) SetHostname(v string) *ServerAccountCheckedOutResourceDetails {
	o.Hostname = v
	return o
}

// GetServerId returns the ServerId field value
func (o *ServerAccountCheckedOutResourceDetails) GetServerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value
// and a boolean to check if the value has been set.
func (o *ServerAccountCheckedOutResourceDetails) GetServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerId, true
}

// SetServerId sets field value
func (o *ServerAccountCheckedOutResourceDetails) SetServerId(v string) *ServerAccountCheckedOutResourceDetails {
	o.ServerId = v
	return o
}

func (o ServerAccountCheckedOutResourceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerAccountCheckedOutResourceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["_type"] = o.Type
	}
	toSerialize["hostname"] = o.Hostname
	toSerialize["server_id"] = o.ServerId
	return toSerialize, nil
}

type NullableServerAccountCheckedOutResourceDetails struct {
	value *ServerAccountCheckedOutResourceDetails
	isSet bool
}

func (v NullableServerAccountCheckedOutResourceDetails) Get() *ServerAccountCheckedOutResourceDetails {
	return v.value
}

func (v *NullableServerAccountCheckedOutResourceDetails) Set(val *ServerAccountCheckedOutResourceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableServerAccountCheckedOutResourceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableServerAccountCheckedOutResourceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerAccountCheckedOutResourceDetails(val *ServerAccountCheckedOutResourceDetails) *NullableServerAccountCheckedOutResourceDetails {
	return &NullableServerAccountCheckedOutResourceDetails{value: val, isSet: true}
}

func (v NullableServerAccountCheckedOutResourceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerAccountCheckedOutResourceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
