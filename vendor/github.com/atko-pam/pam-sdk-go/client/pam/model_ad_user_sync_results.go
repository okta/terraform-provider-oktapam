/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
	"time"
)

// checks if the ADUserSyncResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADUserSyncResults{}

// ADUserSyncResults struct for ADUserSyncResults
type ADUserSyncResults struct {
	// The UUID of the results from a specific user sync job run
	Id *string `json:"id,omitempty"`
	// The UUID of the associated user sync job
	AdUserSyncTaskSettingsId *string `json:"ad_user_sync_task_settings_id,omitempty"`
	// The name of the associated user sync job
	AdUserSyncTaskSettingsName *string `json:"ad_user_sync_task_settings_name,omitempty"`
	// A timestamp that indicates when the job run was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A timestamp that indicates when the job run was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The state of the specific user sync job. Possible values: `running`, `done`, `error`
	TaskState *string `json:"task_state,omitempty"`
	// The UUID of the test run for the user sync job
	AdUserSyncTestRequestId *string                  `json:"ad_user_sync_test_request_id,omitempty"`
	Status                  *ADUserSyncResultsStatus `json:"status,omitempty"`
}

// NewADUserSyncResults instantiates a new ADUserSyncResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADUserSyncResults() *ADUserSyncResults {
	this := ADUserSyncResults{}
	return &this
}

// NewADUserSyncResultsWithDefaults instantiates a new ADUserSyncResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADUserSyncResultsWithDefaults() *ADUserSyncResults {
	this := ADUserSyncResults{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ADUserSyncResults) SetId(v string) *ADUserSyncResults {
	o.Id = &v
	return o
}

// GetAdUserSyncTaskSettingsId returns the AdUserSyncTaskSettingsId field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetAdUserSyncTaskSettingsId() string {
	if o == nil || IsNil(o.AdUserSyncTaskSettingsId) {
		var ret string
		return ret
	}
	return *o.AdUserSyncTaskSettingsId
}

// GetAdUserSyncTaskSettingsIdOk returns a tuple with the AdUserSyncTaskSettingsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetAdUserSyncTaskSettingsIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserSyncTaskSettingsId) {
		return nil, false
	}
	return o.AdUserSyncTaskSettingsId, true
}

// HasAdUserSyncTaskSettingsId returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasAdUserSyncTaskSettingsId() bool {
	if o != nil && !IsNil(o.AdUserSyncTaskSettingsId) {
		return true
	}

	return false
}

// SetAdUserSyncTaskSettingsId gets a reference to the given string and assigns it to the AdUserSyncTaskSettingsId field.
func (o *ADUserSyncResults) SetAdUserSyncTaskSettingsId(v string) *ADUserSyncResults {
	o.AdUserSyncTaskSettingsId = &v
	return o
}

// GetAdUserSyncTaskSettingsName returns the AdUserSyncTaskSettingsName field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetAdUserSyncTaskSettingsName() string {
	if o == nil || IsNil(o.AdUserSyncTaskSettingsName) {
		var ret string
		return ret
	}
	return *o.AdUserSyncTaskSettingsName
}

// GetAdUserSyncTaskSettingsNameOk returns a tuple with the AdUserSyncTaskSettingsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetAdUserSyncTaskSettingsNameOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserSyncTaskSettingsName) {
		return nil, false
	}
	return o.AdUserSyncTaskSettingsName, true
}

// HasAdUserSyncTaskSettingsName returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasAdUserSyncTaskSettingsName() bool {
	if o != nil && !IsNil(o.AdUserSyncTaskSettingsName) {
		return true
	}

	return false
}

// SetAdUserSyncTaskSettingsName gets a reference to the given string and assigns it to the AdUserSyncTaskSettingsName field.
func (o *ADUserSyncResults) SetAdUserSyncTaskSettingsName(v string) *ADUserSyncResults {
	o.AdUserSyncTaskSettingsName = &v
	return o
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ADUserSyncResults) SetCreatedAt(v time.Time) *ADUserSyncResults {
	o.CreatedAt = &v
	return o
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ADUserSyncResults) SetUpdatedAt(v time.Time) *ADUserSyncResults {
	o.UpdatedAt = &v
	return o
}

// GetTaskState returns the TaskState field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetTaskState() string {
	if o == nil || IsNil(o.TaskState) {
		var ret string
		return ret
	}
	return *o.TaskState
}

// GetTaskStateOk returns a tuple with the TaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetTaskStateOk() (*string, bool) {
	if o == nil || IsNil(o.TaskState) {
		return nil, false
	}
	return o.TaskState, true
}

// HasTaskState returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasTaskState() bool {
	if o != nil && !IsNil(o.TaskState) {
		return true
	}

	return false
}

// SetTaskState gets a reference to the given string and assigns it to the TaskState field.
func (o *ADUserSyncResults) SetTaskState(v string) *ADUserSyncResults {
	o.TaskState = &v
	return o
}

// GetAdUserSyncTestRequestId returns the AdUserSyncTestRequestId field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetAdUserSyncTestRequestId() string {
	if o == nil || IsNil(o.AdUserSyncTestRequestId) {
		var ret string
		return ret
	}
	return *o.AdUserSyncTestRequestId
}

// GetAdUserSyncTestRequestIdOk returns a tuple with the AdUserSyncTestRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetAdUserSyncTestRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserSyncTestRequestId) {
		return nil, false
	}
	return o.AdUserSyncTestRequestId, true
}

// HasAdUserSyncTestRequestId returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasAdUserSyncTestRequestId() bool {
	if o != nil && !IsNil(o.AdUserSyncTestRequestId) {
		return true
	}

	return false
}

// SetAdUserSyncTestRequestId gets a reference to the given string and assigns it to the AdUserSyncTestRequestId field.
func (o *ADUserSyncResults) SetAdUserSyncTestRequestId(v string) *ADUserSyncResults {
	o.AdUserSyncTestRequestId = &v
	return o
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ADUserSyncResults) GetStatus() ADUserSyncResultsStatus {
	if o == nil || IsNil(o.Status) {
		var ret ADUserSyncResultsStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserSyncResults) GetStatusOk() (*ADUserSyncResultsStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ADUserSyncResults) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ADUserSyncResultsStatus and assigns it to the Status field.
func (o *ADUserSyncResults) SetStatus(v ADUserSyncResultsStatus) *ADUserSyncResults {
	o.Status = &v
	return o
}

func (o ADUserSyncResults) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADUserSyncResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AdUserSyncTaskSettingsId) {
		toSerialize["ad_user_sync_task_settings_id"] = o.AdUserSyncTaskSettingsId
	}
	if !IsNil(o.AdUserSyncTaskSettingsName) {
		toSerialize["ad_user_sync_task_settings_name"] = o.AdUserSyncTaskSettingsName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.TaskState) {
		toSerialize["task_state"] = o.TaskState
	}
	if !IsNil(o.AdUserSyncTestRequestId) {
		toSerialize["ad_user_sync_test_request_id"] = o.AdUserSyncTestRequestId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableADUserSyncResults struct {
	value *ADUserSyncResults
	isSet bool
}

func (v NullableADUserSyncResults) Get() *ADUserSyncResults {
	return v.value
}

func (v *NullableADUserSyncResults) Set(val *ADUserSyncResults) {
	v.value = val
	v.isSet = true
}

func (v NullableADUserSyncResults) IsSet() bool {
	return v.isSet
}

func (v *NullableADUserSyncResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADUserSyncResults(val *ADUserSyncResults) *NullableADUserSyncResults {
	return &NullableADUserSyncResults{value: val, isSet: true}
}

func (v NullableADUserSyncResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADUserSyncResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
