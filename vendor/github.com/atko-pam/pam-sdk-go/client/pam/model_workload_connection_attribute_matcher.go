/*
Okta Privileged Access

The Okta Privileged Access API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// WorkloadConnectionAttributeMatcher The condition to match the source attribute with
type WorkloadConnectionAttributeMatcher string

// List of WorkloadConnectionAttributeMatcher
const (
	WorkloadConnectionAttributeMatcher_EQUALS                  WorkloadConnectionAttributeMatcher = "EQUALS"
	WorkloadConnectionAttributeMatcher_EQUALS_CASE_INSENSITIVE WorkloadConnectionAttributeMatcher = "EQUALS_CASE_INSENSITIVE"
	WorkloadConnectionAttributeMatcher_EXISTS                  WorkloadConnectionAttributeMatcher = "EXISTS"
	WorkloadConnectionAttributeMatcher_STARTS_WITH             WorkloadConnectionAttributeMatcher = "STARTS_WITH"
)

// All allowed values of WorkloadConnectionAttributeMatcher enum
var AllowedWorkloadConnectionAttributeMatcherEnumValues = []WorkloadConnectionAttributeMatcher{
	"EQUALS",
	"EQUALS_CASE_INSENSITIVE",
	"EXISTS",
	"STARTS_WITH",
}

func (v *WorkloadConnectionAttributeMatcher) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkloadConnectionAttributeMatcher(value)

	*v = enumTypeValue

	return nil
}

// NewWorkloadConnectionAttributeMatcherFromValue returns a pointer to a valid WorkloadConnectionAttributeMatcher
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkloadConnectionAttributeMatcherFromValue(v string) (*WorkloadConnectionAttributeMatcher, error) {
	ev := WorkloadConnectionAttributeMatcher(v)

	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkloadConnectionAttributeMatcher) IsValid() bool {
	for _, existing := range AllowedWorkloadConnectionAttributeMatcherEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkloadConnectionAttributeMatcher value
func (v WorkloadConnectionAttributeMatcher) Ptr() *WorkloadConnectionAttributeMatcher {
	return &v
}

type NullableWorkloadConnectionAttributeMatcher struct {
	value *WorkloadConnectionAttributeMatcher
	isSet bool
}

func (v NullableWorkloadConnectionAttributeMatcher) Get() *WorkloadConnectionAttributeMatcher {
	return v.value
}

func (v *NullableWorkloadConnectionAttributeMatcher) Set(val *WorkloadConnectionAttributeMatcher) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadConnectionAttributeMatcher) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadConnectionAttributeMatcher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadConnectionAttributeMatcher(val *WorkloadConnectionAttributeMatcher) *NullableWorkloadConnectionAttributeMatcher {
	return &NullableWorkloadConnectionAttributeMatcher{value: val, isSet: true}
}

func (v NullableWorkloadConnectionAttributeMatcher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadConnectionAttributeMatcher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
