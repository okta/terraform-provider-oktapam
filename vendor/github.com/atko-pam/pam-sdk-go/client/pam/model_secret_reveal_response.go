/*
Okta Privileged Access

The ScaleFT API is a control plane API for operations in Okta Privileged Access (formerly ScaleFT)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the SecretRevealResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretRevealResponse{}

// SecretRevealResponse struct for SecretRevealResponse
type SecretRevealResponse struct {
	// The UUID of the Secret
	Id string `json:"id"`
	// The name of the Secret
	Name string `json:"name"`
	// The description of the Secret
	Description NullableString `json:"description,omitempty"`
	Path        *SecretPath    `json:"path,omitempty"`
	// The encrypted Secret as a fully serialized JWE
	SecretJwe string `json:"secret_jwe"`
}

// NewSecretRevealResponse instantiates a new SecretRevealResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretRevealResponse(id string, name string, secretJwe string) *SecretRevealResponse {
	this := SecretRevealResponse{}
	this.Id = id
	this.Name = name
	this.SecretJwe = secretJwe
	return &this
}

// NewSecretRevealResponseWithDefaults instantiates a new SecretRevealResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretRevealResponseWithDefaults() *SecretRevealResponse {
	this := SecretRevealResponse{}
	return &this
}

// GetId returns the Id field value
func (o *SecretRevealResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecretRevealResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecretRevealResponse) SetId(v string) *SecretRevealResponse {
	o.Id = v
	return o
}

// GetName returns the Name field value
func (o *SecretRevealResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecretRevealResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecretRevealResponse) SetName(v string) *SecretRevealResponse {
	o.Name = v
	return o
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecretRevealResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecretRevealResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecretRevealResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecretRevealResponse) SetDescription(v string) *SecretRevealResponse {
	o.Description.Set(&v)
	return o
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecretRevealResponse) SetDescriptionNil() *SecretRevealResponse {
	o.Description.Set(nil)
	return o
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecretRevealResponse) UnsetDescription() *SecretRevealResponse {
	o.Description.Unset()
	return o
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SecretRevealResponse) GetPath() SecretPath {
	if o == nil || IsNil(o.Path) {
		var ret SecretPath
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretRevealResponse) GetPathOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SecretRevealResponse) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given SecretPath and assigns it to the Path field.
func (o *SecretRevealResponse) SetPath(v SecretPath) *SecretRevealResponse {
	o.Path = &v
	return o
}

// GetSecretJwe returns the SecretJwe field value
func (o *SecretRevealResponse) GetSecretJwe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretJwe
}

// GetSecretJweOk returns a tuple with the SecretJwe field value
// and a boolean to check if the value has been set.
func (o *SecretRevealResponse) GetSecretJweOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretJwe, true
}

// SetSecretJwe sets field value
func (o *SecretRevealResponse) SetSecretJwe(v string) *SecretRevealResponse {
	o.SecretJwe = v
	return o
}

func (o SecretRevealResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretRevealResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	toSerialize["secret_jwe"] = o.SecretJwe
	return toSerialize, nil
}

type NullableSecretRevealResponse struct {
	value *SecretRevealResponse
	isSet bool
}

func (v NullableSecretRevealResponse) Get() *SecretRevealResponse {
	return v.value
}

func (v *NullableSecretRevealResponse) Set(val *SecretRevealResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretRevealResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretRevealResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretRevealResponse(val *SecretRevealResponse) *NullableSecretRevealResponse {
	return &NullableSecretRevealResponse{value: val, isSet: true}
}

func (v NullableSecretRevealResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretRevealResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
