/*
Okta Privileged Access

The OPA API is a control plane used to request operations in Okta Privileged Access (formerly ScaleFT/Advanced Server Access)

API version: 1.0.0
Contact: support@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pam

import (
	"encoding/json"
)

// checks if the CloudEntitlementJobAnalysisRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudEntitlementJobAnalysisRules{}

// CloudEntitlementJobAnalysisRules The specific properties used to filter the discovered resources
type CloudEntitlementJobAnalysisRules struct {
	AdditionalPropertiesField *string `json:"additionalProperties,omitempty"`
}

// NewCloudEntitlementJobAnalysisRules instantiates a new CloudEntitlementJobAnalysisRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudEntitlementJobAnalysisRules() *CloudEntitlementJobAnalysisRules {
	this := CloudEntitlementJobAnalysisRules{}
	return &this
}

// NewCloudEntitlementJobAnalysisRulesWithDefaults instantiates a new CloudEntitlementJobAnalysisRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudEntitlementJobAnalysisRulesWithDefaults() *CloudEntitlementJobAnalysisRules {
	this := CloudEntitlementJobAnalysisRules{}
	return &this
}

// GetAdditionalPropertiesField returns the AdditionalPropertiesField field value if set, zero value otherwise.
func (o *CloudEntitlementJobAnalysisRules) GetAdditionalPropertiesField() string {
	if o == nil || IsNil(o.AdditionalPropertiesField) {
		var ret string
		return ret
	}
	return *o.AdditionalPropertiesField
}

// GetAdditionalPropertiesFieldOk returns a tuple with the AdditionalPropertiesField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudEntitlementJobAnalysisRules) GetAdditionalPropertiesFieldOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalPropertiesField) {
		return nil, false
	}
	return o.AdditionalPropertiesField, true
}

// HasAdditionalPropertiesField returns a boolean if a field has been set.
func (o *CloudEntitlementJobAnalysisRules) HasAdditionalPropertiesField() bool {
	if o != nil && !IsNil(o.AdditionalPropertiesField) {
		return true
	}

	return false
}

// SetAdditionalPropertiesField gets a reference to the given string and assigns it to the AdditionalPropertiesField field.
func (o *CloudEntitlementJobAnalysisRules) SetAdditionalPropertiesField(v string) *CloudEntitlementJobAnalysisRules {
	o.AdditionalPropertiesField = &v
	return o
}

func (o CloudEntitlementJobAnalysisRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudEntitlementJobAnalysisRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalPropertiesField) {
		toSerialize["additionalProperties"] = o.AdditionalPropertiesField
	}
	return toSerialize, nil
}

type NullableCloudEntitlementJobAnalysisRules struct {
	value *CloudEntitlementJobAnalysisRules
	isSet bool
}

func (v NullableCloudEntitlementJobAnalysisRules) Get() *CloudEntitlementJobAnalysisRules {
	return v.value
}

func (v *NullableCloudEntitlementJobAnalysisRules) Set(val *CloudEntitlementJobAnalysisRules) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudEntitlementJobAnalysisRules) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudEntitlementJobAnalysisRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudEntitlementJobAnalysisRules(val *CloudEntitlementJobAnalysisRules) *NullableCloudEntitlementJobAnalysisRules {
	return &NullableCloudEntitlementJobAnalysisRules{value: val, isSet: true}
}

func (v NullableCloudEntitlementJobAnalysisRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudEntitlementJobAnalysisRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
